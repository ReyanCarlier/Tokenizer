{
	"id": "b4cedd15ae8cc2727cefef8ed48749ad",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// Ce contrat intelligent est pour le token ERC20 \"42TOKEN\" (42TOK)\n// Il est basé sur les contrats OpenZeppelin et est un contrat évolutif (upgradeable)\n// Il est déployé sur le réseau de test Sepolia.\n// @Auteur: Recalie\n// @Date: 29-01-2024\n// @Version: 1\n\n// Sélection de la version du compilateur Solidity\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MyToken is ERC20, Ownable {\n    address private _reserveAddress;\n    uint256 private _maxWhaleAmount;\n    \n    constructor(address initialOwner, address reserveAddress) ERC20(\"42TOKEN\", \"42TOK\") Ownable(initialOwner) {\n        _mint(initialOwner, 1000000 * (10 ** uint256(decimals())));\n        _maxWhaleAmount = 100000 * (10 ** uint256(decimals()));\n        _reserveAddress = reserveAddress;\n    }\n\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        require(amount <= _maxWhaleAmount || msg.sender == owner(), \"Transfer amount exceeds whale limit\");\n\n        uint256 reserveAmount = (amount * 1) / 100; // Calcul du montant à envoyer à la réserve (1%)\n        uint256 transferAmount = amount - reserveAmount; // Montant à transférer à l'adresse du destinataire\n\n        _transfer(msg.sender, recipient, transferAmount); // Transfert au destinataire\n        _transfer(msg.sender, _reserveAddress, reserveAmount); // Transfert à la réserve\n        return true;\n    }\n\n    function setMaxWhaleAmount(uint256 amount) public onlyOwner {\n        _maxWhaleAmount = amount;\n    }\n\n    function getOwner() public view returns (address) {\n        return owner();\n    }\n\n    // Fonction pour déposer des jetons dans la réserve\n    function depositToReserve(uint256 amount) public onlyOwner {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(balanceOf(msg.sender) >= amount, \"Not enough balance to deposit\");\n        _transfer(msg.sender, _reserveAddress, amount);\n    }\n    \n    // Fonction pour retirer des jetons de la réserve\n    function withdrawFromReserve(uint256 amount, address target) public onlyOwner {\n        if (target == getOwner())\n        {\n            require(false, \"Withdraw to owner is not allowed.\");\n        }\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(balanceOf(_reserveAddress) >= amount, \"Not enough balance to withdraw\");\n        _transfer(_reserveAddress, msg.sender, amount);\n    }\n    \n    // Fonction pour récupérer le montant maximum de jetons qu'un utilisateur peut envoyer\n    function getMaxWhaleAmount() public view returns (uint256) {\n        return _maxWhaleAmount;\n    }\n    \n    // Fonction pour récupérer l'adresse de la réserve\n    function getReserveAddress() public view returns (address) {\n        return _reserveAddress;\n    }\n    \n    // Fonction pour récupérer le solde de la réserve\n    function getReserveBalance() public view returns (uint256) {\n        return balanceOf(_reserveAddress);\n    }\n    \n    // Fonction pour récupérer le solde de l'adresse du propriétaire\n    function getOwnerBalance() public view returns (uint256) {\n        return balanceOf(owner());\n    }\n}\n\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "reserveAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxWhaleAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwnerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserveAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserveBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setMaxWhaleAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "withdrawFromReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":486:3242  contract MyToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":606:893  constructor(address initialOwner, address reserveAddress) ERC20(\"42TOKEN\", \"42TOK\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MyToken.sol\":698:710  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x3432544f4b454e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x3432544f4b000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/MyToken.sol\":722:780  _mint(initialOwner, 1000000 * (10 ** uint256(decimals()))) */\n  tag_18\n    /* \"contracts/MyToken.sol\":728:740  initialOwner */\n  dup3\n    /* \"contracts/MyToken.sol\":767:777  decimals() */\n  tag_19\n    /* \"contracts/MyToken.sol\":767:775  decimals */\n  shl(0x20, tag_20)\n    /* \"contracts/MyToken.sol\":767:777  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contracts/MyToken.sol\":759:778  uint256(decimals()) */\n  0xff\n  and\n    /* \"contracts/MyToken.sol\":753:755  10 */\n  0x0a\n    /* \"contracts/MyToken.sol\":753:778  10 ** uint256(decimals()) */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/MyToken.sol\":742:749  1000000 */\n  0x0f4240\n    /* \"contracts/MyToken.sol\":742:779  1000000 * (10 ** uint256(decimals())) */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/MyToken.sol\":722:727  _mint */\n  shl(0x20, tag_25)\n    /* \"contracts/MyToken.sol\":722:780  _mint(initialOwner, 1000000 * (10 ** uint256(decimals()))) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/MyToken.sol\":832:842  decimals() */\n  tag_26\n    /* \"contracts/MyToken.sol\":832:840  decimals */\n  shl(0x20, tag_20)\n    /* \"contracts/MyToken.sol\":832:842  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"contracts/MyToken.sol\":824:843  uint256(decimals()) */\n  0xff\n  and\n    /* \"contracts/MyToken.sol\":818:820  10 */\n  0x0a\n    /* \"contracts/MyToken.sol\":818:843  10 ** uint256(decimals()) */\n  tag_27\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_27:\n    /* \"contracts/MyToken.sol\":808:814  100000 */\n  0x0186a0\n    /* \"contracts/MyToken.sol\":808:844  100000 * (10 ** uint256(decimals())) */\n  tag_28\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_28:\n    /* \"contracts/MyToken.sol\":790:805  _maxWhaleAmount */\n  0x07\n    /* \"contracts/MyToken.sol\":790:844  _maxWhaleAmount = 100000 * (10 ** uint256(decimals())) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":872:886  reserveAddress */\n  dup1\n    /* \"contracts/MyToken.sol\":854:869  _reserveAddress */\n  0x06\n  0x00\n    /* \"contracts/MyToken.sol\":854:886  _reserveAddress = reserveAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":606:893  constructor(address initialOwner, address reserveAddress) ERC20(\"42TOKEN\", \"42TOK\") Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":486:3242  contract MyToken is ERC20, Ownable {... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_34\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_34:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_35\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_36)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_41)\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_46)\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_50:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_52:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_53:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_88\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_52\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_54:\n    /* \"#utility.yul\":641:665   */\n  tag_90\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_53\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_91:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_55:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_93\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_54\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_96\n  tag_50\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":949:1068   */\ntag_95:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_97\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_55\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_98\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_55\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_56:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_57:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_58:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_59:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_103:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_105\n  tag_58\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2065:2149   */\ntag_104:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_60:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_61:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_62:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_63:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_110\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_62\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2780:2819   */\n  tag_111\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_62\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_64:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_65:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_66:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_115\n    /* \"#utility.yul\":3169:3203   */\n  tag_116\n    /* \"#utility.yul\":3178:3202   */\n  tag_117\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_64\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3169:3203   */\n  tag_65\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3151:3204   */\n  tag_64\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_67:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_68:\n    /* \"#utility.yul\":3407:3446   */\n  tag_120\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_66\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3468:3559   */\n  tag_121\n    /* \"#utility.yul\":3517:3558   */\n  tag_122\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_67\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_63\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_69:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_70:\n    /* \"#utility.yul\":3728:3760   */\n  tag_125\n  tag_69\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3769:3834   */\n  tag_126\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_68\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_71:\n    /* \"#utility.yul\":3906:4026   */\ntag_128:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_131\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_70\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_72:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_134\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_60\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4257:4286   */\n  tag_135\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_61\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_136:\n    /* \"#utility.yul\":4484:4564   */\n  tag_137\n    /* \"#utility.yul\":4540:4562   */\n  tag_138\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_61\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_71\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_133:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_73:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_74:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_141\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_73\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_75:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_143\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_74\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_9:\n    /* \"#utility.yul\":5301:5338   */\n  tag_145\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_56\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_147\n  tag_57\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5389:5445   */\ntag_146:\n    /* \"#utility.yul\":5469:5507   */\n  tag_148\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_59\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5554:5621   */\n  tag_149\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_72\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_151\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_152:\n    /* \"#utility.yul\":6495:6562   */\n  tag_153\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_75\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_150)\n    /* \"#utility.yul\":5716:6334   */\ntag_151:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_154\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_60\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_155:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_155)\ntag_157:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_159\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_74\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_158:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_150:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6585:6703   */\ntag_76:\n    /* \"#utility.yul\":6672:6696   */\n  tag_161\n    /* \"#utility.yul\":6690:6695   */\n  dup2\n    /* \"#utility.yul\":6672:6696   */\n  tag_53\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6667:6670   */\n  dup3\n    /* \"#utility.yul\":6660:6697   */\n  mstore\n    /* \"#utility.yul\":6585:6703   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6709:6931   */\ntag_14:\n    /* \"#utility.yul\":6802:6806   */\n  0x00\n    /* \"#utility.yul\":6840:6842   */\n  0x20\n    /* \"#utility.yul\":6829:6838   */\n  dup3\n    /* \"#utility.yul\":6825:6843   */\n  add\n    /* \"#utility.yul\":6817:6843   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:6924   */\n  tag_163\n    /* \"#utility.yul\":6921:6922   */\n  0x00\n    /* \"#utility.yul\":6910:6919   */\n  dup4\n    /* \"#utility.yul\":6906:6923   */\n  add\n    /* \"#utility.yul\":6897:6903   */\n  dup5\n    /* \"#utility.yul\":6853:6924   */\n  tag_76\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6709:6931   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6937:7117   */\ntag_77:\n    /* \"#utility.yul\":6985:7062   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6982:6983   */\n  0x00\n    /* \"#utility.yul\":6975:7063   */\n  mstore\n    /* \"#utility.yul\":7082:7086   */\n  0x11\n    /* \"#utility.yul\":7079:7080   */\n  0x04\n    /* \"#utility.yul\":7072:7087   */\n  mstore\n    /* \"#utility.yul\":7106:7110   */\n  0x24\n    /* \"#utility.yul\":7103:7104   */\n  0x00\n    /* \"#utility.yul\":7096:7111   */\n  revert\n    /* \"#utility.yul\":7123:7225   */\ntag_78:\n    /* \"#utility.yul\":7165:7173   */\n  0x00\n    /* \"#utility.yul\":7212:7217   */\n  dup2\n    /* \"#utility.yul\":7209:7210   */\n  0x01\n    /* \"#utility.yul\":7205:7218   */\n  shr\n    /* \"#utility.yul\":7184:7218   */\n  swap1\n  pop\n    /* \"#utility.yul\":7123:7225   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7231:8079   */\ntag_79:\n    /* \"#utility.yul\":7292:7297   */\n  0x00\n    /* \"#utility.yul\":7299:7303   */\n  dup1\n    /* \"#utility.yul\":7323:7329   */\n  dup3\n    /* \"#utility.yul\":7314:7329   */\n  swap2\n  pop\n    /* \"#utility.yul\":7347:7352   */\n  dup4\n    /* \"#utility.yul\":7338:7352   */\n  swap1\n  pop\n    /* \"#utility.yul\":7361:8073   */\ntag_167:\n    /* \"#utility.yul\":7382:7383   */\n  0x01\n    /* \"#utility.yul\":7372:7380   */\n  dup6\n    /* \"#utility.yul\":7369:7384   */\n  gt\n    /* \"#utility.yul\":7361:8073   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":7477:7481   */\n  dup1\n    /* \"#utility.yul\":7472:7475   */\n  dup7\n    /* \"#utility.yul\":7468:7482   */\n  div\n    /* \"#utility.yul\":7462:7466   */\n  dup2\n    /* \"#utility.yul\":7459:7483   */\n  gt\n    /* \"#utility.yul\":7456:7506   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":7486:7504   */\n  tag_171\n  tag_77\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7456:7506   */\ntag_170:\n    /* \"#utility.yul\":7536:7537   */\n  0x01\n    /* \"#utility.yul\":7526:7534   */\n  dup6\n    /* \"#utility.yul\":7522:7538   */\n  and\n    /* \"#utility.yul\":7519:7970   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":7951:7955   */\n  dup1\n    /* \"#utility.yul\":7944:7949   */\n  dup3\n    /* \"#utility.yul\":7940:7956   */\n  mul\n    /* \"#utility.yul\":7931:7956   */\n  swap2\n  pop\n    /* \"#utility.yul\":7519:7970   */\ntag_172:\n    /* \"#utility.yul\":8001:8005   */\n  dup1\n    /* \"#utility.yul\":7995:7999   */\n  dup2\n    /* \"#utility.yul\":7991:8006   */\n  mul\n    /* \"#utility.yul\":7983:8006   */\n  swap1\n  pop\n    /* \"#utility.yul\":8031:8063   */\n  tag_173\n    /* \"#utility.yul\":8054:8062   */\n  dup6\n    /* \"#utility.yul\":8031:8063   */\n  tag_78\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8019:8063   */\n  swap5\n  pop\n    /* \"#utility.yul\":7361:8073   */\n  jump(tag_167)\ntag_169:\n    /* \"#utility.yul\":7231:8079   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8085:9158   */\ntag_80:\n    /* \"#utility.yul\":8139:8144   */\n  0x00\n    /* \"#utility.yul\":8330:8338   */\n  dup3\n    /* \"#utility.yul\":8320:8360   */\n  tag_175\n  jumpi\n    /* \"#utility.yul\":8351:8352   */\n  0x01\n    /* \"#utility.yul\":8342:8352   */\n  swap1\n  pop\n    /* \"#utility.yul\":8353:8358   */\n  jump(tag_174)\n    /* \"#utility.yul\":8320:8360   */\ntag_175:\n    /* \"#utility.yul\":8379:8383   */\n  dup2\n    /* \"#utility.yul\":8369:8405   */\n  tag_176\n  jumpi\n    /* \"#utility.yul\":8396:8397   */\n  0x00\n    /* \"#utility.yul\":8387:8397   */\n  swap1\n  pop\n    /* \"#utility.yul\":8398:8403   */\n  jump(tag_174)\n    /* \"#utility.yul\":8369:8405   */\ntag_176:\n    /* \"#utility.yul\":8465:8469   */\n  dup2\n    /* \"#utility.yul\":8513:8514   */\n  0x01\n    /* \"#utility.yul\":8508:8535   */\n  dup2\n  eq\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8549:8550   */\n  0x02\n    /* \"#utility.yul\":8544:8735   */\n  dup2\n  eq\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8458:8735   */\n  jump(tag_177)\n    /* \"#utility.yul\":8508:8535   */\ntag_178:\n    /* \"#utility.yul\":8526:8527   */\n  0x01\n    /* \"#utility.yul\":8517:8527   */\n  swap2\n  pop\n    /* \"#utility.yul\":8528:8533   */\n  pop\n  jump(tag_174)\n    /* \"#utility.yul\":8544:8735   */\ntag_179:\n    /* \"#utility.yul\":8589:8592   */\n  0xff\n    /* \"#utility.yul\":8579:8587   */\n  dup5\n    /* \"#utility.yul\":8576:8593   */\n  gt\n    /* \"#utility.yul\":8573:8616   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":8596:8614   */\n  tag_181\n  tag_77\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8573:8616   */\ntag_180:\n    /* \"#utility.yul\":8645:8653   */\n  dup4\n    /* \"#utility.yul\":8642:8643   */\n  0x02\n    /* \"#utility.yul\":8638:8654   */\n  exp\n    /* \"#utility.yul\":8629:8654   */\n  swap2\n  pop\n    /* \"#utility.yul\":8680:8683   */\n  dup5\n    /* \"#utility.yul\":8673:8678   */\n  dup3\n    /* \"#utility.yul\":8670:8684   */\n  gt\n    /* \"#utility.yul\":8667:8707   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8687:8705   */\n  tag_183\n  tag_77\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8667:8707   */\ntag_182:\n    /* \"#utility.yul\":8720:8725   */\n  pop\n  jump(tag_174)\n    /* \"#utility.yul\":8458:8735   */\ntag_177:\n  pop\n    /* \"#utility.yul\":8844:8846   */\n  0x20\n    /* \"#utility.yul\":8834:8842   */\n  dup4\n    /* \"#utility.yul\":8831:8847   */\n  lt\n    /* \"#utility.yul\":8825:8828   */\n  0x0133\n    /* \"#utility.yul\":8819:8823   */\n  dup4\n    /* \"#utility.yul\":8816:8829   */\n  lt\n    /* \"#utility.yul\":8812:8848   */\n  and\n    /* \"#utility.yul\":8794:8796   */\n  0x4e\n    /* \"#utility.yul\":8784:8792   */\n  dup5\n    /* \"#utility.yul\":8781:8797   */\n  lt\n    /* \"#utility.yul\":8776:8778   */\n  0x0b\n    /* \"#utility.yul\":8770:8774   */\n  dup5\n    /* \"#utility.yul\":8767:8779   */\n  lt\n    /* \"#utility.yul\":8763:8798   */\n  and\n    /* \"#utility.yul\":8747:8858   */\n  or\n    /* \"#utility.yul\":8744:8990   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":8900:8908   */\n  dup3\n    /* \"#utility.yul\":8894:8898   */\n  dup3\n    /* \"#utility.yul\":8890:8909   */\n  exp\n    /* \"#utility.yul\":8881:8909   */\n  swap1\n  pop\n    /* \"#utility.yul\":8935:8938   */\n  dup4\n    /* \"#utility.yul\":8928:8933   */\n  dup2\n    /* \"#utility.yul\":8925:8939   */\n  gt\n    /* \"#utility.yul\":8922:8962   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_186\n  tag_77\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8922:8962   */\ntag_185:\n    /* \"#utility.yul\":8975:8980   */\n  jump(tag_174)\n    /* \"#utility.yul\":8744:8990   */\ntag_184:\n    /* \"#utility.yul\":9015:9057   */\n  tag_187\n    /* \"#utility.yul\":9053:9056   */\n  dup5\n    /* \"#utility.yul\":9043:9051   */\n  dup5\n    /* \"#utility.yul\":9037:9041   */\n  dup5\n    /* \"#utility.yul\":9034:9035   */\n  0x01\n    /* \"#utility.yul\":9015:9057   */\n  tag_79\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9000:9057   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":9089:9093   */\n  dup2\n    /* \"#utility.yul\":9084:9087   */\n  dup5\n    /* \"#utility.yul\":9080:9094   */\n  div\n    /* \"#utility.yul\":9073:9078   */\n  dup2\n    /* \"#utility.yul\":9070:9095   */\n  gt\n    /* \"#utility.yul\":9067:9118   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":9098:9116   */\n  tag_189\n  tag_77\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9067:9118   */\ntag_188:\n    /* \"#utility.yul\":9147:9151   */\n  dup2\n    /* \"#utility.yul\":9140:9145   */\n  dup2\n    /* \"#utility.yul\":9136:9152   */\n  mul\n    /* \"#utility.yul\":9127:9152   */\n  swap1\n  pop\n    /* \"#utility.yul\":8085:9158   */\ntag_174:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9164:9449   */\ntag_22:\n    /* \"#utility.yul\":9224:9229   */\n  0x00\n    /* \"#utility.yul\":9248:9271   */\n  tag_191\n    /* \"#utility.yul\":9266:9270   */\n  dup3\n    /* \"#utility.yul\":9248:9271   */\n  tag_64\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9240:9271   */\n  swap2\n  pop\n    /* \"#utility.yul\":9292:9319   */\n  tag_192\n    /* \"#utility.yul\":9310:9318   */\n  dup4\n    /* \"#utility.yul\":9292:9319   */\n  tag_64\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9280:9319   */\n  swap3\n  pop\n    /* \"#utility.yul\":9338:9442   */\n  tag_193\n    /* \"#utility.yul\":9375:9441   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9365:9373   */\n  dup5\n    /* \"#utility.yul\":9359:9363   */\n  dup5\n    /* \"#utility.yul\":9338:9442   */\n  tag_80\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9329:9442   */\n  swap1\n  pop\n    /* \"#utility.yul\":9164:9449   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9455:9865   */\ntag_24:\n    /* \"#utility.yul\":9495:9502   */\n  0x00\n    /* \"#utility.yul\":9518:9538   */\n  tag_195\n    /* \"#utility.yul\":9536:9537   */\n  dup3\n    /* \"#utility.yul\":9518:9538   */\n  tag_64\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9513:9538   */\n  swap2\n  pop\n    /* \"#utility.yul\":9552:9572   */\n  tag_196\n    /* \"#utility.yul\":9570:9571   */\n  dup4\n    /* \"#utility.yul\":9552:9572   */\n  tag_64\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9547:9572   */\n  swap3\n  pop\n    /* \"#utility.yul\":9607:9608   */\n  dup3\n    /* \"#utility.yul\":9604:9605   */\n  dup3\n    /* \"#utility.yul\":9600:9609   */\n  mul\n    /* \"#utility.yul\":9629:9659   */\n  tag_197\n    /* \"#utility.yul\":9647:9658   */\n  dup2\n    /* \"#utility.yul\":9629:9659   */\n  tag_64\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9618:9659   */\n  swap2\n  pop\n    /* \"#utility.yul\":9808:9809   */\n  dup3\n    /* \"#utility.yul\":9799:9806   */\n  dup3\n    /* \"#utility.yul\":9795:9810   */\n  div\n    /* \"#utility.yul\":9792:9793   */\n  dup5\n    /* \"#utility.yul\":9789:9811   */\n  eq\n    /* \"#utility.yul\":9769:9770   */\n  dup4\n    /* \"#utility.yul\":9762:9771   */\n  iszero\n    /* \"#utility.yul\":9742:9825   */\n  or\n    /* \"#utility.yul\":9719:9858   */\n  tag_198\n  jumpi\n    /* \"#utility.yul\":9838:9856   */\n  tag_199\n  tag_77\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9719:9858   */\ntag_198:\n    /* \"#utility.yul\":9503:9865   */\n  pop\n    /* \"#utility.yul\":9455:9865   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9871:10062   */\ntag_40:\n    /* \"#utility.yul\":9911:9914   */\n  0x00\n    /* \"#utility.yul\":9930:9950   */\n  tag_201\n    /* \"#utility.yul\":9948:9949   */\n  dup3\n    /* \"#utility.yul\":9930:9950   */\n  tag_64\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":9925:9950   */\n  swap2\n  pop\n    /* \"#utility.yul\":9964:9984   */\n  tag_202\n    /* \"#utility.yul\":9982:9983   */\n  dup4\n    /* \"#utility.yul\":9964:9984   */\n  tag_64\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9959:9984   */\n  swap3\n  pop\n    /* \"#utility.yul\":10007:10008   */\n  dup3\n    /* \"#utility.yul\":10004:10005   */\n  dup3\n    /* \"#utility.yul\":10000:10009   */\n  add\n    /* \"#utility.yul\":9993:10009   */\n  swap1\n  pop\n    /* \"#utility.yul\":10028:10031   */\n  dup1\n    /* \"#utility.yul\":10025:10026   */\n  dup3\n    /* \"#utility.yul\":10022:10032   */\n  gt\n    /* \"#utility.yul\":10019:10055   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":10035:10053   */\n  tag_204\n  tag_77\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10019:10055   */\ntag_203:\n    /* \"#utility.yul\":9871:10062   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10068:10186   */\ntag_81:\n    /* \"#utility.yul\":10155:10179   */\n  tag_206\n    /* \"#utility.yul\":10173:10178   */\n  dup2\n    /* \"#utility.yul\":10155:10179   */\n  tag_64\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10150:10153   */\n  dup3\n    /* \"#utility.yul\":10143:10180   */\n  mstore\n    /* \"#utility.yul\":10068:10186   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10192:10634   */\ntag_44:\n    /* \"#utility.yul\":10341:10345   */\n  0x00\n    /* \"#utility.yul\":10379:10381   */\n  0x60\n    /* \"#utility.yul\":10368:10377   */\n  dup3\n    /* \"#utility.yul\":10364:10382   */\n  add\n    /* \"#utility.yul\":10356:10382   */\n  swap1\n  pop\n    /* \"#utility.yul\":10392:10463   */\n  tag_208\n    /* \"#utility.yul\":10460:10461   */\n  0x00\n    /* \"#utility.yul\":10449:10458   */\n  dup4\n    /* \"#utility.yul\":10445:10462   */\n  add\n    /* \"#utility.yul\":10436:10442   */\n  dup7\n    /* \"#utility.yul\":10392:10463   */\n  tag_76\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10473:10545   */\n  tag_209\n    /* \"#utility.yul\":10541:10543   */\n  0x20\n    /* \"#utility.yul\":10530:10539   */\n  dup4\n    /* \"#utility.yul\":10526:10544   */\n  add\n    /* \"#utility.yul\":10517:10523   */\n  dup6\n    /* \"#utility.yul\":10473:10545   */\n  tag_81\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10555:10627   */\n  tag_210\n    /* \"#utility.yul\":10623:10625   */\n  0x40\n    /* \"#utility.yul\":10612:10621   */\n  dup4\n    /* \"#utility.yul\":10608:10626   */\n  add\n    /* \"#utility.yul\":10599:10605   */\n  dup5\n    /* \"#utility.yul\":10555:10627   */\n  tag_81\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10192:10634   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10640:10862   */\ntag_48:\n    /* \"#utility.yul\":10733:10737   */\n  0x00\n    /* \"#utility.yul\":10771:10773   */\n  0x20\n    /* \"#utility.yul\":10760:10769   */\n  dup3\n    /* \"#utility.yul\":10756:10774   */\n  add\n    /* \"#utility.yul\":10748:10774   */\n  swap1\n  pop\n    /* \"#utility.yul\":10784:10855   */\n  tag_212\n    /* \"#utility.yul\":10852:10853   */\n  0x00\n    /* \"#utility.yul\":10841:10850   */\n  dup4\n    /* \"#utility.yul\":10837:10854   */\n  add\n    /* \"#utility.yul\":10828:10834   */\n  dup5\n    /* \"#utility.yul\":10784:10855   */\n  tag_81\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10640:10862   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":486:3242  contract MyToken is ERC20, Ownable {... */\ntag_29:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":486:3242  contract MyToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb17d718e\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb17d718e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc415565f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xcb765c1d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9960d742\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x313ce567\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x590791f2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x67761856\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x03f492fc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyToken.sol\":2619:2717  function getMaxWhaleAmount() public view returns (uint256) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":3141:3240  function getOwnerBalance() public view returns (uint256) {... */\n    tag_9:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1521:1622  function setMaxWhaleAmount(uint256 amount) public onlyOwner {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/MyToken.sol\":1628:1709  function getOwner() public view returns (address) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":2785:2883  function getReserveAddress() public view returns (address) {... */\n    tag_16:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":899:1515  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1773:2040  function depositToReserve(uint256 amount) public onlyOwner {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/MyToken.sol\":2105:2516  function withdrawFromReserve(uint256 amount, address target) public onlyOwner {... */\n    tag_19:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/MyToken.sol\":2950:3059  function getReserveBalance() public view returns (uint256) {... */\n    tag_20:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/MyToken.sol\":2619:2717  function getMaxWhaleAmount() public view returns (uint256) {... */\n    tag_27:\n        /* \"contracts/MyToken.sol\":2669:2676  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":2695:2710  _maxWhaleAmount */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":2688:2710  return _maxWhaleAmount */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2619:2717  function getMaxWhaleAmount() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":3141:3240  function getOwnerBalance() public view returns (uint256) {... */\n    tag_53:\n        /* \"contracts/MyToken.sol\":3189:3196  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":3215:3233  balanceOf(owner()) */\n      tag_123\n        /* \"contracts/MyToken.sol\":3225:3232  owner() */\n      tag_124\n        /* \"contracts/MyToken.sol\":3225:3230  owner */\n      tag_71\n        /* \"contracts/MyToken.sol\":3225:3232  owner() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/MyToken.sol\":3215:3224  balanceOf */\n      tag_62\n        /* \"contracts/MyToken.sol\":3215:3233  balanceOf(owner()) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/MyToken.sol\":3208:3233  return balanceOf(owner()) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":3141:3240  function getOwnerBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1521:1622  function setMaxWhaleAmount(uint256 amount) public onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/MyToken.sol\":1609:1615  amount */\n      dup1\n        /* \"contracts/MyToken.sol\":1591:1606  _maxWhaleAmount */\n      0x07\n        /* \"contracts/MyToken.sol\":1591:1615  _maxWhaleAmount = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1521:1622  function setMaxWhaleAmount(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1628:1709  function getOwner() public view returns (address) {... */\n    tag_67:\n        /* \"contracts/MyToken.sol\":1669:1676  address */\n      0x00\n        /* \"contracts/MyToken.sol\":1695:1702  owner() */\n      tag_136\n        /* \"contracts/MyToken.sol\":1695:1700  owner */\n      tag_71\n        /* \"contracts/MyToken.sol\":1695:1702  owner() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/MyToken.sol\":1688:1702  return owner() */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1628:1709  function getOwner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_104\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_104\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2785:2883  function getReserveAddress() public view returns (address) {... */\n    tag_77:\n        /* \"contracts/MyToken.sol\":2835:2842  address */\n      0x00\n        /* \"contracts/MyToken.sol\":2861:2876  _reserveAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2854:2876  return _reserveAddress */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2785:2883  function getReserveAddress() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":899:1515  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_81:\n        /* \"contracts/MyToken.sol\":977:981  bool */\n      0x00\n        /* \"contracts/MyToken.sol\":1011:1026  _maxWhaleAmount */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":1001:1007  amount */\n      dup3\n        /* \"contracts/MyToken.sol\":1001:1026  amount <= _maxWhaleAmount */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":1001:1051  amount <= _maxWhaleAmount || msg.sender == owner() */\n      dup1\n      tag_146\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":1044:1051  owner() */\n      tag_147\n        /* \"contracts/MyToken.sol\":1044:1049  owner */\n      tag_71\n        /* \"contracts/MyToken.sol\":1044:1051  owner() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/MyToken.sol\":1030:1051  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1030:1040  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1030:1051  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1001:1051  amount <= _maxWhaleAmount || msg.sender == owner() */\n    tag_146:\n        /* \"contracts/MyToken.sol\":993:1091  require(amount <= _maxWhaleAmount || msg.sender == owner(), \"Transfer amount exceeds whale limit\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/MyToken.sol\":1102:1123  uint256 reserveAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":1141:1144  100 */\n      0x64\n        /* \"contracts/MyToken.sol\":1136:1137  1 */\n      0x01\n        /* \"contracts/MyToken.sol\":1127:1133  amount */\n      dup5\n        /* \"contracts/MyToken.sol\":1127:1137  amount * 1 */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"contracts/MyToken.sol\":1126:1144  (amount * 1) / 100 */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"contracts/MyToken.sol\":1102:1144  uint256 reserveAmount = (amount * 1) / 100 */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1206:1228  uint256 transferAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":1240:1253  reserveAmount */\n      dup2\n        /* \"contracts/MyToken.sol\":1231:1237  amount */\n      dup5\n        /* \"contracts/MyToken.sol\":1231:1253  amount - reserveAmount */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/MyToken.sol\":1206:1253  uint256 transferAmount = amount - reserveAmount */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1319:1367  _transfer(msg.sender, recipient, transferAmount) */\n      tag_157\n        /* \"contracts/MyToken.sol\":1329:1339  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1341:1350  recipient */\n      dup7\n        /* \"contracts/MyToken.sol\":1352:1366  transferAmount */\n      dup4\n        /* \"contracts/MyToken.sol\":1319:1328  _transfer */\n      tag_120\n        /* \"contracts/MyToken.sol\":1319:1367  _transfer(msg.sender, recipient, transferAmount) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/MyToken.sol\":1406:1459  _transfer(msg.sender, _reserveAddress, reserveAmount) */\n      tag_158\n        /* \"contracts/MyToken.sol\":1416:1426  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1428:1443  _reserveAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1445:1458  reserveAmount */\n      dup5\n        /* \"contracts/MyToken.sol\":1406:1415  _transfer */\n      tag_120\n        /* \"contracts/MyToken.sol\":1406:1459  _transfer(msg.sender, _reserveAddress, reserveAmount) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/MyToken.sol\":1504:1508  true */\n      0x01\n        /* \"contracts/MyToken.sol\":1497:1508  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":899:1515  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1773:2040  function depositToReserve(uint256 amount) public onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/MyToken.sol\":1859:1860  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1850:1856  amount */\n      dup2\n        /* \"contracts/MyToken.sol\":1850:1860  amount > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":1842:1894  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/MyToken.sol\":1937:1943  amount */\n      dup1\n        /* \"contracts/MyToken.sol\":1912:1933  balanceOf(msg.sender) */\n      tag_165\n        /* \"contracts/MyToken.sol\":1922:1932  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1912:1921  balanceOf */\n      tag_62\n        /* \"contracts/MyToken.sol\":1912:1933  balanceOf(msg.sender) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/MyToken.sol\":1912:1943  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/MyToken.sol\":1904:1977  require(balanceOf(msg.sender) >= amount, \"Not enough balance to deposit\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/MyToken.sol\":1987:2033  _transfer(msg.sender, _reserveAddress, amount) */\n      tag_169\n        /* \"contracts/MyToken.sol\":1997:2007  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2009:2024  _reserveAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2026:2032  amount */\n      dup4\n        /* \"contracts/MyToken.sol\":1987:1996  _transfer */\n      tag_120\n        /* \"contracts/MyToken.sol\":1987:2033  _transfer(msg.sender, _reserveAddress, amount) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/MyToken.sol\":1773:2040  function depositToReserve(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2105:2516  function withdrawFromReserve(uint256 amount, address target) public onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/MyToken.sol\":2207:2217  getOwner() */\n      tag_173\n        /* \"contracts/MyToken.sol\":2207:2215  getOwner */\n      tag_67\n        /* \"contracts/MyToken.sol\":2207:2217  getOwner() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/MyToken.sol\":2197:2217  target == getOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2197:2203  target */\n      dup2\n        /* \"contracts/MyToken.sol\":2197:2217  target == getOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken.sol\":2193:2303  if (target == getOwner())... */\n      tag_174\n      jumpi\n        /* \"contracts/MyToken.sol\":2249:2254  false */\n      0x00\n        /* \"contracts/MyToken.sol\":2241:2292  require(false, \"Withdraw to owner is not allowed.\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/MyToken.sol\":2193:2303  if (target == getOwner())... */\n    tag_174:\n        /* \"contracts/MyToken.sol\":2329:2330  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2320:2326  amount */\n      dup3\n        /* \"contracts/MyToken.sol\":2320:2330  amount > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":2312:2364  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_164\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/MyToken.sol\":2412:2418  amount */\n      dup2\n        /* \"contracts/MyToken.sol\":2382:2408  balanceOf(_reserveAddress) */\n      tag_180\n        /* \"contracts/MyToken.sol\":2392:2407  _reserveAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2382:2391  balanceOf */\n      tag_62\n        /* \"contracts/MyToken.sol\":2382:2408  balanceOf(_reserveAddress) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/MyToken.sol\":2382:2418  balanceOf(_reserveAddress) >= amount */\n      lt\n      iszero\n        /* \"contracts/MyToken.sol\":2374:2453  require(balanceOf(_reserveAddress) >= amount, \"Not enough balance to withdraw\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/MyToken.sol\":2463:2509  _transfer(_reserveAddress, msg.sender, amount) */\n      tag_184\n        /* \"contracts/MyToken.sol\":2473:2488  _reserveAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2490:2500  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2502:2508  amount */\n      dup5\n        /* \"contracts/MyToken.sol\":2463:2472  _transfer */\n      tag_120\n        /* \"contracts/MyToken.sol\":2463:2509  _transfer(_reserveAddress, msg.sender, amount) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/MyToken.sol\":2105:2516  function withdrawFromReserve(uint256 amount, address target) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2950:3059  function getReserveBalance() public view returns (uint256) {... */\n    tag_91:\n        /* \"contracts/MyToken.sol\":3000:3007  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":3026:3052  balanceOf(_reserveAddress) */\n      tag_186\n        /* \"contracts/MyToken.sol\":3036:3051  _reserveAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":3026:3035  balanceOf */\n      tag_62\n        /* \"contracts/MyToken.sol\":3026:3052  balanceOf(_reserveAddress) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/MyToken.sol\":3019:3052  return balanceOf(_reserveAddress) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2950:3059  function getReserveBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_230)\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_234)\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_235\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_236:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_237:\n        /* \"#utility.yul\":177:201   */\n      tag_273\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_236\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_29:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_275\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_237\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_238:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_239:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:968   */\n    tag_240:\n        /* \"#utility.yul\":803:804   */\n      0x00\n        /* \"#utility.yul\":813:926   */\n    tag_279:\n        /* \"#utility.yul\":827:833   */\n      dup4\n        /* \"#utility.yul\":824:825   */\n      dup2\n        /* \"#utility.yul\":821:834   */\n      lt\n        /* \"#utility.yul\":813:926   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":912:913   */\n      dup1\n        /* \"#utility.yul\":907:910   */\n      dup3\n        /* \"#utility.yul\":903:914   */\n      add\n        /* \"#utility.yul\":897:915   */\n      mload\n        /* \"#utility.yul\":893:894   */\n      dup2\n        /* \"#utility.yul\":888:891   */\n      dup5\n        /* \"#utility.yul\":884:895   */\n      add\n        /* \"#utility.yul\":877:916   */\n      mstore\n        /* \"#utility.yul\":849:851   */\n      0x20\n        /* \"#utility.yul\":846:847   */\n      dup2\n        /* \"#utility.yul\":842:852   */\n      add\n        /* \"#utility.yul\":837:852   */\n      swap1\n      pop\n        /* \"#utility.yul\":813:926   */\n      jump(tag_279)\n    tag_281:\n        /* \"#utility.yul\":960:961   */\n      0x00\n        /* \"#utility.yul\":951:957   */\n      dup5\n        /* \"#utility.yul\":946:949   */\n      dup5\n        /* \"#utility.yul\":942:958   */\n      add\n        /* \"#utility.yul\":935:962   */\n      mstore\n        /* \"#utility.yul\":784:968   */\n      pop\n        /* \"#utility.yul\":722:968   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1076   */\n    tag_241:\n        /* \"#utility.yul\":1015:1021   */\n      0x00\n        /* \"#utility.yul\":1066:1068   */\n      0x1f\n        /* \"#utility.yul\":1062:1069   */\n      not\n        /* \"#utility.yul\":1057:1059   */\n      0x1f\n        /* \"#utility.yul\":1050:1055   */\n      dup4\n        /* \"#utility.yul\":1046:1060   */\n      add\n        /* \"#utility.yul\":1042:1070   */\n      and\n        /* \"#utility.yul\":1032:1070   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1082:1459   */\n    tag_242:\n        /* \"#utility.yul\":1170:1173   */\n      0x00\n        /* \"#utility.yul\":1198:1237   */\n      tag_284\n        /* \"#utility.yul\":1231:1236   */\n      dup3\n        /* \"#utility.yul\":1198:1237   */\n      tag_238\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1253:1324   */\n      tag_285\n        /* \"#utility.yul\":1317:1323   */\n      dup2\n        /* \"#utility.yul\":1312:1315   */\n      dup6\n        /* \"#utility.yul\":1253:1324   */\n      tag_239\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1246:1324   */\n      swap4\n      pop\n        /* \"#utility.yul\":1333:1398   */\n      tag_286\n        /* \"#utility.yul\":1391:1397   */\n      dup2\n        /* \"#utility.yul\":1386:1389   */\n      dup6\n        /* \"#utility.yul\":1379:1383   */\n      0x20\n        /* \"#utility.yul\":1372:1377   */\n      dup7\n        /* \"#utility.yul\":1368:1384   */\n      add\n        /* \"#utility.yul\":1333:1398   */\n      tag_240\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":1423:1452   */\n      tag_287\n        /* \"#utility.yul\":1445:1451   */\n      dup2\n        /* \"#utility.yul\":1423:1452   */\n      tag_241\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1418:1421   */\n      dup5\n        /* \"#utility.yul\":1414:1453   */\n      add\n        /* \"#utility.yul\":1407:1453   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1459   */\n      pop\n        /* \"#utility.yul\":1082:1459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1465:1778   */\n    tag_33:\n        /* \"#utility.yul\":1578:1582   */\n      0x00\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1605:1614   */\n      dup3\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"#utility.yul\":1593:1619   */\n      swap1\n      pop\n        /* \"#utility.yul\":1665:1674   */\n      dup2\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1655:1675   */\n      sub\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1629:1676   */\n      mstore\n        /* \"#utility.yul\":1693:1771   */\n      tag_289\n        /* \"#utility.yul\":1766:1770   */\n      dup2\n        /* \"#utility.yul\":1757:1763   */\n      dup5\n        /* \"#utility.yul\":1693:1771   */\n      tag_242\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":1685:1771   */\n      swap1\n      pop\n        /* \"#utility.yul\":1465:1778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1865:1982   */\n    tag_244:\n        /* \"#utility.yul\":1974:1975   */\n      0x00\n        /* \"#utility.yul\":1971:1972   */\n      dup1\n        /* \"#utility.yul\":1964:1976   */\n      revert\n        /* \"#utility.yul\":2111:2237   */\n    tag_246:\n        /* \"#utility.yul\":2148:2155   */\n      0x00\n        /* \"#utility.yul\":2188:2230   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2181:2186   */\n      dup3\n        /* \"#utility.yul\":2177:2231   */\n      and\n        /* \"#utility.yul\":2166:2231   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2243:2339   */\n    tag_247:\n        /* \"#utility.yul\":2280:2287   */\n      0x00\n        /* \"#utility.yul\":2309:2333   */\n      tag_295\n        /* \"#utility.yul\":2327:2332   */\n      dup3\n        /* \"#utility.yul\":2309:2333   */\n      tag_246\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2298:2333   */\n      swap1\n      pop\n        /* \"#utility.yul\":2243:2339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2345:2467   */\n    tag_248:\n        /* \"#utility.yul\":2418:2442   */\n      tag_297\n        /* \"#utility.yul\":2436:2441   */\n      dup2\n        /* \"#utility.yul\":2418:2442   */\n      tag_247\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2411:2416   */\n      dup2\n        /* \"#utility.yul\":2408:2443   */\n      eq\n        /* \"#utility.yul\":2398:2461   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2454:2455   */\n      dup1\n        /* \"#utility.yul\":2447:2459   */\n      revert\n        /* \"#utility.yul\":2398:2461   */\n    tag_298:\n        /* \"#utility.yul\":2345:2467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2612   */\n    tag_249:\n        /* \"#utility.yul\":2519:2524   */\n      0x00\n        /* \"#utility.yul\":2557:2563   */\n      dup2\n        /* \"#utility.yul\":2544:2564   */\n      calldataload\n        /* \"#utility.yul\":2535:2564   */\n      swap1\n      pop\n        /* \"#utility.yul\":2573:2606   */\n      tag_300\n        /* \"#utility.yul\":2600:2605   */\n      dup2\n        /* \"#utility.yul\":2573:2606   */\n      tag_248\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2473:2612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2618:2740   */\n    tag_250:\n        /* \"#utility.yul\":2691:2715   */\n      tag_302\n        /* \"#utility.yul\":2709:2714   */\n      dup2\n        /* \"#utility.yul\":2691:2715   */\n      tag_236\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2684:2689   */\n      dup2\n        /* \"#utility.yul\":2681:2716   */\n      eq\n        /* \"#utility.yul\":2671:2734   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2727:2728   */\n      dup1\n        /* \"#utility.yul\":2720:2732   */\n      revert\n        /* \"#utility.yul\":2671:2734   */\n    tag_303:\n        /* \"#utility.yul\":2618:2740   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:2885   */\n    tag_251:\n        /* \"#utility.yul\":2792:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2836   */\n      dup2\n        /* \"#utility.yul\":2817:2837   */\n      calldataload\n        /* \"#utility.yul\":2808:2837   */\n      swap1\n      pop\n        /* \"#utility.yul\":2846:2879   */\n      tag_305\n        /* \"#utility.yul\":2873:2878   */\n      dup2\n        /* \"#utility.yul\":2846:2879   */\n      tag_250\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2746:2885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3365   */\n    tag_36:\n        /* \"#utility.yul\":2959:2965   */\n      0x00\n        /* \"#utility.yul\":2967:2973   */\n      dup1\n        /* \"#utility.yul\":3016:3018   */\n      0x40\n        /* \"#utility.yul\":3004:3013   */\n      dup4\n        /* \"#utility.yul\":2995:3002   */\n      dup6\n        /* \"#utility.yul\":2991:3014   */\n      sub\n        /* \"#utility.yul\":2987:3019   */\n      slt\n        /* \"#utility.yul\":2984:3103   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":3022:3101   */\n      tag_308\n      tag_244\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2984:3103   */\n    tag_307:\n        /* \"#utility.yul\":3142:3143   */\n      0x00\n        /* \"#utility.yul\":3167:3220   */\n      tag_309\n        /* \"#utility.yul\":3212:3219   */\n      dup6\n        /* \"#utility.yul\":3203:3209   */\n      dup3\n        /* \"#utility.yul\":3192:3201   */\n      dup7\n        /* \"#utility.yul\":3188:3210   */\n      add\n        /* \"#utility.yul\":3167:3220   */\n      tag_249\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3157:3220   */\n      swap3\n      pop\n        /* \"#utility.yul\":3113:3230   */\n      pop\n        /* \"#utility.yul\":3269:3271   */\n      0x20\n        /* \"#utility.yul\":3295:3348   */\n      tag_310\n        /* \"#utility.yul\":3340:3347   */\n      dup6\n        /* \"#utility.yul\":3331:3337   */\n      dup3\n        /* \"#utility.yul\":3320:3329   */\n      dup7\n        /* \"#utility.yul\":3316:3338   */\n      add\n        /* \"#utility.yul\":3295:3348   */\n      tag_251\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3285:3348   */\n      swap2\n      pop\n        /* \"#utility.yul\":3240:3358   */\n      pop\n        /* \"#utility.yul\":2891:3365   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3371:3461   */\n    tag_252:\n        /* \"#utility.yul\":3405:3412   */\n      0x00\n        /* \"#utility.yul\":3448:3453   */\n      dup2\n        /* \"#utility.yul\":3441:3454   */\n      iszero\n        /* \"#utility.yul\":3434:3455   */\n      iszero\n        /* \"#utility.yul\":3423:3455   */\n      swap1\n      pop\n        /* \"#utility.yul\":3371:3461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3467:3576   */\n    tag_253:\n        /* \"#utility.yul\":3548:3569   */\n      tag_313\n        /* \"#utility.yul\":3563:3568   */\n      dup2\n        /* \"#utility.yul\":3548:3569   */\n      tag_252\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3543:3546   */\n      dup3\n        /* \"#utility.yul\":3536:3570   */\n      mstore\n        /* \"#utility.yul\":3467:3576   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3582:3792   */\n    tag_39:\n        /* \"#utility.yul\":3669:3673   */\n      0x00\n        /* \"#utility.yul\":3707:3709   */\n      0x20\n        /* \"#utility.yul\":3696:3705   */\n      dup3\n        /* \"#utility.yul\":3692:3710   */\n      add\n        /* \"#utility.yul\":3684:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3720:3785   */\n      tag_315\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3720:3785   */\n      tag_253\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3582:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_45:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_318\n      tag_244\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3908:4027   */\n    tag_317:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_319\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_249\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_320\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_249\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_321\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_251\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_254:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_255:\n        /* \"#utility.yul\":4598:4620   */\n      tag_324\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_254\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_51:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_326\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_255\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_57:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_329\n      tag_244\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4929:5048   */\n    tag_328:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_330\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_251\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_61:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_333\n      tag_244\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5264:5383   */\n    tag_332:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_334\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_249\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_256:\n        /* \"#utility.yul\":5610:5634   */\n      tag_336\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_247\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_69:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_338\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_256\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_88:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_341\n      tag_244\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5968:6087   */\n    tag_340:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_342\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_251\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_343\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_249\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6829   */\n    tag_95:\n        /* \"#utility.yul\":6423:6429   */\n      0x00\n        /* \"#utility.yul\":6431:6437   */\n      dup1\n        /* \"#utility.yul\":6480:6482   */\n      0x40\n        /* \"#utility.yul\":6468:6477   */\n      dup4\n        /* \"#utility.yul\":6459:6466   */\n      dup6\n        /* \"#utility.yul\":6455:6478   */\n      sub\n        /* \"#utility.yul\":6451:6483   */\n      slt\n        /* \"#utility.yul\":6448:6567   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":6486:6565   */\n      tag_346\n      tag_244\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":6448:6567   */\n    tag_345:\n        /* \"#utility.yul\":6606:6607   */\n      0x00\n        /* \"#utility.yul\":6631:6684   */\n      tag_347\n        /* \"#utility.yul\":6676:6683   */\n      dup6\n        /* \"#utility.yul\":6667:6673   */\n      dup3\n        /* \"#utility.yul\":6656:6665   */\n      dup7\n        /* \"#utility.yul\":6652:6674   */\n      add\n        /* \"#utility.yul\":6631:6684   */\n      tag_249\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6621:6684   */\n      swap3\n      pop\n        /* \"#utility.yul\":6577:6694   */\n      pop\n        /* \"#utility.yul\":6733:6735   */\n      0x20\n        /* \"#utility.yul\":6759:6812   */\n      tag_348\n        /* \"#utility.yul\":6804:6811   */\n      dup6\n        /* \"#utility.yul\":6795:6801   */\n      dup3\n        /* \"#utility.yul\":6784:6793   */\n      dup7\n        /* \"#utility.yul\":6780:6802   */\n      add\n        /* \"#utility.yul\":6759:6812   */\n      tag_249\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6749:6812   */\n      swap2\n      pop\n        /* \"#utility.yul\":6704:6822   */\n      pop\n        /* \"#utility.yul\":6355:6829   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6835:7015   */\n    tag_257:\n        /* \"#utility.yul\":6883:6960   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6880:6881   */\n      0x00\n        /* \"#utility.yul\":6873:6961   */\n      mstore\n        /* \"#utility.yul\":6980:6984   */\n      0x22\n        /* \"#utility.yul\":6977:6978   */\n      0x04\n        /* \"#utility.yul\":6970:6985   */\n      mstore\n        /* \"#utility.yul\":7004:7008   */\n      0x24\n        /* \"#utility.yul\":7001:7002   */\n      0x00\n        /* \"#utility.yul\":6994:7009   */\n      revert\n        /* \"#utility.yul\":7021:7341   */\n    tag_104:\n        /* \"#utility.yul\":7065:7071   */\n      0x00\n        /* \"#utility.yul\":7102:7103   */\n      0x02\n        /* \"#utility.yul\":7096:7100   */\n      dup3\n        /* \"#utility.yul\":7092:7104   */\n      div\n        /* \"#utility.yul\":7082:7104   */\n      swap1\n      pop\n        /* \"#utility.yul\":7149:7150   */\n      0x01\n        /* \"#utility.yul\":7143:7147   */\n      dup3\n        /* \"#utility.yul\":7139:7151   */\n      and\n        /* \"#utility.yul\":7170:7188   */\n      dup1\n        /* \"#utility.yul\":7160:7241   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":7226:7230   */\n      0x7f\n        /* \"#utility.yul\":7218:7224   */\n      dup3\n        /* \"#utility.yul\":7214:7231   */\n      and\n        /* \"#utility.yul\":7204:7231   */\n      swap2\n      pop\n        /* \"#utility.yul\":7160:7241   */\n    tag_351:\n        /* \"#utility.yul\":7288:7290   */\n      0x20\n        /* \"#utility.yul\":7280:7286   */\n      dup3\n        /* \"#utility.yul\":7277:7291   */\n      lt\n        /* \"#utility.yul\":7257:7275   */\n      dup2\n        /* \"#utility.yul\":7254:7292   */\n      sub\n        /* \"#utility.yul\":7251:7335   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":7307:7325   */\n      tag_353\n      tag_257\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7251:7335   */\n    tag_352:\n        /* \"#utility.yul\":7072:7341   */\n      pop\n        /* \"#utility.yul\":7021:7341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7569   */\n    tag_258:\n        /* \"#utility.yul\":7487:7521   */\n      0x5472616e7366657220616d6f756e742065786365656473207768616c65206c69\n        /* \"#utility.yul\":7483:7484   */\n      0x00\n        /* \"#utility.yul\":7475:7481   */\n      dup3\n        /* \"#utility.yul\":7471:7485   */\n      add\n        /* \"#utility.yul\":7464:7522   */\n      mstore\n        /* \"#utility.yul\":7556:7561   */\n      0x6d69740000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7551:7553   */\n      0x20\n        /* \"#utility.yul\":7543:7549   */\n      dup3\n        /* \"#utility.yul\":7539:7554   */\n      add\n        /* \"#utility.yul\":7532:7562   */\n      mstore\n        /* \"#utility.yul\":7347:7569   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7575:7941   */\n    tag_259:\n        /* \"#utility.yul\":7717:7720   */\n      0x00\n        /* \"#utility.yul\":7738:7805   */\n      tag_356\n        /* \"#utility.yul\":7802:7804   */\n      0x23\n        /* \"#utility.yul\":7797:7800   */\n      dup4\n        /* \"#utility.yul\":7738:7805   */\n      tag_239\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7731:7805   */\n      swap2\n      pop\n        /* \"#utility.yul\":7814:7907   */\n      tag_357\n        /* \"#utility.yul\":7903:7906   */\n      dup3\n        /* \"#utility.yul\":7814:7907   */\n      tag_258\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7932:7934   */\n      0x40\n        /* \"#utility.yul\":7927:7930   */\n      dup3\n        /* \"#utility.yul\":7923:7935   */\n      add\n        /* \"#utility.yul\":7916:7935   */\n      swap1\n      pop\n        /* \"#utility.yul\":7575:7941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7947:8366   */\n    tag_150:\n        /* \"#utility.yul\":8113:8117   */\n      0x00\n        /* \"#utility.yul\":8151:8153   */\n      0x20\n        /* \"#utility.yul\":8140:8149   */\n      dup3\n        /* \"#utility.yul\":8136:8154   */\n      add\n        /* \"#utility.yul\":8128:8154   */\n      swap1\n      pop\n        /* \"#utility.yul\":8200:8209   */\n      dup2\n        /* \"#utility.yul\":8194:8198   */\n      dup2\n        /* \"#utility.yul\":8190:8210   */\n      sub\n        /* \"#utility.yul\":8186:8187   */\n      0x00\n        /* \"#utility.yul\":8175:8184   */\n      dup4\n        /* \"#utility.yul\":8171:8188   */\n      add\n        /* \"#utility.yul\":8164:8211   */\n      mstore\n        /* \"#utility.yul\":8228:8359   */\n      tag_359\n        /* \"#utility.yul\":8354:8358   */\n      dup2\n        /* \"#utility.yul\":8228:8359   */\n      tag_259\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8220:8359   */\n      swap1\n      pop\n        /* \"#utility.yul\":7947:8366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8372:8552   */\n    tag_260:\n        /* \"#utility.yul\":8420:8497   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8417:8418   */\n      0x00\n        /* \"#utility.yul\":8410:8498   */\n      mstore\n        /* \"#utility.yul\":8517:8521   */\n      0x11\n        /* \"#utility.yul\":8514:8515   */\n      0x04\n        /* \"#utility.yul\":8507:8522   */\n      mstore\n        /* \"#utility.yul\":8541:8545   */\n      0x24\n        /* \"#utility.yul\":8538:8539   */\n      0x00\n        /* \"#utility.yul\":8531:8546   */\n      revert\n        /* \"#utility.yul\":8558:8968   */\n    tag_152:\n        /* \"#utility.yul\":8598:8605   */\n      0x00\n        /* \"#utility.yul\":8621:8641   */\n      tag_362\n        /* \"#utility.yul\":8639:8640   */\n      dup3\n        /* \"#utility.yul\":8621:8641   */\n      tag_236\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8616:8641   */\n      swap2\n      pop\n        /* \"#utility.yul\":8655:8675   */\n      tag_363\n        /* \"#utility.yul\":8673:8674   */\n      dup4\n        /* \"#utility.yul\":8655:8675   */\n      tag_236\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8650:8675   */\n      swap3\n      pop\n        /* \"#utility.yul\":8710:8711   */\n      dup3\n        /* \"#utility.yul\":8707:8708   */\n      dup3\n        /* \"#utility.yul\":8703:8712   */\n      mul\n        /* \"#utility.yul\":8732:8762   */\n      tag_364\n        /* \"#utility.yul\":8750:8761   */\n      dup2\n        /* \"#utility.yul\":8732:8762   */\n      tag_236\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":8721:8762   */\n      swap2\n      pop\n        /* \"#utility.yul\":8911:8912   */\n      dup3\n        /* \"#utility.yul\":8902:8909   */\n      dup3\n        /* \"#utility.yul\":8898:8913   */\n      div\n        /* \"#utility.yul\":8895:8896   */\n      dup5\n        /* \"#utility.yul\":8892:8914   */\n      eq\n        /* \"#utility.yul\":8872:8873   */\n      dup4\n        /* \"#utility.yul\":8865:8874   */\n      iszero\n        /* \"#utility.yul\":8845:8928   */\n      or\n        /* \"#utility.yul\":8822:8961   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":8941:8959   */\n      tag_366\n      tag_260\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8822:8961   */\n    tag_365:\n        /* \"#utility.yul\":8606:8968   */\n      pop\n        /* \"#utility.yul\":8558:8968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8974:9154   */\n    tag_261:\n        /* \"#utility.yul\":9022:9099   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9019:9020   */\n      0x00\n        /* \"#utility.yul\":9012:9100   */\n      mstore\n        /* \"#utility.yul\":9119:9123   */\n      0x12\n        /* \"#utility.yul\":9116:9117   */\n      0x04\n        /* \"#utility.yul\":9109:9124   */\n      mstore\n        /* \"#utility.yul\":9143:9147   */\n      0x24\n        /* \"#utility.yul\":9140:9141   */\n      0x00\n        /* \"#utility.yul\":9133:9148   */\n      revert\n        /* \"#utility.yul\":9160:9345   */\n    tag_154:\n        /* \"#utility.yul\":9200:9201   */\n      0x00\n        /* \"#utility.yul\":9217:9237   */\n      tag_369\n        /* \"#utility.yul\":9235:9236   */\n      dup3\n        /* \"#utility.yul\":9217:9237   */\n      tag_236\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9212:9237   */\n      swap2\n      pop\n        /* \"#utility.yul\":9251:9271   */\n      tag_370\n        /* \"#utility.yul\":9269:9270   */\n      dup4\n        /* \"#utility.yul\":9251:9271   */\n      tag_236\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9246:9271   */\n      swap3\n      pop\n        /* \"#utility.yul\":9290:9291   */\n      dup3\n        /* \"#utility.yul\":9280:9315   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":9295:9313   */\n      tag_372\n      tag_261\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9280:9315   */\n    tag_371:\n        /* \"#utility.yul\":9337:9338   */\n      dup3\n        /* \"#utility.yul\":9334:9335   */\n      dup3\n        /* \"#utility.yul\":9330:9339   */\n      div\n        /* \"#utility.yul\":9325:9339   */\n      swap1\n      pop\n        /* \"#utility.yul\":9160:9345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9351:9545   */\n    tag_156:\n        /* \"#utility.yul\":9391:9395   */\n      0x00\n        /* \"#utility.yul\":9411:9431   */\n      tag_374\n        /* \"#utility.yul\":9429:9430   */\n      dup3\n        /* \"#utility.yul\":9411:9431   */\n      tag_236\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9406:9431   */\n      swap2\n      pop\n        /* \"#utility.yul\":9445:9465   */\n      tag_375\n        /* \"#utility.yul\":9463:9464   */\n      dup4\n        /* \"#utility.yul\":9445:9465   */\n      tag_236\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9440:9465   */\n      swap3\n      pop\n        /* \"#utility.yul\":9489:9490   */\n      dup3\n        /* \"#utility.yul\":9486:9487   */\n      dup3\n        /* \"#utility.yul\":9482:9491   */\n      sub\n        /* \"#utility.yul\":9474:9491   */\n      swap1\n      pop\n        /* \"#utility.yul\":9513:9514   */\n      dup2\n        /* \"#utility.yul\":9507:9511   */\n      dup2\n        /* \"#utility.yul\":9504:9515   */\n      gt\n        /* \"#utility.yul\":9501:9538   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":9518:9536   */\n      tag_377\n      tag_260\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":9501:9538   */\n    tag_376:\n        /* \"#utility.yul\":9351:9545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9551:9730   */\n    tag_262:\n        /* \"#utility.yul\":9691:9722   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":9687:9688   */\n      0x00\n        /* \"#utility.yul\":9679:9685   */\n      dup3\n        /* \"#utility.yul\":9675:9689   */\n      add\n        /* \"#utility.yul\":9668:9723   */\n      mstore\n        /* \"#utility.yul\":9551:9730   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9736:10102   */\n    tag_263:\n        /* \"#utility.yul\":9878:9881   */\n      0x00\n        /* \"#utility.yul\":9899:9966   */\n      tag_380\n        /* \"#utility.yul\":9963:9965   */\n      0x1d\n        /* \"#utility.yul\":9958:9961   */\n      dup4\n        /* \"#utility.yul\":9899:9966   */\n      tag_239\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9892:9966   */\n      swap2\n      pop\n        /* \"#utility.yul\":9975:10068   */\n      tag_381\n        /* \"#utility.yul\":10064:10067   */\n      dup3\n        /* \"#utility.yul\":9975:10068   */\n      tag_262\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":10093:10095   */\n      0x20\n        /* \"#utility.yul\":10088:10091   */\n      dup3\n        /* \"#utility.yul\":10084:10096   */\n      add\n        /* \"#utility.yul\":10077:10096   */\n      swap1\n      pop\n        /* \"#utility.yul\":9736:10102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10108:10527   */\n    tag_164:\n        /* \"#utility.yul\":10274:10278   */\n      0x00\n        /* \"#utility.yul\":10312:10314   */\n      0x20\n        /* \"#utility.yul\":10301:10310   */\n      dup3\n        /* \"#utility.yul\":10297:10315   */\n      add\n        /* \"#utility.yul\":10289:10315   */\n      swap1\n      pop\n        /* \"#utility.yul\":10361:10370   */\n      dup2\n        /* \"#utility.yul\":10355:10359   */\n      dup2\n        /* \"#utility.yul\":10351:10371   */\n      sub\n        /* \"#utility.yul\":10347:10348   */\n      0x00\n        /* \"#utility.yul\":10336:10345   */\n      dup4\n        /* \"#utility.yul\":10332:10349   */\n      add\n        /* \"#utility.yul\":10325:10372   */\n      mstore\n        /* \"#utility.yul\":10389:10520   */\n      tag_383\n        /* \"#utility.yul\":10515:10519   */\n      dup2\n        /* \"#utility.yul\":10389:10520   */\n      tag_263\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":10381:10520   */\n      swap1\n      pop\n        /* \"#utility.yul\":10108:10527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10533:10712   */\n    tag_264:\n        /* \"#utility.yul\":10673:10704   */\n      0x4e6f7420656e6f7567682062616c616e636520746f206465706f736974000000\n        /* \"#utility.yul\":10669:10670   */\n      0x00\n        /* \"#utility.yul\":10661:10667   */\n      dup3\n        /* \"#utility.yul\":10657:10671   */\n      add\n        /* \"#utility.yul\":10650:10705   */\n      mstore\n        /* \"#utility.yul\":10533:10712   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10718:11084   */\n    tag_265:\n        /* \"#utility.yul\":10860:10863   */\n      0x00\n        /* \"#utility.yul\":10881:10948   */\n      tag_386\n        /* \"#utility.yul\":10945:10947   */\n      0x1d\n        /* \"#utility.yul\":10940:10943   */\n      dup4\n        /* \"#utility.yul\":10881:10948   */\n      tag_239\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":10874:10948   */\n      swap2\n      pop\n        /* \"#utility.yul\":10957:11050   */\n      tag_387\n        /* \"#utility.yul\":11046:11049   */\n      dup3\n        /* \"#utility.yul\":10957:11050   */\n      tag_264\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11075:11077   */\n      0x20\n        /* \"#utility.yul\":11070:11073   */\n      dup3\n        /* \"#utility.yul\":11066:11078   */\n      add\n        /* \"#utility.yul\":11059:11078   */\n      swap1\n      pop\n        /* \"#utility.yul\":10718:11084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11090:11509   */\n    tag_168:\n        /* \"#utility.yul\":11256:11260   */\n      0x00\n        /* \"#utility.yul\":11294:11296   */\n      0x20\n        /* \"#utility.yul\":11283:11292   */\n      dup3\n        /* \"#utility.yul\":11279:11297   */\n      add\n        /* \"#utility.yul\":11271:11297   */\n      swap1\n      pop\n        /* \"#utility.yul\":11343:11352   */\n      dup2\n        /* \"#utility.yul\":11337:11341   */\n      dup2\n        /* \"#utility.yul\":11333:11353   */\n      sub\n        /* \"#utility.yul\":11329:11330   */\n      0x00\n        /* \"#utility.yul\":11318:11327   */\n      dup4\n        /* \"#utility.yul\":11314:11331   */\n      add\n        /* \"#utility.yul\":11307:11354   */\n      mstore\n        /* \"#utility.yul\":11371:11502   */\n      tag_389\n        /* \"#utility.yul\":11497:11501   */\n      dup2\n        /* \"#utility.yul\":11371:11502   */\n      tag_265\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11363:11502   */\n      swap1\n      pop\n        /* \"#utility.yul\":11090:11509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11515:11735   */\n    tag_266:\n        /* \"#utility.yul\":11655:11689   */\n      0x576974686472617720746f206f776e6572206973206e6f7420616c6c6f776564\n        /* \"#utility.yul\":11651:11652   */\n      0x00\n        /* \"#utility.yul\":11643:11649   */\n      dup3\n        /* \"#utility.yul\":11639:11653   */\n      add\n        /* \"#utility.yul\":11632:11690   */\n      mstore\n        /* \"#utility.yul\":11724:11727   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11719:11721   */\n      0x20\n        /* \"#utility.yul\":11711:11717   */\n      dup3\n        /* \"#utility.yul\":11707:11722   */\n      add\n        /* \"#utility.yul\":11700:11728   */\n      mstore\n        /* \"#utility.yul\":11515:11735   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11741:12107   */\n    tag_267:\n        /* \"#utility.yul\":11883:11886   */\n      0x00\n        /* \"#utility.yul\":11904:11971   */\n      tag_392\n        /* \"#utility.yul\":11968:11970   */\n      0x21\n        /* \"#utility.yul\":11963:11966   */\n      dup4\n        /* \"#utility.yul\":11904:11971   */\n      tag_239\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11897:11971   */\n      swap2\n      pop\n        /* \"#utility.yul\":11980:12073   */\n      tag_393\n        /* \"#utility.yul\":12069:12072   */\n      dup3\n        /* \"#utility.yul\":11980:12073   */\n      tag_266\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12098:12100   */\n      0x40\n        /* \"#utility.yul\":12093:12096   */\n      dup3\n        /* \"#utility.yul\":12089:12101   */\n      add\n        /* \"#utility.yul\":12082:12101   */\n      swap1\n      pop\n        /* \"#utility.yul\":11741:12107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12113:12532   */\n    tag_177:\n        /* \"#utility.yul\":12279:12283   */\n      0x00\n        /* \"#utility.yul\":12317:12319   */\n      0x20\n        /* \"#utility.yul\":12306:12315   */\n      dup3\n        /* \"#utility.yul\":12302:12320   */\n      add\n        /* \"#utility.yul\":12294:12320   */\n      swap1\n      pop\n        /* \"#utility.yul\":12366:12375   */\n      dup2\n        /* \"#utility.yul\":12360:12364   */\n      dup2\n        /* \"#utility.yul\":12356:12376   */\n      sub\n        /* \"#utility.yul\":12352:12353   */\n      0x00\n        /* \"#utility.yul\":12341:12350   */\n      dup4\n        /* \"#utility.yul\":12337:12354   */\n      add\n        /* \"#utility.yul\":12330:12377   */\n      mstore\n        /* \"#utility.yul\":12394:12525   */\n      tag_395\n        /* \"#utility.yul\":12520:12524   */\n      dup2\n        /* \"#utility.yul\":12394:12525   */\n      tag_267\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":12386:12525   */\n      swap1\n      pop\n        /* \"#utility.yul\":12113:12532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12538:12718   */\n    tag_268:\n        /* \"#utility.yul\":12678:12710   */\n      0x4e6f7420656e6f7567682062616c616e636520746f2077697468647261770000\n        /* \"#utility.yul\":12674:12675   */\n      0x00\n        /* \"#utility.yul\":12666:12672   */\n      dup3\n        /* \"#utility.yul\":12662:12676   */\n      add\n        /* \"#utility.yul\":12655:12711   */\n      mstore\n        /* \"#utility.yul\":12538:12718   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12724:13090   */\n    tag_269:\n        /* \"#utility.yul\":12866:12869   */\n      0x00\n        /* \"#utility.yul\":12887:12954   */\n      tag_398\n        /* \"#utility.yul\":12951:12953   */\n      0x1e\n        /* \"#utility.yul\":12946:12949   */\n      dup4\n        /* \"#utility.yul\":12887:12954   */\n      tag_239\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12880:12954   */\n      swap2\n      pop\n        /* \"#utility.yul\":12963:13056   */\n      tag_399\n        /* \"#utility.yul\":13052:13055   */\n      dup3\n        /* \"#utility.yul\":12963:13056   */\n      tag_268\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":13081:13083   */\n      0x20\n        /* \"#utility.yul\":13076:13079   */\n      dup3\n        /* \"#utility.yul\":13072:13084   */\n      add\n        /* \"#utility.yul\":13065:13084   */\n      swap1\n      pop\n        /* \"#utility.yul\":12724:13090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13096:13515   */\n    tag_183:\n        /* \"#utility.yul\":13262:13266   */\n      0x00\n        /* \"#utility.yul\":13300:13302   */\n      0x20\n        /* \"#utility.yul\":13289:13298   */\n      dup3\n        /* \"#utility.yul\":13285:13303   */\n      add\n        /* \"#utility.yul\":13277:13303   */\n      swap1\n      pop\n        /* \"#utility.yul\":13349:13358   */\n      dup2\n        /* \"#utility.yul\":13343:13347   */\n      dup2\n        /* \"#utility.yul\":13339:13359   */\n      sub\n        /* \"#utility.yul\":13335:13336   */\n      0x00\n        /* \"#utility.yul\":13324:13333   */\n      dup4\n        /* \"#utility.yul\":13320:13337   */\n      add\n        /* \"#utility.yul\":13313:13360   */\n      mstore\n        /* \"#utility.yul\":13377:13508   */\n      tag_401\n        /* \"#utility.yul\":13503:13507   */\n      dup2\n        /* \"#utility.yul\":13377:13508   */\n      tag_269\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13369:13508   */\n      swap1\n      pop\n        /* \"#utility.yul\":13096:13515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13521:13963   */\n    tag_203:\n        /* \"#utility.yul\":13670:13674   */\n      0x00\n        /* \"#utility.yul\":13708:13710   */\n      0x60\n        /* \"#utility.yul\":13697:13706   */\n      dup3\n        /* \"#utility.yul\":13693:13711   */\n      add\n        /* \"#utility.yul\":13685:13711   */\n      swap1\n      pop\n        /* \"#utility.yul\":13721:13792   */\n      tag_403\n        /* \"#utility.yul\":13789:13790   */\n      0x00\n        /* \"#utility.yul\":13778:13787   */\n      dup4\n        /* \"#utility.yul\":13774:13791   */\n      add\n        /* \"#utility.yul\":13765:13771   */\n      dup7\n        /* \"#utility.yul\":13721:13792   */\n      tag_256\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13802:13874   */\n      tag_404\n        /* \"#utility.yul\":13870:13872   */\n      0x20\n        /* \"#utility.yul\":13859:13868   */\n      dup4\n        /* \"#utility.yul\":13855:13873   */\n      add\n        /* \"#utility.yul\":13846:13852   */\n      dup6\n        /* \"#utility.yul\":13802:13874   */\n      tag_237\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13884:13956   */\n      tag_405\n        /* \"#utility.yul\":13952:13954   */\n      0x40\n        /* \"#utility.yul\":13941:13950   */\n      dup4\n        /* \"#utility.yul\":13937:13955   */\n      add\n        /* \"#utility.yul\":13928:13934   */\n      dup5\n        /* \"#utility.yul\":13884:13956   */\n      tag_237\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13521:13963   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13969:14160   */\n    tag_229:\n        /* \"#utility.yul\":14009:14012   */\n      0x00\n        /* \"#utility.yul\":14028:14048   */\n      tag_407\n        /* \"#utility.yul\":14046:14047   */\n      dup3\n        /* \"#utility.yul\":14028:14048   */\n      tag_236\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":14023:14048   */\n      swap2\n      pop\n        /* \"#utility.yul\":14062:14082   */\n      tag_408\n        /* \"#utility.yul\":14080:14081   */\n      dup4\n        /* \"#utility.yul\":14062:14082   */\n      tag_236\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":14057:14082   */\n      swap3\n      pop\n        /* \"#utility.yul\":14105:14106   */\n      dup3\n        /* \"#utility.yul\":14102:14103   */\n      dup3\n        /* \"#utility.yul\":14098:14107   */\n      add\n        /* \"#utility.yul\":14091:14107   */\n      swap1\n      pop\n        /* \"#utility.yul\":14126:14129   */\n      dup1\n        /* \"#utility.yul\":14123:14124   */\n      dup3\n        /* \"#utility.yul\":14120:14130   */\n      gt\n        /* \"#utility.yul\":14117:14153   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":14133:14151   */\n      tag_410\n      tag_260\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":14117:14153   */\n    tag_409:\n        /* \"#utility.yul\":13969:14160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204c3a1d87a0d4dac038f1169bffcf3dc32909b6edd0fcc65ceaf940edcfc54c6864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_991": {
									"entryPoint": null,
									"id": 991,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 730,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 527,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 868,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 722,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3080,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2047,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1596,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10865:7",
										"nodeType": "YulBlock",
										"src": "0:10865:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "939:413:7",
													"nodeType": "YulBlock",
													"src": "939:413:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:7",
																"nodeType": "YulBlock",
																"src": "985:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:7"
																			},
																			"nativeSrc": "987:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:7"
																		},
																		"nativeSrc": "987:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:7"
																		},
																		"nativeSrc": "956:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "981:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:7"
																},
																"nativeSrc": "952:32:7",
																"nodeType": "YulFunctionCall",
																"src": "952:32:7"
															},
															"nativeSrc": "949:119:7",
															"nodeType": "YulIf",
															"src": "949:119:7"
														},
														{
															"nativeSrc": "1078:128:7",
															"nodeType": "YulBlock",
															"src": "1078:128:7",
															"statements": [
																{
																	"nativeSrc": "1093:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:7"
																				},
																				"nativeSrc": "1164:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:7"
																		},
																		"nativeSrc": "1132:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:7",
															"nodeType": "YulBlock",
															"src": "1216:129:7",
															"statements": [
																{
																	"nativeSrc": "1231:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:7"
																				},
																				"nativeSrc": "1303:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:7"
																		},
																		"nativeSrc": "1271:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:7",
														"nodeType": "YulTypedName",
														"src": "901:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:7",
														"nodeType": "YulTypedName",
														"src": "912:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:7",
														"nodeType": "YulTypedName",
														"src": "924:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:7",
														"nodeType": "YulTypedName",
														"src": "932:6:7",
														"type": ""
													}
												],
												"src": "845:507:7"
											},
											{
												"body": {
													"nativeSrc": "1417:40:7",
													"nodeType": "YulBlock",
													"src": "1417:40:7",
													"statements": [
														{
															"nativeSrc": "1428:22:7",
															"nodeType": "YulAssignment",
															"src": "1428:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:7"
																},
																"nativeSrc": "1438:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:7",
														"nodeType": "YulTypedName",
														"src": "1400:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:7",
														"nodeType": "YulTypedName",
														"src": "1410:6:7",
														"type": ""
													}
												],
												"src": "1358:99:7"
											},
											{
												"body": {
													"nativeSrc": "1491:152:7",
													"nodeType": "YulBlock",
													"src": "1491:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:7"
																},
																"nativeSrc": "1501:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:7"
															},
															"nativeSrc": "1501:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:7"
																},
																"nativeSrc": "1598:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:7"
															},
															"nativeSrc": "1598:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:7"
																},
																"nativeSrc": "1622:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:7"
															},
															"nativeSrc": "1622:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:7"
											},
											{
												"body": {
													"nativeSrc": "1677:152:7",
													"nodeType": "YulBlock",
													"src": "1677:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:7"
																},
																"nativeSrc": "1687:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:7"
															},
															"nativeSrc": "1687:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:7"
																},
																"nativeSrc": "1784:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:7"
															},
															"nativeSrc": "1784:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:7"
																},
																"nativeSrc": "1808:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:7"
															},
															"nativeSrc": "1808:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:7"
											},
											{
												"body": {
													"nativeSrc": "1886:269:7",
													"nodeType": "YulBlock",
													"src": "1886:269:7",
													"statements": [
														{
															"nativeSrc": "1896:22:7",
															"nodeType": "YulAssignment",
															"src": "1896:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:7"
																},
																"nativeSrc": "1906:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:7"
																}
															]
														},
														{
															"nativeSrc": "1927:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:7"
																},
																"nativeSrc": "1953:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:7",
																"nodeType": "YulBlock",
																"src": "2004:51:7",
																"statements": [
																	{
																		"nativeSrc": "2018:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:7"
																			},
																			"nativeSrc": "2028:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:7"
																},
																"nativeSrc": "1977:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:7"
															},
															"nativeSrc": "1974:81:7",
															"nodeType": "YulIf",
															"src": "1974:81:7"
														},
														{
															"body": {
																"nativeSrc": "2107:42:7",
																"nodeType": "YulBlock",
																"src": "2107:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:7"
																			},
																			"nativeSrc": "2121:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:7"
																		},
																		"nativeSrc": "2121:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:7"
																		},
																		"nativeSrc": "2091:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:7"
																},
																"nativeSrc": "2068:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:7"
															},
															"nativeSrc": "2065:84:7",
															"nodeType": "YulIf",
															"src": "2065:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:7",
														"nodeType": "YulTypedName",
														"src": "1870:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:7",
														"nodeType": "YulTypedName",
														"src": "1879:6:7",
														"type": ""
													}
												],
												"src": "1835:320:7"
											},
											{
												"body": {
													"nativeSrc": "2215:87:7",
													"nodeType": "YulBlock",
													"src": "2215:87:7",
													"statements": [
														{
															"nativeSrc": "2225:11:7",
															"nodeType": "YulAssignment",
															"src": "2225:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:7",
																"nodeType": "YulIdentifier",
																"src": "2233:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:7"
																},
																"nativeSrc": "2246:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:7"
															},
															"nativeSrc": "2246:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:7"
														},
														{
															"nativeSrc": "2269:26:7",
															"nodeType": "YulAssignment",
															"src": "2269:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:7"
																},
																"nativeSrc": "2277:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:7",
														"nodeType": "YulTypedName",
														"src": "2202:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:7",
														"nodeType": "YulTypedName",
														"src": "2210:4:7",
														"type": ""
													}
												],
												"src": "2161:141:7"
											},
											{
												"body": {
													"nativeSrc": "2352:49:7",
													"nodeType": "YulBlock",
													"src": "2352:49:7",
													"statements": [
														{
															"nativeSrc": "2362:33:7",
															"nodeType": "YulAssignment",
															"src": "2362:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:7"
																		},
																		"nativeSrc": "2376:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:7"
																},
																"nativeSrc": "2372:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:7",
														"nodeType": "YulTypedName",
														"src": "2335:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2308:93:7"
											},
											{
												"body": {
													"nativeSrc": "2460:54:7",
													"nodeType": "YulBlock",
													"src": "2460:54:7",
													"statements": [
														{
															"nativeSrc": "2470:37:7",
															"nodeType": "YulAssignment",
															"src": "2470:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:7"
																},
																"nativeSrc": "2491:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:7",
														"nodeType": "YulTypedName",
														"src": "2435:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:7",
														"nodeType": "YulTypedName",
														"src": "2441:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:7",
														"nodeType": "YulTypedName",
														"src": "2451:8:7",
														"type": ""
													}
												],
												"src": "2407:107:7"
											},
											{
												"body": {
													"nativeSrc": "2596:317:7",
													"nodeType": "YulBlock",
													"src": "2596:317:7",
													"statements": [
														{
															"nativeSrc": "2606:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:7"
																},
																"nativeSrc": "2623:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:7"
																},
																"nativeSrc": "2662:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:7",
															"nodeType": "YulAssignment",
															"src": "2768:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:7"
																},
																"nativeSrc": "2780:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:7"
																}
															]
														},
														{
															"nativeSrc": "2828:30:7",
															"nodeType": "YulAssignment",
															"src": "2828:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:7"
																		},
																		"nativeSrc": "2848:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:7"
																},
																"nativeSrc": "2837:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:7"
																}
															]
														},
														{
															"nativeSrc": "2867:40:7",
															"nodeType": "YulAssignment",
															"src": "2867:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:7"
																		},
																		"nativeSrc": "2887:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:7"
																},
																"nativeSrc": "2877:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:7",
														"nodeType": "YulTypedName",
														"src": "2557:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:7",
														"nodeType": "YulTypedName",
														"src": "2564:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:7",
														"nodeType": "YulTypedName",
														"src": "2576:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:7",
														"nodeType": "YulTypedName",
														"src": "2589:6:7",
														"type": ""
													}
												],
												"src": "2520:393:7"
											},
											{
												"body": {
													"nativeSrc": "2964:32:7",
													"nodeType": "YulBlock",
													"src": "2964:32:7",
													"statements": [
														{
															"nativeSrc": "2974:16:7",
															"nodeType": "YulAssignment",
															"src": "2974:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:7",
																"nodeType": "YulIdentifier",
																"src": "2985:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:7",
														"nodeType": "YulTypedName",
														"src": "2946:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:7",
														"nodeType": "YulTypedName",
														"src": "2956:7:7",
														"type": ""
													}
												],
												"src": "2919:77:7"
											},
											{
												"body": {
													"nativeSrc": "3034:28:7",
													"nodeType": "YulBlock",
													"src": "3034:28:7",
													"statements": [
														{
															"nativeSrc": "3044:12:7",
															"nodeType": "YulAssignment",
															"src": "3044:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:7",
																"nodeType": "YulIdentifier",
																"src": "3051:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:7",
														"nodeType": "YulTypedName",
														"src": "3020:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:7",
														"nodeType": "YulTypedName",
														"src": "3030:3:7",
														"type": ""
													}
												],
												"src": "3002:60:7"
											},
											{
												"body": {
													"nativeSrc": "3128:82:7",
													"nodeType": "YulBlock",
													"src": "3128:82:7",
													"statements": [
														{
															"nativeSrc": "3138:66:7",
															"nodeType": "YulAssignment",
															"src": "3138:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:7"
																				},
																				"nativeSrc": "3178:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:7"
																		},
																		"nativeSrc": "3169:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:7"
																},
																"nativeSrc": "3151:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:7",
														"nodeType": "YulTypedName",
														"src": "3108:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:7",
														"nodeType": "YulTypedName",
														"src": "3118:9:7",
														"type": ""
													}
												],
												"src": "3068:142:7"
											},
											{
												"body": {
													"nativeSrc": "3263:28:7",
													"nodeType": "YulBlock",
													"src": "3263:28:7",
													"statements": [
														{
															"nativeSrc": "3273:12:7",
															"nodeType": "YulAssignment",
															"src": "3273:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:7",
																"nodeType": "YulIdentifier",
																"src": "3280:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:7",
														"nodeType": "YulTypedName",
														"src": "3249:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:7",
														"nodeType": "YulTypedName",
														"src": "3259:3:7",
														"type": ""
													}
												],
												"src": "3216:75:7"
											},
											{
												"body": {
													"nativeSrc": "3373:193:7",
													"nodeType": "YulBlock",
													"src": "3373:193:7",
													"statements": [
														{
															"nativeSrc": "3383:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:7"
																},
																"nativeSrc": "3407:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:7"
																				},
																				"nativeSrc": "3496:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:7"
																				},
																				"nativeSrc": "3517:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:7"
																		},
																		"nativeSrc": "3468:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:7"
																},
																"nativeSrc": "3455:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:7"
															},
															"nativeSrc": "3455:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:7",
														"nodeType": "YulTypedName",
														"src": "3350:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:7",
														"nodeType": "YulTypedName",
														"src": "3356:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:7",
														"nodeType": "YulTypedName",
														"src": "3364:7:7",
														"type": ""
													}
												],
												"src": "3297:269:7"
											},
											{
												"body": {
													"nativeSrc": "3621:24:7",
													"nodeType": "YulBlock",
													"src": "3621:24:7",
													"statements": [
														{
															"nativeSrc": "3631:8:7",
															"nodeType": "YulAssignment",
															"src": "3631:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:7",
																"nodeType": "YulLiteral",
																"src": "3638:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:7",
														"nodeType": "YulTypedName",
														"src": "3617:3:7",
														"type": ""
													}
												],
												"src": "3572:73:7"
											},
											{
												"body": {
													"nativeSrc": "3704:136:7",
													"nodeType": "YulBlock",
													"src": "3704:136:7",
													"statements": [
														{
															"nativeSrc": "3714:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:7"
																},
																"nativeSrc": "3728:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:7"
																},
																"nativeSrc": "3769:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:7"
															},
															"nativeSrc": "3769:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:7",
														"nodeType": "YulTypedName",
														"src": "3690:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:7",
														"nodeType": "YulTypedName",
														"src": "3696:6:7",
														"type": ""
													}
												],
												"src": "3651:189:7"
											},
											{
												"body": {
													"nativeSrc": "3896:136:7",
													"nodeType": "YulBlock",
													"src": "3896:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:7",
																"nodeType": "YulBlock",
																"src": "3963:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:7"
																			},
																			"nativeSrc": "3977:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:7"
																		},
																		"nativeSrc": "3977:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:7"
																},
																"nativeSrc": "3913:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:7"
															},
															"nativeSrc": "3906:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:7",
																"nodeType": "YulBlock",
																"src": "3928:26:7",
																"statements": [
																	{
																		"nativeSrc": "3930:22:7",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:7"
																			},
																			"nativeSrc": "3939:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:7",
																"nodeType": "YulBlock",
																"src": "3910:2:7",
																"statements": []
															},
															"src": "3906:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:7",
														"nodeType": "YulTypedName",
														"src": "3884:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:7",
														"nodeType": "YulTypedName",
														"src": "3891:3:7",
														"type": ""
													}
												],
												"src": "3846:186:7"
											},
											{
												"body": {
													"nativeSrc": "4117:464:7",
													"nodeType": "YulBlock",
													"src": "4117:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:7",
																"nodeType": "YulBlock",
																"src": "4143:431:7",
																"statements": [
																	{
																		"nativeSrc": "4157:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:7"
																			},
																			"nativeSrc": "4173:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:7"
																					},
																					"nativeSrc": "4257:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:7"
																			},
																			"nativeSrc": "4243:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:7",
																			"nodeType": "YulBlock",
																			"src": "4444:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:7"
																			},
																			"nativeSrc": "4425:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:7"
																		},
																		"nativeSrc": "4422:49:7",
																		"nodeType": "YulIf",
																		"src": "4422:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:7"
																							},
																							"nativeSrc": "4540:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:7"
																					},
																					"nativeSrc": "4526:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:7"
																			},
																			"nativeSrc": "4484:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:7"
																		},
																		"nativeSrc": "4484:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:7"
																},
																"nativeSrc": "4131:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:7"
															},
															"nativeSrc": "4128:446:7",
															"nodeType": "YulIf",
															"src": "4128:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:7",
														"nodeType": "YulTypedName",
														"src": "4093:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:7",
														"nodeType": "YulTypedName",
														"src": "4100:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:7",
														"nodeType": "YulTypedName",
														"src": "4105:10:7",
														"type": ""
													}
												],
												"src": "4038:543:7"
											},
											{
												"body": {
													"nativeSrc": "4650:54:7",
													"nodeType": "YulBlock",
													"src": "4650:54:7",
													"statements": [
														{
															"nativeSrc": "4660:37:7",
															"nodeType": "YulAssignment",
															"src": "4660:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:7"
																},
																"nativeSrc": "4681:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:7",
														"nodeType": "YulTypedName",
														"src": "4625:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:7",
														"nodeType": "YulTypedName",
														"src": "4631:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:7",
														"nodeType": "YulTypedName",
														"src": "4641:8:7",
														"type": ""
													}
												],
												"src": "4587:117:7"
											},
											{
												"body": {
													"nativeSrc": "4761:118:7",
													"nodeType": "YulBlock",
													"src": "4761:118:7",
													"statements": [
														{
															"nativeSrc": "4771:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:7"
																				},
																				"nativeSrc": "4816:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:7"
																				},
																				"nativeSrc": "4831:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:7"
																		},
																		"nativeSrc": "4787:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:7"
																},
																"nativeSrc": "4783:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:7",
															"nodeType": "YulAssignment",
															"src": "4848:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:7"
																},
																"nativeSrc": "4858:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:7",
														"nodeType": "YulTypedName",
														"src": "4738:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:7",
														"nodeType": "YulTypedName",
														"src": "4744:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:7",
														"nodeType": "YulTypedName",
														"src": "4754:6:7",
														"type": ""
													}
												],
												"src": "4710:169:7"
											},
											{
												"body": {
													"nativeSrc": "4965:214:7",
													"nodeType": "YulBlock",
													"src": "4965:214:7",
													"statements": [
														{
															"nativeSrc": "5098:37:7",
															"nodeType": "YulAssignment",
															"src": "5098:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:7"
																},
																"nativeSrc": "5106:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:7"
																}
															]
														},
														{
															"nativeSrc": "5144:29:7",
															"nodeType": "YulAssignment",
															"src": "5144:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:7"
																		},
																		"nativeSrc": "5161:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:7"
																},
																"nativeSrc": "5152:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:7",
														"nodeType": "YulTypedName",
														"src": "4946:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:7",
														"nodeType": "YulTypedName",
														"src": "4952:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:7",
														"nodeType": "YulTypedName",
														"src": "4960:4:7",
														"type": ""
													}
												],
												"src": "4884:295:7"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:7",
													"nodeType": "YulBlock",
													"src": "5276:1303:7",
													"statements": [
														{
															"nativeSrc": "5287:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:7"
																},
																"nativeSrc": "5301:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:7",
																"nodeType": "YulBlock",
																"src": "5423:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:7"
																			},
																			"nativeSrc": "5425:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:7"
																		},
																		"nativeSrc": "5425:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:7"
																},
																"nativeSrc": "5392:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:7"
															},
															"nativeSrc": "5389:56:7",
															"nodeType": "YulIf",
															"src": "5389:56:7"
														},
														{
															"nativeSrc": "5455:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:7"
																		},
																		"nativeSrc": "5495:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:7"
																},
																"nativeSrc": "5469:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:7"
																},
																"nativeSrc": "5554:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:7"
															},
															"nativeSrc": "5554:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:7"
														},
														{
															"nativeSrc": "5631:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:7",
																"nodeType": "YulLiteral",
																"src": "5648:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:7",
															"nodeType": "YulAssignment",
															"src": "5659:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:7",
																"nodeType": "YulLiteral",
																"src": "5672:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:7",
																		"nodeType": "YulBlock",
																		"src": "5723:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:7"
																							},
																							"nativeSrc": "5764:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:7"
																					},
																					"nativeSrc": "5752:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:7"
																					},
																					"nativeSrc": "5802:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:7",
																					"nodeType": "YulBlock",
																					"src": "5920:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:7"
																												},
																												"nativeSrc": "5959:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:7"
																										},
																										"nativeSrc": "5953:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:7"
																								},
																								"nativeSrc": "5938:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:7"
																							},
																							"nativeSrc": "5938:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:7"
																						},
																						{
																							"nativeSrc": "5997:24:7",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:7",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:7"
																								},
																								"nativeSrc": "6007:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:7",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:7",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:7"
																								},
																								"nativeSrc": "6051:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:7"
																					},
																					"nativeSrc": "5883:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:7"
																				},
																				"nativeSrc": "5875:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:7",
																					"nodeType": "YulBlock",
																					"src": "5898:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:7"
																								},
																								"nativeSrc": "5905:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:7",
																					"nodeType": "YulBlock",
																					"src": "5879:3:7",
																					"statements": []
																				},
																				"src": "5875:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:7",
																					"nodeType": "YulBlock",
																					"src": "6119:156:7",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:7"
																										},
																										"nativeSrc": "6160:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:7"
																								},
																								"nativeSrc": "6154:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:7",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:7"
																												},
																												"nativeSrc": "6242:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:7"
																										},
																										"nativeSrc": "6212:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:7"
																								},
																								"nativeSrc": "6197:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:7"
																							},
																							"nativeSrc": "6197:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:7"
																					},
																					"nativeSrc": "6099:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:7"
																				},
																				"nativeSrc": "6096:179:7",
																				"nodeType": "YulIf",
																				"src": "6096:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:7"
																									},
																									"nativeSrc": "6305:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:7"
																							},
																							"nativeSrc": "6301:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:7"
																					},
																					"nativeSrc": "6288:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:7"
																				},
																				"nativeSrc": "6288:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:7",
																	"nodeType": "YulCase",
																	"src": "5716:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:7",
																		"nodeType": "YulBlock",
																		"src": "6351:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:7",
																					"nodeType": "YulBlock",
																					"src": "6402:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:7"
																										},
																										"nativeSrc": "6435:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:7"
																								},
																								"nativeSrc": "6429:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:7"
																				},
																				"nativeSrc": "6392:77:7",
																				"nodeType": "YulIf",
																				"src": "6392:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:7"
																							},
																							"nativeSrc": "6495:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:7"
																					},
																					"nativeSrc": "6482:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:7"
																				},
																				"nativeSrc": "6482:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:7",
																	"nodeType": "YulCase",
																	"src": "6343:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:7"
																},
																"nativeSrc": "5693:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:7"
															},
															"nativeSrc": "5686:887:7",
															"nodeType": "YulSwitch",
															"src": "5686:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:7",
														"nodeType": "YulTypedName",
														"src": "5265:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:7",
														"nodeType": "YulTypedName",
														"src": "5271:3:7",
														"type": ""
													}
												],
												"src": "5184:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6650:53:7",
													"nodeType": "YulBlock",
													"src": "6650:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6667:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6690:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6690:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6672:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6672:17:7"
																		},
																		"nativeSrc": "6672:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:7"
																},
																"nativeSrc": "6660:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6660:37:7"
															},
															"nativeSrc": "6660:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6660:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6585:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6638:5:7",
														"nodeType": "YulTypedName",
														"src": "6638:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6645:3:7",
														"nodeType": "YulTypedName",
														"src": "6645:3:7",
														"type": ""
													}
												],
												"src": "6585:118:7"
											},
											{
												"body": {
													"nativeSrc": "6807:124:7",
													"nodeType": "YulBlock",
													"src": "6807:124:7",
													"statements": [
														{
															"nativeSrc": "6817:26:7",
															"nodeType": "YulAssignment",
															"src": "6817:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6829:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6829:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6840:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:7"
																},
																"nativeSrc": "6825:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6825:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6817:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6897:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6897:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6910:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6921:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6921:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6906:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:7"
																		},
																		"nativeSrc": "6906:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6853:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6853:43:7"
																},
																"nativeSrc": "6853:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6853:71:7"
															},
															"nativeSrc": "6853:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6853:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6709:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6779:9:7",
														"nodeType": "YulTypedName",
														"src": "6779:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6791:6:7",
														"nodeType": "YulTypedName",
														"src": "6791:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6802:4:7",
														"nodeType": "YulTypedName",
														"src": "6802:4:7",
														"type": ""
													}
												],
												"src": "6709:222:7"
											},
											{
												"body": {
													"nativeSrc": "6965:152:7",
													"nodeType": "YulBlock",
													"src": "6965:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6982:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6982:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6985:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6985:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:7"
																},
																"nativeSrc": "6975:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6975:88:7"
															},
															"nativeSrc": "6975:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6975:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7079:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7079:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7082:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7082:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7072:6:7"
																},
																"nativeSrc": "7072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7072:15:7"
															},
															"nativeSrc": "7072:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7072:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7103:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7103:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7106:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7106:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7096:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7096:6:7"
																},
																"nativeSrc": "7096:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7096:15:7"
															},
															"nativeSrc": "7096:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7096:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6937:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:180:7"
											},
											{
												"body": {
													"nativeSrc": "7174:51:7",
													"nodeType": "YulBlock",
													"src": "7174:51:7",
													"statements": [
														{
															"nativeSrc": "7184:34:7",
															"nodeType": "YulAssignment",
															"src": "7184:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7209:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7209:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7212:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7212:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7205:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7205:3:7"
																},
																"nativeSrc": "7205:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7205:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7184:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7184:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7123:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7155:5:7",
														"nodeType": "YulTypedName",
														"src": "7155:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7165:8:7",
														"nodeType": "YulTypedName",
														"src": "7165:8:7",
														"type": ""
													}
												],
												"src": "7123:102:7"
											},
											{
												"body": {
													"nativeSrc": "7304:775:7",
													"nodeType": "YulBlock",
													"src": "7304:775:7",
													"statements": [
														{
															"nativeSrc": "7314:15:7",
															"nodeType": "YulAssignment",
															"src": "7314:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "7323:6:7",
																"nodeType": "YulIdentifier",
																"src": "7323:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7314:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7314:5:7"
																}
															]
														},
														{
															"nativeSrc": "7338:14:7",
															"nodeType": "YulAssignment",
															"src": "7338:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "7347:5:7",
																"nodeType": "YulIdentifier",
																"src": "7347:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7338:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7338:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7396:677:7",
																"nodeType": "YulBlock",
																"src": "7396:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7484:22:7",
																			"nodeType": "YulBlock",
																			"src": "7484:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7486:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "7486:16:7"
																						},
																						"nativeSrc": "7486:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7486:18:7"
																					},
																					"nativeSrc": "7486:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "7486:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7462:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7462:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7472:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7472:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7477:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "7477:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7468:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7468:3:7"
																					},
																					"nativeSrc": "7468:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7468:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7459:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7459:2:7"
																			},
																			"nativeSrc": "7459:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7459:24:7"
																		},
																		"nativeSrc": "7456:50:7",
																		"nodeType": "YulIf",
																		"src": "7456:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "7551:419:7",
																			"nodeType": "YulBlock",
																			"src": "7551:419:7",
																			"statements": [
																				{
																					"nativeSrc": "7931:25:7",
																					"nodeType": "YulAssignment",
																					"src": "7931:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7944:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "7944:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7951:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "7951:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7940:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7940:3:7"
																						},
																						"nativeSrc": "7940:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7940:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7931:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "7931:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7526:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7526:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7536:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7536:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7522:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7522:3:7"
																			},
																			"nativeSrc": "7522:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7522:16:7"
																		},
																		"nativeSrc": "7519:451:7",
																		"nodeType": "YulIf",
																		"src": "7519:451:7"
																	},
																	{
																		"nativeSrc": "7983:23:7",
																		"nodeType": "YulAssignment",
																		"src": "7983:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7995:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7995:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8001:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8001:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7991:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7991:3:7"
																			},
																			"nativeSrc": "7991:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7991:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7983:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7983:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8019:44:7",
																		"nodeType": "YulAssignment",
																		"src": "8019:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8054:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8054:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8031:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "8031:22:7"
																			},
																			"nativeSrc": "8031:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8031:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8019:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "8019:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7372:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7372:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7382:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7382:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7369:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7369:2:7"
																},
																"nativeSrc": "7369:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7369:15:7"
															},
															"nativeSrc": "7361:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7385:2:7",
																"nodeType": "YulBlock",
																"src": "7385:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7365:3:7",
																"nodeType": "YulBlock",
																"src": "7365:3:7",
																"statements": []
															},
															"src": "7361:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7231:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7259:6:7",
														"nodeType": "YulTypedName",
														"src": "7259:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7267:5:7",
														"nodeType": "YulTypedName",
														"src": "7267:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7274:8:7",
														"nodeType": "YulTypedName",
														"src": "7274:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7284:3:7",
														"nodeType": "YulTypedName",
														"src": "7284:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7292:5:7",
														"nodeType": "YulTypedName",
														"src": "7292:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7299:4:7",
														"nodeType": "YulTypedName",
														"src": "7299:4:7",
														"type": ""
													}
												],
												"src": "7231:848:7"
											},
											{
												"body": {
													"nativeSrc": "8145:1013:7",
													"nodeType": "YulBlock",
													"src": "8145:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8340:20:7",
																"nodeType": "YulBlock",
																"src": "8340:20:7",
																"statements": [
																	{
																		"nativeSrc": "8342:10:7",
																		"nodeType": "YulAssignment",
																		"src": "8342:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8351:1:7",
																			"nodeType": "YulLiteral",
																			"src": "8351:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8342:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8342:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8353:5:7",
																		"nodeType": "YulLeave",
																		"src": "8353:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8330:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8330:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8323:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8323:6:7"
																},
																"nativeSrc": "8323:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8323:16:7"
															},
															"nativeSrc": "8320:40:7",
															"nodeType": "YulIf",
															"src": "8320:40:7"
														},
														{
															"body": {
																"nativeSrc": "8385:20:7",
																"nodeType": "YulBlock",
																"src": "8385:20:7",
																"statements": [
																	{
																		"nativeSrc": "8387:10:7",
																		"nodeType": "YulAssignment",
																		"src": "8387:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8396:1:7",
																			"nodeType": "YulLiteral",
																			"src": "8396:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8387:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8387:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8398:5:7",
																		"nodeType": "YulLeave",
																		"src": "8398:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8379:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8379:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8372:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8372:6:7"
																},
																"nativeSrc": "8372:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8372:12:7"
															},
															"nativeSrc": "8369:36:7",
															"nodeType": "YulIf",
															"src": "8369:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8515:20:7",
																		"nodeType": "YulBlock",
																		"src": "8515:20:7",
																		"statements": [
																			{
																				"nativeSrc": "8517:10:7",
																				"nodeType": "YulAssignment",
																				"src": "8517:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8526:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8517:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8517:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8528:5:7",
																				"nodeType": "YulLeave",
																				"src": "8528:5:7"
																			}
																		]
																	},
																	"nativeSrc": "8508:27:7",
																	"nodeType": "YulCase",
																	"src": "8508:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8513:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8513:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8559:176:7",
																		"nodeType": "YulBlock",
																		"src": "8559:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8594:22:7",
																					"nodeType": "YulBlock",
																					"src": "8594:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8596:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "8596:16:7"
																								},
																								"nativeSrc": "8596:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8596:18:7"
																							},
																							"nativeSrc": "8596:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8596:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8579:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8579:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8589:3:7",
																							"nodeType": "YulLiteral",
																							"src": "8589:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8576:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8576:2:7"
																					},
																					"nativeSrc": "8576:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8576:17:7"
																				},
																				"nativeSrc": "8573:43:7",
																				"nodeType": "YulIf",
																				"src": "8573:43:7"
																			},
																			{
																				"nativeSrc": "8629:25:7",
																				"nodeType": "YulAssignment",
																				"src": "8629:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8642:1:7",
																							"nodeType": "YulLiteral",
																							"src": "8642:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8645:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8645:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8638:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8638:3:7"
																					},
																					"nativeSrc": "8638:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8638:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8629:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8629:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8685:22:7",
																					"nodeType": "YulBlock",
																					"src": "8685:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8687:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "8687:16:7"
																								},
																								"nativeSrc": "8687:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8687:18:7"
																							},
																							"nativeSrc": "8687:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8687:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8673:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "8673:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8680:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8680:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8670:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8670:2:7"
																					},
																					"nativeSrc": "8670:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8670:14:7"
																				},
																				"nativeSrc": "8667:40:7",
																				"nodeType": "YulIf",
																				"src": "8667:40:7"
																			},
																			{
																				"nativeSrc": "8720:5:7",
																				"nodeType": "YulLeave",
																				"src": "8720:5:7"
																			}
																		]
																	},
																	"nativeSrc": "8544:191:7",
																	"nodeType": "YulCase",
																	"src": "8544:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8549:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8549:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8465:4:7",
																"nodeType": "YulIdentifier",
																"src": "8465:4:7"
															},
															"nativeSrc": "8458:277:7",
															"nodeType": "YulSwitch",
															"src": "8458:277:7"
														},
														{
															"body": {
																"nativeSrc": "8867:123:7",
																"nodeType": "YulBlock",
																"src": "8867:123:7",
																"statements": [
																	{
																		"nativeSrc": "8881:28:7",
																		"nodeType": "YulAssignment",
																		"src": "8881:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8894:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8894:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8900:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8900:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8890:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8890:3:7"
																			},
																			"nativeSrc": "8890:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8890:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8881:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8881:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8940:22:7",
																			"nodeType": "YulBlock",
																			"src": "8940:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8942:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "8942:16:7"
																						},
																						"nativeSrc": "8942:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8942:18:7"
																					},
																					"nativeSrc": "8942:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "8942:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8928:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "8928:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8935:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8935:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8925:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "8925:2:7"
																			},
																			"nativeSrc": "8925:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8925:14:7"
																		},
																		"nativeSrc": "8922:40:7",
																		"nodeType": "YulIf",
																		"src": "8922:40:7"
																	},
																	{
																		"nativeSrc": "8975:5:7",
																		"nodeType": "YulLeave",
																		"src": "8975:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8770:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8770:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8776:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8776:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8767:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8767:2:7"
																				},
																				"nativeSrc": "8767:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8767:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8784:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8784:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8794:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8794:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8781:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8781:2:7"
																				},
																				"nativeSrc": "8781:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8781:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8763:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8763:3:7"
																		},
																		"nativeSrc": "8763:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8763:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8819:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8819:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8825:3:7",
																						"nodeType": "YulLiteral",
																						"src": "8825:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8816:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8816:2:7"
																				},
																				"nativeSrc": "8816:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8816:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8834:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8834:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8844:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8844:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8831:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8831:2:7"
																				},
																				"nativeSrc": "8831:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8831:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8812:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8812:3:7"
																		},
																		"nativeSrc": "8812:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8812:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8747:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8747:2:7"
																},
																"nativeSrc": "8747:111:7",
																"nodeType": "YulFunctionCall",
																"src": "8747:111:7"
															},
															"nativeSrc": "8744:246:7",
															"nodeType": "YulIf",
															"src": "8744:246:7"
														},
														{
															"nativeSrc": "9000:57:7",
															"nodeType": "YulAssignment",
															"src": "9000:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9034:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9034:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9037:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9037:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9043:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9043:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9053:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9053:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9015:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "9015:18:7"
																},
																"nativeSrc": "9015:42:7",
																"nodeType": "YulFunctionCall",
																"src": "9015:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9000:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9000:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "9007:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9007:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9096:22:7",
																"nodeType": "YulBlock",
																"src": "9096:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9098:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9098:16:7"
																			},
																			"nativeSrc": "9098:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9098:18:7"
																		},
																		"nativeSrc": "9098:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9098:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9073:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9073:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9084:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9084:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9089:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9089:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9080:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:7"
																		},
																		"nativeSrc": "9080:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9070:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9070:2:7"
																},
																"nativeSrc": "9070:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9070:25:7"
															},
															"nativeSrc": "9067:51:7",
															"nodeType": "YulIf",
															"src": "9067:51:7"
														},
														{
															"nativeSrc": "9127:25:7",
															"nodeType": "YulAssignment",
															"src": "9127:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9140:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9140:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9147:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9147:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9136:3:7"
																},
																"nativeSrc": "9136:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9136:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9127:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9127:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8085:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8115:4:7",
														"nodeType": "YulTypedName",
														"src": "8115:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8121:8:7",
														"nodeType": "YulTypedName",
														"src": "8121:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8131:3:7",
														"nodeType": "YulTypedName",
														"src": "8131:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8139:5:7",
														"nodeType": "YulTypedName",
														"src": "8139:5:7",
														"type": ""
													}
												],
												"src": "8085:1073:7"
											},
											{
												"body": {
													"nativeSrc": "9230:219:7",
													"nodeType": "YulBlock",
													"src": "9230:219:7",
													"statements": [
														{
															"nativeSrc": "9240:31:7",
															"nodeType": "YulAssignment",
															"src": "9240:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9266:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9266:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9248:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9248:17:7"
																},
																"nativeSrc": "9248:23:7",
																"nodeType": "YulFunctionCall",
																"src": "9248:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9240:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9240:4:7"
																}
															]
														},
														{
															"nativeSrc": "9280:39:7",
															"nodeType": "YulAssignment",
															"src": "9280:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9310:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9310:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9292:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9292:17:7"
																},
																"nativeSrc": "9292:27:7",
																"nodeType": "YulFunctionCall",
																"src": "9292:27:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9280:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "9280:8:7"
																}
															]
														},
														{
															"nativeSrc": "9329:113:7",
															"nodeType": "YulAssignment",
															"src": "9329:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9359:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9359:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9365:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9365:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9375:66:7",
																		"nodeType": "YulLiteral",
																		"src": "9375:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9338:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "9338:20:7"
																},
																"nativeSrc": "9338:104:7",
																"nodeType": "YulFunctionCall",
																"src": "9338:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9329:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9329:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "9164:285:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9205:4:7",
														"nodeType": "YulTypedName",
														"src": "9205:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9211:8:7",
														"nodeType": "YulTypedName",
														"src": "9211:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9224:5:7",
														"nodeType": "YulTypedName",
														"src": "9224:5:7",
														"type": ""
													}
												],
												"src": "9164:285:7"
											},
											{
												"body": {
													"nativeSrc": "9503:362:7",
													"nodeType": "YulBlock",
													"src": "9503:362:7",
													"statements": [
														{
															"nativeSrc": "9513:25:7",
															"nodeType": "YulAssignment",
															"src": "9513:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9536:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9518:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9518:17:7"
																},
																"nativeSrc": "9518:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9518:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9513:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9513:1:7"
																}
															]
														},
														{
															"nativeSrc": "9547:25:7",
															"nodeType": "YulAssignment",
															"src": "9547:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9570:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9570:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9552:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9552:17:7"
																},
																"nativeSrc": "9552:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9552:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9547:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9547:1:7"
																}
															]
														},
														{
															"nativeSrc": "9581:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9581:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9604:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9604:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9607:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9607:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9600:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9600:3:7"
																},
																"nativeSrc": "9600:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9600:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9585:11:7",
																	"nodeType": "YulTypedName",
																	"src": "9585:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9618:41:7",
															"nodeType": "YulAssignment",
															"src": "9618:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9647:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "9647:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9629:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9629:17:7"
																},
																"nativeSrc": "9629:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9629:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9618:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9618:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9836:22:7",
																"nodeType": "YulBlock",
																"src": "9836:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9838:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9838:16:7"
																			},
																			"nativeSrc": "9838:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9838:18:7"
																		},
																		"nativeSrc": "9838:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9838:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9769:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9769:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9762:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9762:6:7"
																				},
																				"nativeSrc": "9762:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9762:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9792:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9792:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9799:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "9799:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9808:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "9808:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9795:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9795:3:7"
																						},
																						"nativeSrc": "9795:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9795:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9789:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9789:2:7"
																				},
																				"nativeSrc": "9789:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9789:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9742:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9742:2:7"
																		},
																		"nativeSrc": "9742:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9742:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9722:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9722:6:7"
																},
																"nativeSrc": "9722:113:7",
																"nodeType": "YulFunctionCall",
																"src": "9722:113:7"
															},
															"nativeSrc": "9719:139:7",
															"nodeType": "YulIf",
															"src": "9719:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9455:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9486:1:7",
														"nodeType": "YulTypedName",
														"src": "9486:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9489:1:7",
														"nodeType": "YulTypedName",
														"src": "9489:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9495:7:7",
														"nodeType": "YulTypedName",
														"src": "9495:7:7",
														"type": ""
													}
												],
												"src": "9455:410:7"
											},
											{
												"body": {
													"nativeSrc": "9915:147:7",
													"nodeType": "YulBlock",
													"src": "9915:147:7",
													"statements": [
														{
															"nativeSrc": "9925:25:7",
															"nodeType": "YulAssignment",
															"src": "9925:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9948:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9948:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9930:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9930:17:7"
																},
																"nativeSrc": "9930:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9930:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9925:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9925:1:7"
																}
															]
														},
														{
															"nativeSrc": "9959:25:7",
															"nodeType": "YulAssignment",
															"src": "9959:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9982:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9982:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9964:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9964:17:7"
																},
																"nativeSrc": "9964:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9964:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9959:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9959:1:7"
																}
															]
														},
														{
															"nativeSrc": "9993:16:7",
															"nodeType": "YulAssignment",
															"src": "9993:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10004:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10004:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10007:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10007:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10000:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10000:3:7"
																},
																"nativeSrc": "10000:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10000:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9993:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9993:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10033:22:7",
																"nodeType": "YulBlock",
																"src": "10033:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10035:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10035:16:7"
																			},
																			"nativeSrc": "10035:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10035:18:7"
																		},
																		"nativeSrc": "10035:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10035:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10025:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10025:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10028:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10028:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10022:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10022:2:7"
																},
																"nativeSrc": "10022:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10022:10:7"
															},
															"nativeSrc": "10019:36:7",
															"nodeType": "YulIf",
															"src": "10019:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9871:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9902:1:7",
														"nodeType": "YulTypedName",
														"src": "9902:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9905:1:7",
														"nodeType": "YulTypedName",
														"src": "9905:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9911:3:7",
														"nodeType": "YulTypedName",
														"src": "9911:3:7",
														"type": ""
													}
												],
												"src": "9871:191:7"
											},
											{
												"body": {
													"nativeSrc": "10133:53:7",
													"nodeType": "YulBlock",
													"src": "10133:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10150:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10150:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10173:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10173:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10155:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10155:17:7"
																		},
																		"nativeSrc": "10155:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10155:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10143:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10143:6:7"
																},
																"nativeSrc": "10143:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10143:37:7"
															},
															"nativeSrc": "10143:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10143:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10068:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10121:5:7",
														"nodeType": "YulTypedName",
														"src": "10121:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10128:3:7",
														"nodeType": "YulTypedName",
														"src": "10128:3:7",
														"type": ""
													}
												],
												"src": "10068:118:7"
											},
											{
												"body": {
													"nativeSrc": "10346:288:7",
													"nodeType": "YulBlock",
													"src": "10346:288:7",
													"statements": [
														{
															"nativeSrc": "10356:26:7",
															"nodeType": "YulAssignment",
															"src": "10356:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10368:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10368:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10379:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10379:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10364:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10364:3:7"
																},
																"nativeSrc": "10364:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10364:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10356:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10356:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10436:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10436:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10449:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10449:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10460:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10460:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10445:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10445:3:7"
																		},
																		"nativeSrc": "10445:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10445:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10392:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10392:43:7"
																},
																"nativeSrc": "10392:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10392:71:7"
															},
															"nativeSrc": "10392:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10392:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10517:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10517:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10530:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10530:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10541:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10541:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10526:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10526:3:7"
																		},
																		"nativeSrc": "10526:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10526:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10473:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10473:43:7"
																},
																"nativeSrc": "10473:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10473:72:7"
															},
															"nativeSrc": "10473:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10473:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10599:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10599:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10612:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10612:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10623:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10623:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10608:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10608:3:7"
																		},
																		"nativeSrc": "10608:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10608:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10555:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10555:43:7"
																},
																"nativeSrc": "10555:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10555:72:7"
															},
															"nativeSrc": "10555:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10555:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10192:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10302:9:7",
														"nodeType": "YulTypedName",
														"src": "10302:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10314:6:7",
														"nodeType": "YulTypedName",
														"src": "10314:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10322:6:7",
														"nodeType": "YulTypedName",
														"src": "10322:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10330:6:7",
														"nodeType": "YulTypedName",
														"src": "10330:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10341:4:7",
														"nodeType": "YulTypedName",
														"src": "10341:4:7",
														"type": ""
													}
												],
												"src": "10192:442:7"
											},
											{
												"body": {
													"nativeSrc": "10738:124:7",
													"nodeType": "YulBlock",
													"src": "10738:124:7",
													"statements": [
														{
															"nativeSrc": "10748:26:7",
															"nodeType": "YulAssignment",
															"src": "10748:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10760:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10760:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10771:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10771:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10756:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10756:3:7"
																},
																"nativeSrc": "10756:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10756:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10748:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10748:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10828:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10828:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10841:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10841:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10852:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10852:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10837:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10837:3:7"
																		},
																		"nativeSrc": "10837:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10837:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10784:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10784:43:7"
																},
																"nativeSrc": "10784:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10784:71:7"
															},
															"nativeSrc": "10784:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10784:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10640:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10710:9:7",
														"nodeType": "YulTypedName",
														"src": "10710:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10722:6:7",
														"nodeType": "YulTypedName",
														"src": "10722:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10733:4:7",
														"nodeType": "YulTypedName",
														"src": "10733:4:7",
														"type": ""
													}
												],
												"src": "10640:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002550380380620025508339818101604052810190620000369190620005ed565b816040518060400160405280600781526020017f3432544f4b454e000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f3432544f4b0000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000896565b508060049081620000c6919062000896565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013c575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200013391906200098b565b60405180910390fd5b6200014d816200020f60201b60201c565b50620001908262000163620002d260201b60201c565b60ff16600a62000174919062000b23565b620f424062000184919062000b73565b620002da60201b60201c565b620001a0620002d260201b60201c565b60ff16600a620001b1919062000b23565b620186a0620001c1919062000b73565b6007819055508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000c5e565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200034d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200034491906200098b565b60405180910390fd5b620003605f83836200036460201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003b8578060025f828254620003ab919062000bbd565b9250508190555062000489565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000444578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200043b9392919062000c08565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004d2578060025f82825403925050819055506200051c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200057b919062000c43565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620005b7826200058c565b9050919050565b620005c981620005ab565b8114620005d4575f80fd5b50565b5f81519050620005e781620005be565b92915050565b5f806040838503121562000606576200060562000588565b5b5f6200061585828601620005d7565b92505060206200062885828601620005d7565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620006ae57607f821691505b602082108103620006c457620006c362000669565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620006eb565b620007348683620006eb565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200077e6200077862000772846200074c565b62000755565b6200074c565b9050919050565b5f819050919050565b62000799836200075e565b620007b1620007a88262000785565b848454620006f7565b825550505050565b5f90565b620007c7620007b9565b620007d48184846200078e565b505050565b5b81811015620007fb57620007ef5f82620007bd565b600181019050620007da565b5050565b601f8211156200084a576200081481620006ca565b6200081f84620006dc565b810160208510156200082f578190505b620008476200083e85620006dc565b830182620007d9565b50505b505050565b5f82821c905092915050565b5f6200086c5f19846008026200084f565b1980831691505092915050565b5f6200088683836200085b565b9150826002028217905092915050565b620008a18262000632565b67ffffffffffffffff811115620008bd57620008bc6200063c565b5b620008c9825462000696565b620008d6828285620007ff565b5f60209050601f8311600181146200090c575f8415620008f7578287015190505b62000903858262000879565b86555062000972565b601f1984166200091c86620006ca565b5f5b8281101562000945578489015182556001820191506020850194506020810190506200091e565b8683101562000965578489015162000961601f8916826200085b565b8355505b6001600288020188555050505b505050505050565b6200098581620005ab565b82525050565b5f602082019050620009a05f8301846200097a565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111562000a305780860481111562000a085762000a07620009a6565b5b600185161562000a185780820291505b808102905062000a2885620009d3565b9450620009e8565b94509492505050565b5f8262000a4a576001905062000b1c565b8162000a59575f905062000b1c565b816001811462000a72576002811462000a7d5762000ab3565b600191505062000b1c565b60ff84111562000a925762000a91620009a6565b5b8360020a91508482111562000aac5762000aab620009a6565b5b5062000b1c565b5060208310610133831016604e8410600b841016171562000aed5782820a90508381111562000ae75762000ae6620009a6565b5b62000b1c565b62000afc8484846001620009df565b9250905081840481111562000b165762000b15620009a6565b5b81810290505b9392505050565b5f62000b2f826200074c565b915062000b3c836200074c565b925062000b6b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000a39565b905092915050565b5f62000b7f826200074c565b915062000b8c836200074c565b925082820262000b9c816200074c565b9150828204841483151762000bb65762000bb5620009a6565b5b5092915050565b5f62000bc9826200074c565b915062000bd6836200074c565b925082820190508082111562000bf15762000bf0620009a6565b5b92915050565b62000c02816200074c565b82525050565b5f60608201905062000c1d5f8301866200097a565b62000c2c602083018562000bf7565b62000c3b604083018462000bf7565b949350505050565b5f60208201905062000c585f83018462000bf7565b92915050565b6118e48062000c6c5f395ff3fe608060405234801561000f575f80fd5b506004361061012a575f3560e01c8063893d20e8116100ab578063b17d718e1161006f578063b17d718e14610322578063c415565f1461033e578063cb765c1d1461035a578063dd62ed3e14610378578063f2fde38b146103a85761012a565b8063893d20e81461027a5780638da5cb5b1461029857806395d89b41146102b65780639960d742146102d4578063a9059cbb146102f25761012a565b8063313ce567116100f2578063313ce567146101e8578063590791f214610206578063677618561461022457806370a0823114610240578063715018a6146102705761012a565b806303f492fc1461012e57806306fdde031461014c578063095ea7b31461016a57806318160ddd1461019a57806323b872dd146101b8575b5f80fd5b6101366103c4565b604051610143919061115d565b60405180910390f35b6101546103cd565b6040516101619190611200565b60405180910390f35b610184600480360381019061017f91906112a8565b61045d565b6040516101919190611300565b60405180910390f35b6101a261047f565b6040516101af919061115d565b60405180910390f35b6101d260048036038101906101cd9190611319565b610488565b6040516101df9190611300565b60405180910390f35b6101f06104b6565b6040516101fd9190611384565b60405180910390f35b61020e6104be565b60405161021b919061115d565b60405180910390f35b61023e6004803603810190610239919061139d565b6104d4565b005b61025a600480360381019061025591906113c8565b6104e6565b604051610267919061115d565b60405180910390f35b61027861052b565b005b61028261053e565b60405161028f9190611402565b60405180910390f35b6102a061054c565b6040516102ad9190611402565b60405180910390f35b6102be610574565b6040516102cb9190611200565b60405180910390f35b6102dc610604565b6040516102e99190611402565b60405180910390f35b61030c600480360381019061030791906112a8565b61062c565b6040516103199190611300565b60405180910390f35b61033c6004803603810190610337919061139d565b61071d565b005b6103586004803603810190610353919061141b565b6107e1565b005b610362610942565b60405161036f919061115d565b60405180910390f35b610392600480360381019061038d9190611459565b610972565b60405161039f919061115d565b60405180910390f35b6103c260048036038101906103bd91906113c8565b6109f4565b005b5f600754905090565b6060600380546103dc906114c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610408906114c4565b80156104535780601f1061042a57610100808354040283529160200191610453565b820191905f5260205f20905b81548152906001019060200180831161043657829003601f168201915b5050505050905090565b5f80610467610a78565b9050610474818585610a7f565b600191505092915050565b5f600254905090565b5f80610492610a78565b905061049f858285610a91565b6104aa858585610b23565b60019150509392505050565b5f6012905090565b5f6104cf6104ca61054c565b6104e6565b905090565b6104dc610c13565b8060078190555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610533610c13565b61053c5f610c9a565b565b5f61054761054c565b905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610583906114c4565b80601f01602080910402602001604051908101604052809291908181526020018280546105af906114c4565b80156105fa5780601f106105d1576101008083540402835291602001916105fa565b820191905f5260205f20905b8154815290600101906020018083116105dd57829003601f168201915b5050505050905090565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60075482111580610670575061064161054c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a690611564565b60405180910390fd5b5f60646001846106bf91906115af565b6106c9919061161d565b90505f81846106d8919061164d565b90506106e5338683610b23565b6107113360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610b23565b60019250505092915050565b610725610c13565b5f8111610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075e906116ca565b60405180910390fd5b80610771336104e6565b10156107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a990611732565b60405180910390fd5b6107de3360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610b23565b50565b6107e9610c13565b6107f161053e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610864575f610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a906117c0565b60405180910390fd5b5b5f82116108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d906116ca565b60405180910390fd5b816108d160065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166104e6565b1015610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090990611828565b60405180910390fd5b61093e60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384610b23565b5050565b5f61096d60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166104e6565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6109fc610c13565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a6c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a639190611402565b60405180910390fd5b610a7581610c9a565b50565b5f33905090565b610a8c8383836001610d5d565b505050565b5f610a9c8484610972565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b1d5781811015610b0e578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b0593929190611846565b60405180910390fd5b610b1c84848484035f610d5d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b93575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b8a9190611402565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c03575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bfa9190611402565b60405180910390fd5b610c0e838383610f2c565b505050565b610c1b610a78565b73ffffffffffffffffffffffffffffffffffffffff16610c3961054c565b73ffffffffffffffffffffffffffffffffffffffff1614610c9857610c5c610a78565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c8f9190611402565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610dcd575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610dc49190611402565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e3d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e349190611402565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f26578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f1d919061115d565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f7c578060025f828254610f70919061187b565b9250508190555061104a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611005578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ffc93929190611846565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611091578060025f82825403925050819055506110db565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611138919061115d565b60405180910390a3505050565b5f819050919050565b61115781611145565b82525050565b5f6020820190506111705f83018461114e565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156111ad578082015181840152602081019050611192565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6111d282611176565b6111dc8185611180565b93506111ec818560208601611190565b6111f5816111b8565b840191505092915050565b5f6020820190508181035f83015261121881846111c8565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61124d82611224565b9050919050565b61125d81611243565b8114611267575f80fd5b50565b5f8135905061127881611254565b92915050565b61128781611145565b8114611291575f80fd5b50565b5f813590506112a28161127e565b92915050565b5f80604083850312156112be576112bd611220565b5b5f6112cb8582860161126a565b92505060206112dc85828601611294565b9150509250929050565b5f8115159050919050565b6112fa816112e6565b82525050565b5f6020820190506113135f8301846112f1565b92915050565b5f805f606084860312156113305761132f611220565b5b5f61133d8682870161126a565b935050602061134e8682870161126a565b925050604061135f86828701611294565b9150509250925092565b5f60ff82169050919050565b61137e81611369565b82525050565b5f6020820190506113975f830184611375565b92915050565b5f602082840312156113b2576113b1611220565b5b5f6113bf84828501611294565b91505092915050565b5f602082840312156113dd576113dc611220565b5b5f6113ea8482850161126a565b91505092915050565b6113fc81611243565b82525050565b5f6020820190506114155f8301846113f3565b92915050565b5f806040838503121561143157611430611220565b5b5f61143e85828601611294565b925050602061144f8582860161126a565b9150509250929050565b5f806040838503121561146f5761146e611220565b5b5f61147c8582860161126a565b925050602061148d8582860161126a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806114db57607f821691505b6020821081036114ee576114ed611497565b5b50919050565b7f5472616e7366657220616d6f756e742065786365656473207768616c65206c695f8201527f6d69740000000000000000000000000000000000000000000000000000000000602082015250565b5f61154e602383611180565b9150611559826114f4565b604082019050919050565b5f6020820190508181035f83015261157b81611542565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115b982611145565b91506115c483611145565b92508282026115d281611145565b915082820484148315176115e9576115e8611582565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61162782611145565b915061163283611145565b925082611642576116416115f0565b5b828204905092915050565b5f61165782611145565b915061166283611145565b925082820390508181111561167a57611679611582565b5b92915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6116b4601d83611180565b91506116bf82611680565b602082019050919050565b5f6020820190508181035f8301526116e1816116a8565b9050919050565b7f4e6f7420656e6f7567682062616c616e636520746f206465706f7369740000005f82015250565b5f61171c601d83611180565b9150611727826116e8565b602082019050919050565b5f6020820190508181035f83015261174981611710565b9050919050565b7f576974686472617720746f206f776e6572206973206e6f7420616c6c6f7765645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f6117aa602183611180565b91506117b582611750565b604082019050919050565b5f6020820190508181035f8301526117d78161179e565b9050919050565b7f4e6f7420656e6f7567682062616c616e636520746f20776974686472617700005f82015250565b5f611812601e83611180565b915061181d826117de565b602082019050919050565b5f6020820190508181035f83015261183f81611806565b9050919050565b5f6060820190506118595f8301866113f3565b611866602083018561114e565b611873604083018461114e565b949350505050565b5f61188582611145565b915061189083611145565b92508282019050808211156118a8576118a7611582565b5b9291505056fea26469706673582212204c3a1d87a0d4dac038f1169bffcf3dc32909b6edd0fcc65ceaf940edcfc54c6864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2550 CODESIZE SUB DUP1 PUSH3 0x2550 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x5ED JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3432544F4B454E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3432544F4B000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x896 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x896 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x133 SWAP2 SWAP1 PUSH3 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14D DUP2 PUSH3 0x20F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x190 DUP3 PUSH3 0x163 PUSH3 0x2D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH3 0x174 SWAP2 SWAP1 PUSH3 0xB23 JUMP JUMPDEST PUSH3 0xF4240 PUSH3 0x184 SWAP2 SWAP1 PUSH3 0xB73 JUMP JUMPDEST PUSH3 0x2DA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A0 PUSH3 0x2D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH3 0x1B1 SWAP2 SWAP1 PUSH3 0xB23 JUMP JUMPDEST PUSH3 0x186A0 PUSH3 0x1C1 SWAP2 SWAP1 PUSH3 0xB73 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0xC5E JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x34D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x344 SWAP2 SWAP1 PUSH3 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x360 PUSH0 DUP4 DUP4 PUSH3 0x364 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3B8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x3AB SWAP2 SWAP1 PUSH3 0xBBD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x489 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x444 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x43B SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4D2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x51C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x57B SWAP2 SWAP1 PUSH3 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x5B7 DUP3 PUSH3 0x58C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5C9 DUP2 PUSH3 0x5AB JUMP JUMPDEST DUP2 EQ PUSH3 0x5D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x5E7 DUP2 PUSH3 0x5BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x606 JUMPI PUSH3 0x605 PUSH3 0x588 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x615 DUP6 DUP3 DUP7 ADD PUSH3 0x5D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x628 DUP6 DUP3 DUP7 ADD PUSH3 0x5D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x6AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x6C4 JUMPI PUSH3 0x6C3 PUSH3 0x669 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x728 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x6EB JUMP JUMPDEST PUSH3 0x734 DUP7 DUP4 PUSH3 0x6EB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x77E PUSH3 0x778 PUSH3 0x772 DUP5 PUSH3 0x74C JUMP JUMPDEST PUSH3 0x755 JUMP JUMPDEST PUSH3 0x74C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x799 DUP4 PUSH3 0x75E JUMP JUMPDEST PUSH3 0x7B1 PUSH3 0x7A8 DUP3 PUSH3 0x785 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x6F7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x7C7 PUSH3 0x7B9 JUMP JUMPDEST PUSH3 0x7D4 DUP2 DUP5 DUP5 PUSH3 0x78E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x7FB JUMPI PUSH3 0x7EF PUSH0 DUP3 PUSH3 0x7BD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x7DA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x84A JUMPI PUSH3 0x814 DUP2 PUSH3 0x6CA JUMP JUMPDEST PUSH3 0x81F DUP5 PUSH3 0x6DC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x82F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x847 PUSH3 0x83E DUP6 PUSH3 0x6DC JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x7D9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x86C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x84F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x886 DUP4 DUP4 PUSH3 0x85B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x8A1 DUP3 PUSH3 0x632 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8BD JUMPI PUSH3 0x8BC PUSH3 0x63C JUMP JUMPDEST JUMPDEST PUSH3 0x8C9 DUP3 SLOAD PUSH3 0x696 JUMP JUMPDEST PUSH3 0x8D6 DUP3 DUP3 DUP6 PUSH3 0x7FF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x90C JUMPI PUSH0 DUP5 ISZERO PUSH3 0x8F7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x903 DUP6 DUP3 PUSH3 0x879 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x972 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x91C DUP7 PUSH3 0x6CA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x945 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x91E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x965 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x961 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x85B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x985 DUP2 PUSH3 0x5AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9A0 PUSH0 DUP4 ADD DUP5 PUSH3 0x97A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xA30 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xA08 JUMPI PUSH3 0xA07 PUSH3 0x9A6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xA18 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xA28 DUP6 PUSH3 0x9D3 JUMP JUMPDEST SWAP5 POP PUSH3 0x9E8 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0xA4A JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xB1C JUMP JUMPDEST DUP2 PUSH3 0xA59 JUMPI PUSH0 SWAP1 POP PUSH3 0xB1C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xA72 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xA7D JUMPI PUSH3 0xAB3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xB1C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xA92 JUMPI PUSH3 0xA91 PUSH3 0x9A6 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xAAC JUMPI PUSH3 0xAAB PUSH3 0x9A6 JUMP JUMPDEST JUMPDEST POP PUSH3 0xB1C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xAED JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xAE7 JUMPI PUSH3 0xAE6 PUSH3 0x9A6 JUMP JUMPDEST JUMPDEST PUSH3 0xB1C JUMP JUMPDEST PUSH3 0xAFC DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x9DF JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xB16 JUMPI PUSH3 0xB15 PUSH3 0x9A6 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB2F DUP3 PUSH3 0x74C JUMP JUMPDEST SWAP2 POP PUSH3 0xB3C DUP4 PUSH3 0x74C JUMP JUMPDEST SWAP3 POP PUSH3 0xB6B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xA39 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB7F DUP3 PUSH3 0x74C JUMP JUMPDEST SWAP2 POP PUSH3 0xB8C DUP4 PUSH3 0x74C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xB9C DUP2 PUSH3 0x74C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xBB6 JUMPI PUSH3 0xBB5 PUSH3 0x9A6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xBC9 DUP3 PUSH3 0x74C JUMP JUMPDEST SWAP2 POP PUSH3 0xBD6 DUP4 PUSH3 0x74C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xBF1 JUMPI PUSH3 0xBF0 PUSH3 0x9A6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC02 DUP2 PUSH3 0x74C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xC1D PUSH0 DUP4 ADD DUP7 PUSH3 0x97A JUMP JUMPDEST PUSH3 0xC2C PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xBF7 JUMP JUMPDEST PUSH3 0xC3B PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xBF7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC58 PUSH0 DUP4 ADD DUP5 PUSH3 0xBF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18E4 DUP1 PUSH3 0xC6C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB17D718E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB17D718E EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC415565F EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xCB765C1D EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A8 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x9960D742 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F2 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x590791F2 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x67761856 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x270 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x3F492FC EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x52B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x282 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x362 PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3DC SWAP1 PUSH2 0x14C4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x408 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x453 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x453 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x436 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x467 PUSH2 0xA78 JUMP JUMPDEST SWAP1 POP PUSH2 0x474 DUP2 DUP6 DUP6 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x492 PUSH2 0xA78 JUMP JUMPDEST SWAP1 POP PUSH2 0x49F DUP6 DUP3 DUP6 PUSH2 0xA91 JUMP JUMPDEST PUSH2 0x4AA DUP6 DUP6 DUP6 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4CF PUSH2 0x4CA PUSH2 0x54C JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4DC PUSH2 0xC13 JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x533 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x53C PUSH0 PUSH2 0xC9A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x547 PUSH2 0x54C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x583 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5AF SWAP1 PUSH2 0x14C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x670 JUMPI POP PUSH2 0x641 PUSH2 0x54C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x1 DUP5 PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x15AF JUMP JUMPDEST PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 PUSH2 0x6D8 SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 POP PUSH2 0x6E5 CALLER DUP7 DUP4 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x711 CALLER PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x725 PUSH2 0xC13 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75E SWAP1 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x771 CALLER PUSH2 0x4E6 JUMP JUMPDEST LT ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A9 SWAP1 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DE CALLER PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xB23 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x53E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x864 JUMPI PUSH0 PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85A SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP3 GT PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89D SWAP1 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x8D1 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E6 JUMP JUMPDEST LT ISZERO PUSH2 0x912 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x909 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93E PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0xB23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x96D PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9FC PUSH2 0xC13 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA75 DUP2 PUSH2 0xC9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA8C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD5D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA9C DUP5 DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB1D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB0E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB05 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD5D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8A SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC03 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC0E DUP4 DUP4 DUP4 PUSH2 0xF2C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC1B PUSH2 0xA78 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC39 PUSH2 0x54C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC98 JUMPI PUSH2 0xC5C PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC4 SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE3D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE34 SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF26 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF1D SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF7C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF70 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x104A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1005 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1091 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10DB JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1138 SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1157 DUP2 PUSH2 0x1145 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1170 PUSH0 DUP4 ADD DUP5 PUSH2 0x114E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1192 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11D2 DUP3 PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x11DC DUP2 DUP6 PUSH2 0x1180 JUMP JUMPDEST SWAP4 POP PUSH2 0x11EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x11F5 DUP2 PUSH2 0x11B8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1218 DUP2 DUP5 PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x124D DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125D DUP2 PUSH2 0x1243 JUMP JUMPDEST DUP2 EQ PUSH2 0x1267 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1278 DUP2 PUSH2 0x1254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1287 DUP2 PUSH2 0x1145 JUMP JUMPDEST DUP2 EQ PUSH2 0x1291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A2 DUP2 PUSH2 0x127E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BD PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12CB DUP6 DUP3 DUP7 ADD PUSH2 0x126A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12DC DUP6 DUP3 DUP7 ADD PUSH2 0x1294 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FA DUP2 PUSH2 0x12E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1313 PUSH0 DUP4 ADD DUP5 PUSH2 0x12F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1330 JUMPI PUSH2 0x132F PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x133D DUP7 DUP3 DUP8 ADD PUSH2 0x126A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x134E DUP7 DUP3 DUP8 ADD PUSH2 0x126A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x135F DUP7 DUP3 DUP8 ADD PUSH2 0x1294 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137E DUP2 PUSH2 0x1369 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1397 PUSH0 DUP4 ADD DUP5 PUSH2 0x1375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13BF DUP5 DUP3 DUP6 ADD PUSH2 0x1294 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DD JUMPI PUSH2 0x13DC PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13EA DUP5 DUP3 DUP6 ADD PUSH2 0x126A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13FC DUP2 PUSH2 0x1243 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1415 PUSH0 DUP4 ADD DUP5 PUSH2 0x13F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1431 JUMPI PUSH2 0x1430 PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x143E DUP6 DUP3 DUP7 ADD PUSH2 0x1294 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x144F DUP6 DUP3 DUP7 ADD PUSH2 0x126A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146F JUMPI PUSH2 0x146E PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147C DUP6 DUP3 DUP7 ADD PUSH2 0x126A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x148D DUP6 DUP3 DUP7 ADD PUSH2 0x126A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14DB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14EE JUMPI PUSH2 0x14ED PUSH2 0x1497 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E742065786365656473207768616C65206C69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D69740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x154E PUSH1 0x23 DUP4 PUSH2 0x1180 JUMP JUMPDEST SWAP2 POP PUSH2 0x1559 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x157B DUP2 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15B9 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C4 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x15D2 DUP2 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1627 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x1632 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1642 JUMPI PUSH2 0x1641 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1657 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x1662 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x167A JUMPI PUSH2 0x1679 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16B4 PUSH1 0x1D DUP4 PUSH2 0x1180 JUMP JUMPDEST SWAP2 POP PUSH2 0x16BF DUP3 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16E1 DUP2 PUSH2 0x16A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F206465706F736974000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x171C PUSH1 0x1D DUP4 PUSH2 0x1180 JUMP JUMPDEST SWAP2 POP PUSH2 0x1727 DUP3 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1749 DUP2 PUSH2 0x1710 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x576974686472617720746F206F776E6572206973206E6F7420616C6C6F776564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17AA PUSH1 0x21 DUP4 PUSH2 0x1180 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B5 DUP3 PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17D7 DUP2 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1812 PUSH1 0x1E DUP4 PUSH2 0x1180 JUMP JUMPDEST SWAP2 POP PUSH2 0x181D DUP3 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183F DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1859 PUSH0 DUP4 ADD DUP7 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x1866 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x1873 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x114E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1885 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x1890 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18A8 JUMPI PUSH2 0x18A7 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C GASPRICE SAR DUP8 LOG0 0xD4 0xDA 0xC0 CODESIZE CALL AND SWAP12 SELFDESTRUCT 0xCF RETURNDATASIZE 0xC3 0x29 MULMOD 0xB6 0xED 0xD0 0xFC 0xC6 0x5C 0xEA 0xF9 BLOCKHASH 0xED 0xCF 0xC5 0x4C PUSH9 0x64736F6C6343000816 STOP CALLER ",
							"sourceMap": "486:2756:6:-:0;;;606:287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;698:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;722:58:6::2;728:12;767:10;:8;;;:10;;:::i;:::-;759:19;;753:2;:25;;;;:::i;:::-;742:7;:37;;;;:::i;:::-;722:5;;;:58;;:::i;:::-;832:10;:8;;;:10;;:::i;:::-;824:19;;818:2;:25;;;;:::i;:::-;808:6;:36;;;;:::i;:::-;790:15;:54;;;;872:14;854:15;;:32;;;;;;;;;;;;;;;;;;606:287:::0;;486:2756;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:180::-;6985:77;6982:1;6975:88;7082:4;7079:1;7072:15;7106:4;7103:1;7096:15;7123:102;7165:8;7212:5;7209:1;7205:13;7184:34;;7123:102;;;:::o;7231:848::-;7292:5;7299:4;7323:6;7314:15;;7347:5;7338:14;;7361:712;7382:1;7372:8;7369:15;7361:712;;;7477:4;7472:3;7468:14;7462:4;7459:24;7456:50;;;7486:18;;:::i;:::-;7456:50;7536:1;7526:8;7522:16;7519:451;;;7951:4;7944:5;7940:16;7931:25;;7519:451;8001:4;7995;7991:15;7983:23;;8031:32;8054:8;8031:32;:::i;:::-;8019:44;;7361:712;;;7231:848;;;;;;;:::o;8085:1073::-;8139:5;8330:8;8320:40;;8351:1;8342:10;;8353:5;;8320:40;8379:4;8369:36;;8396:1;8387:10;;8398:5;;8369:36;8465:4;8513:1;8508:27;;;;8549:1;8544:191;;;;8458:277;;8508:27;8526:1;8517:10;;8528:5;;;8544:191;8589:3;8579:8;8576:17;8573:43;;;8596:18;;:::i;:::-;8573:43;8645:8;8642:1;8638:16;8629:25;;8680:3;8673:5;8670:14;8667:40;;;8687:18;;:::i;:::-;8667:40;8720:5;;;8458:277;;8844:2;8834:8;8831:16;8825:3;8819:4;8816:13;8812:36;8794:2;8784:8;8781:16;8776:2;8770:4;8767:12;8763:35;8747:111;8744:246;;;8900:8;8894:4;8890:19;8881:28;;8935:3;8928:5;8925:14;8922:40;;;8942:18;;:::i;:::-;8922:40;8975:5;;8744:246;9015:42;9053:3;9043:8;9037:4;9034:1;9015:42;:::i;:::-;9000:57;;;;9089:4;9084:3;9080:14;9073:5;9070:25;9067:51;;;9098:18;;:::i;:::-;9067:51;9147:4;9140:5;9136:16;9127:25;;8085:1073;;;;;;:::o;9164:285::-;9224:5;9248:23;9266:4;9248:23;:::i;:::-;9240:31;;9292:27;9310:8;9292:27;:::i;:::-;9280:39;;9338:104;9375:66;9365:8;9359:4;9338:104;:::i;:::-;9329:113;;9164:285;;;;:::o;9455:410::-;9495:7;9518:20;9536:1;9518:20;:::i;:::-;9513:25;;9552:20;9570:1;9552:20;:::i;:::-;9547:25;;9607:1;9604;9600:9;9629:30;9647:11;9629:30;:::i;:::-;9618:41;;9808:1;9799:7;9795:15;9792:1;9789:22;9769:1;9762:9;9742:83;9719:139;;9838:18;;:::i;:::-;9719:139;9503:362;9455:410;;;;:::o;9871:191::-;9911:3;9930:20;9948:1;9930:20;:::i;:::-;9925:25;;9964:20;9982:1;9964:20;:::i;:::-;9959:25;;10007:1;10004;10000:9;9993:16;;10028:3;10025:1;10022:10;10019:36;;;10035:18;;:::i;:::-;10019:36;9871:191;;;;:::o;10068:118::-;10155:24;10173:5;10155:24;:::i;:::-;10150:3;10143:37;10068:118;;:::o;10192:442::-;10341:4;10379:2;10368:9;10364:18;10356:26;;10392:71;10460:1;10449:9;10445:17;10436:6;10392:71;:::i;:::-;10473:72;10541:2;10530:9;10526:18;10517:6;10473:72;:::i;:::-;10555;10623:2;10612:9;10608:18;10599:6;10555:72;:::i;:::-;10192:442;;;;;;:::o;10640:222::-;10733:4;10771:2;10760:9;10756:18;10748:26;;10784:71;10852:1;10841:9;10837:17;10828:6;10784:71;:::i;:::-;10640:222;;;;:::o;486:2756:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2687,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3421,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3091,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2680,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2705,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3226,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2851,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3884,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2418,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1117,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1254,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1206,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositToReserve_1099": {
									"entryPoint": 1821,
									"id": 1099,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getMaxWhaleAmount_1151": {
									"entryPoint": 964,
									"id": 1151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOwnerBalance_1180": {
									"entryPoint": 1214,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOwner_1067": {
									"entryPoint": 1342,
									"id": 1067,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getReserveAddress_1159": {
									"entryPoint": 1540,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getReserveBalance_1169": {
									"entryPoint": 2370,
									"id": 1169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 973,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1356,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1323,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMaxWhaleAmount_1058": {
									"entryPoint": 1236,
									"id": 1058,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1396,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1151,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1160,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2548,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1046": {
									"entryPoint": 1580,
									"id": 1046,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawFromReserve_1143": {
									"entryPoint": 2017,
									"id": 1143,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6214,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016": {
									"entryPoint": 5864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942": {
									"entryPoint": 5968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14163:7",
										"nodeType": "YulBlock",
										"src": "0:14163:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "155:53:7",
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nativeSrc": "177:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nativeSrc": "165:37:7",
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nativeSrc": "165:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:7",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:7",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nativeSrc": "312:124:7",
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nativeSrc": "322:26:7",
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nativeSrc": "330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nativeSrc": "411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nativeSrc": "358:71:7",
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nativeSrc": "358:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:7",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:7",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:7",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nativeSrc": "501:40:7",
													"nodeType": "YulBlock",
													"src": "501:40:7",
													"statements": [
														{
															"nativeSrc": "512:22:7",
															"nodeType": "YulAssignment",
															"src": "512:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:7"
																},
																"nativeSrc": "522:12:7",
																"nodeType": "YulFunctionCall",
																"src": "522:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:7",
														"nodeType": "YulTypedName",
														"src": "484:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:7",
														"nodeType": "YulTypedName",
														"src": "494:6:7",
														"type": ""
													}
												],
												"src": "442:99:7"
											},
											{
												"body": {
													"nativeSrc": "643:73:7",
													"nodeType": "YulBlock",
													"src": "643:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:7"
																},
																"nativeSrc": "653:19:7",
																"nodeType": "YulFunctionCall",
																"src": "653:19:7"
															},
															"nativeSrc": "653:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:7"
														},
														{
															"nativeSrc": "681:29:7",
															"nodeType": "YulAssignment",
															"src": "681:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:7",
																		"nodeType": "YulLiteral",
																		"src": "705:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:7"
																},
																"nativeSrc": "696:14:7",
																"nodeType": "YulFunctionCall",
																"src": "696:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:7",
														"nodeType": "YulTypedName",
														"src": "615:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:7",
														"nodeType": "YulTypedName",
														"src": "620:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:7",
														"nodeType": "YulTypedName",
														"src": "631:11:7",
														"type": ""
													}
												],
												"src": "547:169:7"
											},
											{
												"body": {
													"nativeSrc": "784:184:7",
													"nodeType": "YulBlock",
													"src": "784:184:7",
													"statements": [
														{
															"nativeSrc": "794:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "794:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "803:1:7",
																"nodeType": "YulLiteral",
																"src": "803:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "798:1:7",
																	"nodeType": "YulTypedName",
																	"src": "798:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "863:63:7",
																"nodeType": "YulBlock",
																"src": "863:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "888:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "888:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "893:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "893:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "884:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "884:3:7"
																					},
																					"nativeSrc": "884:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "884:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "907:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "907:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "912:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "912:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "903:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "903:3:7"
																							},
																							"nativeSrc": "903:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "903:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "897:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "897:5:7"
																					},
																					"nativeSrc": "897:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "897:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "877:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "877:6:7"
																			},
																			"nativeSrc": "877:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "877:39:7"
																		},
																		"nativeSrc": "877:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "877:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "824:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "824:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "827:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "821:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "821:2:7"
																},
																"nativeSrc": "821:13:7",
																"nodeType": "YulFunctionCall",
																"src": "821:13:7"
															},
															"nativeSrc": "813:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "835:19:7",
																"nodeType": "YulBlock",
																"src": "835:19:7",
																"statements": [
																	{
																		"nativeSrc": "837:15:7",
																		"nodeType": "YulAssignment",
																		"src": "837:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "846:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "846:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "849:2:7",
																					"nodeType": "YulLiteral",
																					"src": "849:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "842:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "842:3:7"
																			},
																			"nativeSrc": "842:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "842:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "837:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "837:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "817:3:7",
																"nodeType": "YulBlock",
																"src": "817:3:7",
																"statements": []
															},
															"src": "813:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "946:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "946:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "951:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "942:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:7"
																		},
																		"nativeSrc": "942:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "942:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "960:1:7",
																		"nodeType": "YulLiteral",
																		"src": "960:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "935:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:7"
																},
																"nativeSrc": "935:27:7",
																"nodeType": "YulFunctionCall",
																"src": "935:27:7"
															},
															"nativeSrc": "935:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "935:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:7",
														"nodeType": "YulTypedName",
														"src": "766:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:7",
														"nodeType": "YulTypedName",
														"src": "771:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:7",
														"nodeType": "YulTypedName",
														"src": "776:6:7",
														"type": ""
													}
												],
												"src": "722:246:7"
											},
											{
												"body": {
													"nativeSrc": "1022:54:7",
													"nodeType": "YulBlock",
													"src": "1022:54:7",
													"statements": [
														{
															"nativeSrc": "1032:38:7",
															"nodeType": "YulAssignment",
															"src": "1032:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1050:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1050:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1057:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1057:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1046:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:7"
																		},
																		"nativeSrc": "1046:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1066:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1066:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1062:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:7"
																		},
																		"nativeSrc": "1062:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1062:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1042:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1042:3:7"
																},
																"nativeSrc": "1042:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1042:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1032:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "974:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1005:5:7",
														"nodeType": "YulTypedName",
														"src": "1005:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1015:6:7",
														"nodeType": "YulTypedName",
														"src": "1015:6:7",
														"type": ""
													}
												],
												"src": "974:102:7"
											},
											{
												"body": {
													"nativeSrc": "1174:285:7",
													"nodeType": "YulBlock",
													"src": "1174:285:7",
													"statements": [
														{
															"nativeSrc": "1184:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1231:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1231:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1198:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1198:32:7"
																},
																"nativeSrc": "1198:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1198:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1188:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1246:78:7",
															"nodeType": "YulAssignment",
															"src": "1246:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1312:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1312:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1317:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1317:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1253:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1253:58:7"
																},
																"nativeSrc": "1253:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1253:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1246:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1372:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1372:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1379:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1379:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1368:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1368:3:7"
																		},
																		"nativeSrc": "1368:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1368:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1386:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1386:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1391:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1391:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1333:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "1333:34:7"
																},
																"nativeSrc": "1333:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1333:65:7"
															},
															"nativeSrc": "1333:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1333:65:7"
														},
														{
															"nativeSrc": "1407:46:7",
															"nodeType": "YulAssignment",
															"src": "1407:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1418:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1418:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1445:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1445:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1423:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1423:21:7"
																		},
																		"nativeSrc": "1423:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1414:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1414:3:7"
																},
																"nativeSrc": "1414:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1414:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1407:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1082:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1155:5:7",
														"nodeType": "YulTypedName",
														"src": "1155:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1162:3:7",
														"nodeType": "YulTypedName",
														"src": "1162:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1170:3:7",
														"nodeType": "YulTypedName",
														"src": "1170:3:7",
														"type": ""
													}
												],
												"src": "1082:377:7"
											},
											{
												"body": {
													"nativeSrc": "1583:195:7",
													"nodeType": "YulBlock",
													"src": "1583:195:7",
													"statements": [
														{
															"nativeSrc": "1593:26:7",
															"nodeType": "YulAssignment",
															"src": "1593:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1605:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1616:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1601:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:7"
																},
																"nativeSrc": "1601:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1601:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1593:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:7"
																		},
																		"nativeSrc": "1636:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1659:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1659:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1665:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1665:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1655:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:7"
																		},
																		"nativeSrc": "1655:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1655:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1629:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:7"
																},
																"nativeSrc": "1629:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1629:47:7"
															},
															"nativeSrc": "1629:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1629:47:7"
														},
														{
															"nativeSrc": "1685:86:7",
															"nodeType": "YulAssignment",
															"src": "1685:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1757:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1757:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1766:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1766:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1693:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:63:7"
																},
																"nativeSrc": "1693:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1693:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1685:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1685:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1465:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1555:9:7",
														"nodeType": "YulTypedName",
														"src": "1555:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1567:6:7",
														"nodeType": "YulTypedName",
														"src": "1567:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1578:4:7",
														"nodeType": "YulTypedName",
														"src": "1578:4:7",
														"type": ""
													}
												],
												"src": "1465:313:7"
											},
											{
												"body": {
													"nativeSrc": "1824:35:7",
													"nodeType": "YulBlock",
													"src": "1824:35:7",
													"statements": [
														{
															"nativeSrc": "1834:19:7",
															"nodeType": "YulAssignment",
															"src": "1834:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1850:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1850:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1844:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1844:5:7"
																},
																"nativeSrc": "1844:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1844:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1834:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1784:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1817:6:7",
														"nodeType": "YulTypedName",
														"src": "1817:6:7",
														"type": ""
													}
												],
												"src": "1784:75:7"
											},
											{
												"body": {
													"nativeSrc": "1954:28:7",
													"nodeType": "YulBlock",
													"src": "1954:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1971:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1974:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1964:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:7"
																},
																"nativeSrc": "1964:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1964:12:7"
															},
															"nativeSrc": "1964:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1964:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1865:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1865:117:7"
											},
											{
												"body": {
													"nativeSrc": "2077:28:7",
													"nodeType": "YulBlock",
													"src": "2077:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2094:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2094:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:7"
																},
																"nativeSrc": "2087:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2087:12:7"
															},
															"nativeSrc": "2087:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2087:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1988:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1988:117:7"
											},
											{
												"body": {
													"nativeSrc": "2156:81:7",
													"nodeType": "YulBlock",
													"src": "2156:81:7",
													"statements": [
														{
															"nativeSrc": "2166:65:7",
															"nodeType": "YulAssignment",
															"src": "2166:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2181:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2181:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2188:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2188:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2177:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:7"
																},
																"nativeSrc": "2177:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2177:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2166:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2166:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2111:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2138:5:7",
														"nodeType": "YulTypedName",
														"src": "2138:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2148:7:7",
														"nodeType": "YulTypedName",
														"src": "2148:7:7",
														"type": ""
													}
												],
												"src": "2111:126:7"
											},
											{
												"body": {
													"nativeSrc": "2288:51:7",
													"nodeType": "YulBlock",
													"src": "2288:51:7",
													"statements": [
														{
															"nativeSrc": "2298:35:7",
															"nodeType": "YulAssignment",
															"src": "2298:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2327:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2327:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2309:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2309:17:7"
																},
																"nativeSrc": "2309:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2309:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2298:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2298:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2243:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2270:5:7",
														"nodeType": "YulTypedName",
														"src": "2270:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2280:7:7",
														"nodeType": "YulTypedName",
														"src": "2280:7:7",
														"type": ""
													}
												],
												"src": "2243:96:7"
											},
											{
												"body": {
													"nativeSrc": "2388:79:7",
													"nodeType": "YulBlock",
													"src": "2388:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2445:16:7",
																"nodeType": "YulBlock",
																"src": "2445:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2454:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2457:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2447:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:7"
																			},
																			"nativeSrc": "2447:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2447:12:7"
																		},
																		"nativeSrc": "2447:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2411:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2411:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2436:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2436:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2418:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2418:17:7"
																				},
																				"nativeSrc": "2418:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2418:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2408:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2408:2:7"
																		},
																		"nativeSrc": "2408:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:7"
																},
																"nativeSrc": "2401:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2401:43:7"
															},
															"nativeSrc": "2398:63:7",
															"nodeType": "YulIf",
															"src": "2398:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2345:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2381:5:7",
														"nodeType": "YulTypedName",
														"src": "2381:5:7",
														"type": ""
													}
												],
												"src": "2345:122:7"
											},
											{
												"body": {
													"nativeSrc": "2525:87:7",
													"nodeType": "YulBlock",
													"src": "2525:87:7",
													"statements": [
														{
															"nativeSrc": "2535:29:7",
															"nodeType": "YulAssignment",
															"src": "2535:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2557:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2557:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2544:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2544:12:7"
																},
																"nativeSrc": "2544:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2544:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2535:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2535:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2600:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2600:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2573:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2573:26:7"
																},
																"nativeSrc": "2573:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2573:33:7"
															},
															"nativeSrc": "2573:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2573:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2473:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2503:6:7",
														"nodeType": "YulTypedName",
														"src": "2503:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2511:3:7",
														"nodeType": "YulTypedName",
														"src": "2511:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2519:5:7",
														"nodeType": "YulTypedName",
														"src": "2519:5:7",
														"type": ""
													}
												],
												"src": "2473:139:7"
											},
											{
												"body": {
													"nativeSrc": "2661:79:7",
													"nodeType": "YulBlock",
													"src": "2661:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2718:16:7",
																"nodeType": "YulBlock",
																"src": "2718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2727:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2730:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2720:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2720:6:7"
																			},
																			"nativeSrc": "2720:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2720:12:7"
																		},
																		"nativeSrc": "2720:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2684:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2684:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2709:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2709:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2691:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2691:17:7"
																				},
																				"nativeSrc": "2691:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2691:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2681:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2681:2:7"
																		},
																		"nativeSrc": "2681:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2681:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2674:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:7"
																},
																"nativeSrc": "2674:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2674:43:7"
															},
															"nativeSrc": "2671:63:7",
															"nodeType": "YulIf",
															"src": "2671:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2618:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2654:5:7",
														"nodeType": "YulTypedName",
														"src": "2654:5:7",
														"type": ""
													}
												],
												"src": "2618:122:7"
											},
											{
												"body": {
													"nativeSrc": "2798:87:7",
													"nodeType": "YulBlock",
													"src": "2798:87:7",
													"statements": [
														{
															"nativeSrc": "2808:29:7",
															"nodeType": "YulAssignment",
															"src": "2808:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2830:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2830:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2817:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2817:12:7"
																},
																"nativeSrc": "2817:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2817:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2808:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2808:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2873:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2873:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2846:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2846:26:7"
																},
																"nativeSrc": "2846:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2846:33:7"
															},
															"nativeSrc": "2846:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2846:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2746:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2776:6:7",
														"nodeType": "YulTypedName",
														"src": "2776:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2784:3:7",
														"nodeType": "YulTypedName",
														"src": "2784:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2792:5:7",
														"nodeType": "YulTypedName",
														"src": "2792:5:7",
														"type": ""
													}
												],
												"src": "2746:139:7"
											},
											{
												"body": {
													"nativeSrc": "2974:391:7",
													"nodeType": "YulBlock",
													"src": "2974:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3020:83:7",
																"nodeType": "YulBlock",
																"src": "3020:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3022:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3022:77:7"
																			},
																			"nativeSrc": "3022:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3022:79:7"
																		},
																		"nativeSrc": "3022:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3022:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2995:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2995:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3004:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3004:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2991:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2991:3:7"
																		},
																		"nativeSrc": "2991:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2991:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3016:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3016:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2987:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2987:3:7"
																},
																"nativeSrc": "2987:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2987:32:7"
															},
															"nativeSrc": "2984:119:7",
															"nodeType": "YulIf",
															"src": "2984:119:7"
														},
														{
															"nativeSrc": "3113:117:7",
															"nodeType": "YulBlock",
															"src": "3113:117:7",
															"statements": [
																{
																	"nativeSrc": "3128:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3128:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3142:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3142:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3132:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3132:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3157:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3157:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3192:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3192:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3203:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3203:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3188:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3188:3:7"
																				},
																				"nativeSrc": "3188:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3188:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3212:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3212:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3167:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3167:20:7"
																		},
																		"nativeSrc": "3167:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3167:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3157:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3157:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3240:118:7",
															"nodeType": "YulBlock",
															"src": "3240:118:7",
															"statements": [
																{
																	"nativeSrc": "3255:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3255:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3269:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3259:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3259:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3285:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3285:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3320:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3320:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3331:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3331:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3316:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3316:3:7"
																				},
																				"nativeSrc": "3316:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3316:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3340:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3340:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3295:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3295:20:7"
																		},
																		"nativeSrc": "3295:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3295:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3285:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3285:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2891:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2936:9:7",
														"nodeType": "YulTypedName",
														"src": "2936:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2947:7:7",
														"nodeType": "YulTypedName",
														"src": "2947:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2959:6:7",
														"nodeType": "YulTypedName",
														"src": "2959:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2967:6:7",
														"nodeType": "YulTypedName",
														"src": "2967:6:7",
														"type": ""
													}
												],
												"src": "2891:474:7"
											},
											{
												"body": {
													"nativeSrc": "3413:48:7",
													"nodeType": "YulBlock",
													"src": "3413:48:7",
													"statements": [
														{
															"nativeSrc": "3423:32:7",
															"nodeType": "YulAssignment",
															"src": "3423:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3448:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3448:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3441:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3441:6:7"
																		},
																		"nativeSrc": "3441:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3434:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3434:6:7"
																},
																"nativeSrc": "3434:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3434:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3423:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3423:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3371:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3395:5:7",
														"nodeType": "YulTypedName",
														"src": "3395:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3405:7:7",
														"nodeType": "YulTypedName",
														"src": "3405:7:7",
														"type": ""
													}
												],
												"src": "3371:90:7"
											},
											{
												"body": {
													"nativeSrc": "3526:50:7",
													"nodeType": "YulBlock",
													"src": "3526:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3543:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3543:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3563:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3563:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3548:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3548:14:7"
																		},
																		"nativeSrc": "3548:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3548:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3536:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3536:6:7"
																},
																"nativeSrc": "3536:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3536:34:7"
															},
															"nativeSrc": "3536:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3536:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3467:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3514:5:7",
														"nodeType": "YulTypedName",
														"src": "3514:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3521:3:7",
														"nodeType": "YulTypedName",
														"src": "3521:3:7",
														"type": ""
													}
												],
												"src": "3467:109:7"
											},
											{
												"body": {
													"nativeSrc": "3674:118:7",
													"nodeType": "YulBlock",
													"src": "3674:118:7",
													"statements": [
														{
															"nativeSrc": "3684:26:7",
															"nodeType": "YulAssignment",
															"src": "3684:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3696:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3696:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3707:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3692:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:7"
																},
																"nativeSrc": "3692:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3692:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3684:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3684:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:7"
																		},
																		"nativeSrc": "3767:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3720:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3720:37:7"
																},
																"nativeSrc": "3720:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3720:65:7"
															},
															"nativeSrc": "3720:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3720:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3582:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3646:9:7",
														"nodeType": "YulTypedName",
														"src": "3646:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3658:6:7",
														"nodeType": "YulTypedName",
														"src": "3658:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3669:4:7",
														"nodeType": "YulTypedName",
														"src": "3669:4:7",
														"type": ""
													}
												],
												"src": "3582:210:7"
											},
											{
												"body": {
													"nativeSrc": "3898:519:7",
													"nodeType": "YulBlock",
													"src": "3898:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:7",
																"nodeType": "YulBlock",
																"src": "3944:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:7"
																			},
																			"nativeSrc": "3946:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:7"
																		},
																		"nativeSrc": "3946:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:7"
																		},
																		"nativeSrc": "3915:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:7"
																},
																"nativeSrc": "3911:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:7"
															},
															"nativeSrc": "3908:119:7",
															"nodeType": "YulIf",
															"src": "3908:119:7"
														},
														{
															"nativeSrc": "4037:117:7",
															"nodeType": "YulBlock",
															"src": "4037:117:7",
															"statements": [
																{
																	"nativeSrc": "4052:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:7"
																				},
																				"nativeSrc": "4112:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:7"
																		},
																		"nativeSrc": "4091:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:7",
															"nodeType": "YulBlock",
															"src": "4164:118:7",
															"statements": [
																{
																	"nativeSrc": "4179:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:7"
																				},
																				"nativeSrc": "4240:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:7"
																		},
																		"nativeSrc": "4219:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:7",
															"nodeType": "YulBlock",
															"src": "4292:118:7",
															"statements": [
																{
																	"nativeSrc": "4307:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:7"
																				},
																				"nativeSrc": "4368:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:7"
																		},
																		"nativeSrc": "4347:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:7",
														"nodeType": "YulTypedName",
														"src": "3852:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:7",
														"nodeType": "YulTypedName",
														"src": "3863:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:7",
														"nodeType": "YulTypedName",
														"src": "3875:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:7",
														"nodeType": "YulTypedName",
														"src": "3883:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:7",
														"nodeType": "YulTypedName",
														"src": "3891:6:7",
														"type": ""
													}
												],
												"src": "3798:619:7"
											},
											{
												"body": {
													"nativeSrc": "4466:43:7",
													"nodeType": "YulBlock",
													"src": "4466:43:7",
													"statements": [
														{
															"nativeSrc": "4476:27:7",
															"nodeType": "YulAssignment",
															"src": "4476:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:7"
																},
																"nativeSrc": "4487:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:7",
														"nodeType": "YulTypedName",
														"src": "4448:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:7",
														"nodeType": "YulTypedName",
														"src": "4458:7:7",
														"type": ""
													}
												],
												"src": "4423:86:7"
											},
											{
												"body": {
													"nativeSrc": "4576:51:7",
													"nodeType": "YulBlock",
													"src": "4576:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:7"
																		},
																		"nativeSrc": "4598:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:7"
																},
																"nativeSrc": "4586:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:7"
															},
															"nativeSrc": "4586:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:7",
														"nodeType": "YulTypedName",
														"src": "4564:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:7",
														"nodeType": "YulTypedName",
														"src": "4571:3:7",
														"type": ""
													}
												],
												"src": "4515:112:7"
											},
											{
												"body": {
													"nativeSrc": "4727:120:7",
													"nodeType": "YulBlock",
													"src": "4727:120:7",
													"statements": [
														{
															"nativeSrc": "4737:26:7",
															"nodeType": "YulAssignment",
															"src": "4737:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:7"
																},
																"nativeSrc": "4745:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:7"
																		},
																		"nativeSrc": "4822:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:7"
																},
																"nativeSrc": "4773:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:7"
															},
															"nativeSrc": "4773:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:7",
														"nodeType": "YulTypedName",
														"src": "4699:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:7",
														"nodeType": "YulTypedName",
														"src": "4711:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:7",
														"nodeType": "YulTypedName",
														"src": "4722:4:7",
														"type": ""
													}
												],
												"src": "4633:214:7"
											},
											{
												"body": {
													"nativeSrc": "4919:263:7",
													"nodeType": "YulBlock",
													"src": "4919:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:7",
																"nodeType": "YulBlock",
																"src": "4965:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:7"
																			},
																			"nativeSrc": "4967:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:7"
																		},
																		"nativeSrc": "4967:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:7"
																		},
																		"nativeSrc": "4936:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:7"
																},
																"nativeSrc": "4932:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:7"
															},
															"nativeSrc": "4929:119:7",
															"nodeType": "YulIf",
															"src": "4929:119:7"
														},
														{
															"nativeSrc": "5058:117:7",
															"nodeType": "YulBlock",
															"src": "5058:117:7",
															"statements": [
																{
																	"nativeSrc": "5073:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:7"
																				},
																				"nativeSrc": "5133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:7"
																		},
																		"nativeSrc": "5112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4853:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:7",
														"nodeType": "YulTypedName",
														"src": "4889:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:7",
														"nodeType": "YulTypedName",
														"src": "4900:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:7",
														"nodeType": "YulTypedName",
														"src": "4912:6:7",
														"type": ""
													}
												],
												"src": "4853:329:7"
											},
											{
												"body": {
													"nativeSrc": "5254:263:7",
													"nodeType": "YulBlock",
													"src": "5254:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5300:83:7",
																"nodeType": "YulBlock",
																"src": "5300:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5302:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:7"
																			},
																			"nativeSrc": "5302:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:7"
																		},
																		"nativeSrc": "5302:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5275:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5284:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5271:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:7"
																		},
																		"nativeSrc": "5271:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5267:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:7"
																},
																"nativeSrc": "5267:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5267:32:7"
															},
															"nativeSrc": "5264:119:7",
															"nodeType": "YulIf",
															"src": "5264:119:7"
														},
														{
															"nativeSrc": "5393:117:7",
															"nodeType": "YulBlock",
															"src": "5393:117:7",
															"statements": [
																{
																	"nativeSrc": "5408:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5422:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5412:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5437:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5437:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5472:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5483:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5468:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:7"
																				},
																				"nativeSrc": "5468:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5492:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5447:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:7"
																		},
																		"nativeSrc": "5447:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5437:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5188:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5224:9:7",
														"nodeType": "YulTypedName",
														"src": "5224:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5235:7:7",
														"nodeType": "YulTypedName",
														"src": "5235:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5247:6:7",
														"nodeType": "YulTypedName",
														"src": "5247:6:7",
														"type": ""
													}
												],
												"src": "5188:329:7"
											},
											{
												"body": {
													"nativeSrc": "5588:53:7",
													"nodeType": "YulBlock",
													"src": "5588:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5605:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5628:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5610:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:7"
																		},
																		"nativeSrc": "5610:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5598:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:7"
																},
																"nativeSrc": "5598:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5598:37:7"
															},
															"nativeSrc": "5598:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5523:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5576:5:7",
														"nodeType": "YulTypedName",
														"src": "5576:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5583:3:7",
														"nodeType": "YulTypedName",
														"src": "5583:3:7",
														"type": ""
													}
												],
												"src": "5523:118:7"
											},
											{
												"body": {
													"nativeSrc": "5745:124:7",
													"nodeType": "YulBlock",
													"src": "5745:124:7",
													"statements": [
														{
															"nativeSrc": "5755:26:7",
															"nodeType": "YulAssignment",
															"src": "5755:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5767:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5778:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5763:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:7"
																},
																"nativeSrc": "5763:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5763:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5755:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5835:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5848:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5859:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5844:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:7"
																		},
																		"nativeSrc": "5844:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5791:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:7"
																},
																"nativeSrc": "5791:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5791:71:7"
															},
															"nativeSrc": "5791:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5647:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5717:9:7",
														"nodeType": "YulTypedName",
														"src": "5717:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5729:6:7",
														"nodeType": "YulTypedName",
														"src": "5729:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5740:4:7",
														"nodeType": "YulTypedName",
														"src": "5740:4:7",
														"type": ""
													}
												],
												"src": "5647:222:7"
											},
											{
												"body": {
													"nativeSrc": "5958:391:7",
													"nodeType": "YulBlock",
													"src": "5958:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6004:83:7",
																"nodeType": "YulBlock",
																"src": "6004:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6006:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:7"
																			},
																			"nativeSrc": "6006:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:7"
																		},
																		"nativeSrc": "6006:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5979:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5988:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5975:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:7"
																		},
																		"nativeSrc": "5975:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6000:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5971:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:7"
																},
																"nativeSrc": "5971:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5971:32:7"
															},
															"nativeSrc": "5968:119:7",
															"nodeType": "YulIf",
															"src": "5968:119:7"
														},
														{
															"nativeSrc": "6097:117:7",
															"nodeType": "YulBlock",
															"src": "6097:117:7",
															"statements": [
																{
																	"nativeSrc": "6112:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6126:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6116:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6141:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6141:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6176:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6187:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6172:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:7"
																				},
																				"nativeSrc": "6172:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6196:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6151:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:7"
																		},
																		"nativeSrc": "6151:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6141:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6224:118:7",
															"nodeType": "YulBlock",
															"src": "6224:118:7",
															"statements": [
																{
																	"nativeSrc": "6239:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6253:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6243:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6269:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6269:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6304:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6315:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6300:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:7"
																				},
																				"nativeSrc": "6300:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6324:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6279:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:7"
																		},
																		"nativeSrc": "6279:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6269:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "5875:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5920:9:7",
														"nodeType": "YulTypedName",
														"src": "5920:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5931:7:7",
														"nodeType": "YulTypedName",
														"src": "5931:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5943:6:7",
														"nodeType": "YulTypedName",
														"src": "5943:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5951:6:7",
														"nodeType": "YulTypedName",
														"src": "5951:6:7",
														"type": ""
													}
												],
												"src": "5875:474:7"
											},
											{
												"body": {
													"nativeSrc": "6438:391:7",
													"nodeType": "YulBlock",
													"src": "6438:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6484:83:7",
																"nodeType": "YulBlock",
																"src": "6484:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6486:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6486:77:7"
																			},
																			"nativeSrc": "6486:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6486:79:7"
																		},
																		"nativeSrc": "6486:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6486:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6459:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6459:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6468:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6468:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6455:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6455:3:7"
																		},
																		"nativeSrc": "6455:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6455:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6480:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6451:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6451:3:7"
																},
																"nativeSrc": "6451:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6451:32:7"
															},
															"nativeSrc": "6448:119:7",
															"nodeType": "YulIf",
															"src": "6448:119:7"
														},
														{
															"nativeSrc": "6577:117:7",
															"nodeType": "YulBlock",
															"src": "6577:117:7",
															"statements": [
																{
																	"nativeSrc": "6592:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6592:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6606:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6606:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6596:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6596:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6621:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6621:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6656:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6656:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6667:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6667:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6652:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6652:3:7"
																				},
																				"nativeSrc": "6652:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6652:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6676:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6676:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6631:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6631:20:7"
																		},
																		"nativeSrc": "6631:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6631:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6621:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6621:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6704:118:7",
															"nodeType": "YulBlock",
															"src": "6704:118:7",
															"statements": [
																{
																	"nativeSrc": "6719:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6719:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6733:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6733:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6723:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6723:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6749:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6749:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6784:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6784:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6795:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6795:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6780:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6780:3:7"
																				},
																				"nativeSrc": "6780:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6780:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6804:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6804:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6759:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6759:20:7"
																		},
																		"nativeSrc": "6759:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6759:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6749:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6749:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6355:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6400:9:7",
														"nodeType": "YulTypedName",
														"src": "6400:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6411:7:7",
														"nodeType": "YulTypedName",
														"src": "6411:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6423:6:7",
														"nodeType": "YulTypedName",
														"src": "6423:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6431:6:7",
														"nodeType": "YulTypedName",
														"src": "6431:6:7",
														"type": ""
													}
												],
												"src": "6355:474:7"
											},
											{
												"body": {
													"nativeSrc": "6863:152:7",
													"nodeType": "YulBlock",
													"src": "6863:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6880:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6880:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6883:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6883:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6873:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6873:6:7"
																},
																"nativeSrc": "6873:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6873:88:7"
															},
															"nativeSrc": "6873:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6873:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6977:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6977:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6980:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6980:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6970:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6970:6:7"
																},
																"nativeSrc": "6970:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6970:15:7"
															},
															"nativeSrc": "6970:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6970:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7001:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7001:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7004:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7004:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6994:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6994:6:7"
																},
																"nativeSrc": "6994:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6994:15:7"
															},
															"nativeSrc": "6994:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6994:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6835:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6835:180:7"
											},
											{
												"body": {
													"nativeSrc": "7072:269:7",
													"nodeType": "YulBlock",
													"src": "7072:269:7",
													"statements": [
														{
															"nativeSrc": "7082:22:7",
															"nodeType": "YulAssignment",
															"src": "7082:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7096:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7096:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7102:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7102:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7092:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7092:3:7"
																},
																"nativeSrc": "7092:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7092:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7082:6:7"
																}
															]
														},
														{
															"nativeSrc": "7113:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7113:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7143:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7143:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7149:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7149:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7139:3:7"
																},
																"nativeSrc": "7139:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7139:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7117:18:7",
																	"nodeType": "YulTypedName",
																	"src": "7117:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7190:51:7",
																"nodeType": "YulBlock",
																"src": "7190:51:7",
																"statements": [
																	{
																		"nativeSrc": "7204:27:7",
																		"nodeType": "YulAssignment",
																		"src": "7204:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7218:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7218:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7226:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7226:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7214:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7214:3:7"
																			},
																			"nativeSrc": "7214:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7214:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7204:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7204:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7170:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7170:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7163:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7163:6:7"
																},
																"nativeSrc": "7163:26:7",
																"nodeType": "YulFunctionCall",
																"src": "7163:26:7"
															},
															"nativeSrc": "7160:81:7",
															"nodeType": "YulIf",
															"src": "7160:81:7"
														},
														{
															"body": {
																"nativeSrc": "7293:42:7",
																"nodeType": "YulBlock",
																"src": "7293:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7307:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7307:16:7"
																			},
																			"nativeSrc": "7307:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7307:18:7"
																		},
																		"nativeSrc": "7307:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7307:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7257:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7257:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7280:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7280:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7288:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7288:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7277:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7277:2:7"
																		},
																		"nativeSrc": "7277:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7277:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7254:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7254:2:7"
																},
																"nativeSrc": "7254:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7254:38:7"
															},
															"nativeSrc": "7251:84:7",
															"nodeType": "YulIf",
															"src": "7251:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7021:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7056:4:7",
														"nodeType": "YulTypedName",
														"src": "7056:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7065:6:7",
														"nodeType": "YulTypedName",
														"src": "7065:6:7",
														"type": ""
													}
												],
												"src": "7021:320:7"
											},
											{
												"body": {
													"nativeSrc": "7453:116:7",
													"nodeType": "YulBlock",
													"src": "7453:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7483:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7483:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7471:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7471:3:7"
																		},
																		"nativeSrc": "7471:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7471:14:7"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e742065786365656473207768616c65206c69",
																		"kind": "string",
																		"nativeSrc": "7487:34:7",
																		"nodeType": "YulLiteral",
																		"src": "7487:34:7",
																		"type": "",
																		"value": "Transfer amount exceeds whale li"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7464:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7464:6:7"
																},
																"nativeSrc": "7464:58:7",
																"nodeType": "YulFunctionCall",
																"src": "7464:58:7"
															},
															"nativeSrc": "7464:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "7464:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7543:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7543:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7551:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7551:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7539:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7539:3:7"
																		},
																		"nativeSrc": "7539:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7539:15:7"
																	},
																	{
																		"hexValue": "6d6974",
																		"kind": "string",
																		"nativeSrc": "7556:5:7",
																		"nodeType": "YulLiteral",
																		"src": "7556:5:7",
																		"type": "",
																		"value": "mit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7532:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7532:6:7"
																},
																"nativeSrc": "7532:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7532:30:7"
															},
															"nativeSrc": "7532:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7532:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a",
												"nativeSrc": "7347:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7445:6:7",
														"nodeType": "YulTypedName",
														"src": "7445:6:7",
														"type": ""
													}
												],
												"src": "7347:222:7"
											},
											{
												"body": {
													"nativeSrc": "7721:220:7",
													"nodeType": "YulBlock",
													"src": "7721:220:7",
													"statements": [
														{
															"nativeSrc": "7731:74:7",
															"nodeType": "YulAssignment",
															"src": "7731:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7797:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7797:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7802:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7802:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7738:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7738:58:7"
																},
																"nativeSrc": "7738:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7738:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7731:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7731:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7903:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7903:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a",
																	"nativeSrc": "7814:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7814:88:7"
																},
																"nativeSrc": "7814:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7814:93:7"
															},
															"nativeSrc": "7814:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7814:93:7"
														},
														{
															"nativeSrc": "7916:19:7",
															"nodeType": "YulAssignment",
															"src": "7916:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7927:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7927:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7932:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7923:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7923:3:7"
																},
																"nativeSrc": "7923:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7923:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7916:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7916:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7575:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7709:3:7",
														"nodeType": "YulTypedName",
														"src": "7709:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7717:3:7",
														"nodeType": "YulTypedName",
														"src": "7717:3:7",
														"type": ""
													}
												],
												"src": "7575:366:7"
											},
											{
												"body": {
													"nativeSrc": "8118:248:7",
													"nodeType": "YulBlock",
													"src": "8118:248:7",
													"statements": [
														{
															"nativeSrc": "8128:26:7",
															"nodeType": "YulAssignment",
															"src": "8128:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8140:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8140:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8151:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8151:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8136:3:7"
																},
																"nativeSrc": "8136:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8136:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8128:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8128:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8175:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8175:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8186:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8186:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8171:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8171:3:7"
																		},
																		"nativeSrc": "8171:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8171:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8194:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8194:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8200:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8200:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8190:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:7"
																		},
																		"nativeSrc": "8190:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8190:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8164:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8164:6:7"
																},
																"nativeSrc": "8164:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8164:47:7"
															},
															"nativeSrc": "8164:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8164:47:7"
														},
														{
															"nativeSrc": "8220:139:7",
															"nodeType": "YulAssignment",
															"src": "8220:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8354:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8354:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8228:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8228:124:7"
																},
																"nativeSrc": "8228:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8228:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8220:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8220:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7947:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8098:9:7",
														"nodeType": "YulTypedName",
														"src": "8098:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8113:4:7",
														"nodeType": "YulTypedName",
														"src": "8113:4:7",
														"type": ""
													}
												],
												"src": "7947:419:7"
											},
											{
												"body": {
													"nativeSrc": "8400:152:7",
													"nodeType": "YulBlock",
													"src": "8400:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8417:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8420:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8420:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8410:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8410:6:7"
																},
																"nativeSrc": "8410:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8410:88:7"
															},
															"nativeSrc": "8410:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8410:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8514:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8514:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8517:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8517:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8507:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8507:6:7"
																},
																"nativeSrc": "8507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8507:15:7"
															},
															"nativeSrc": "8507:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8507:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8538:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8538:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8541:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8541:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8531:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8531:6:7"
																},
																"nativeSrc": "8531:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8531:15:7"
															},
															"nativeSrc": "8531:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8531:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8372:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8372:180:7"
											},
											{
												"body": {
													"nativeSrc": "8606:362:7",
													"nodeType": "YulBlock",
													"src": "8606:362:7",
													"statements": [
														{
															"nativeSrc": "8616:25:7",
															"nodeType": "YulAssignment",
															"src": "8616:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8639:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8639:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8621:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8621:17:7"
																},
																"nativeSrc": "8621:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8621:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8616:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8616:1:7"
																}
															]
														},
														{
															"nativeSrc": "8650:25:7",
															"nodeType": "YulAssignment",
															"src": "8650:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8673:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8655:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8655:17:7"
																},
																"nativeSrc": "8655:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8655:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8650:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8650:1:7"
																}
															]
														},
														{
															"nativeSrc": "8684:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8684:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8707:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8707:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8710:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8710:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8703:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8703:3:7"
																},
																"nativeSrc": "8703:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8703:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8688:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8688:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8721:41:7",
															"nodeType": "YulAssignment",
															"src": "8721:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8750:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8750:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8732:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8732:17:7"
																},
																"nativeSrc": "8732:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8732:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8721:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8721:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8939:22:7",
																"nodeType": "YulBlock",
																"src": "8939:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8941:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8941:16:7"
																			},
																			"nativeSrc": "8941:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8941:18:7"
																		},
																		"nativeSrc": "8941:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8941:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8872:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8872:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8865:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8865:6:7"
																				},
																				"nativeSrc": "8865:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8865:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8895:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8895:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8902:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8902:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8911:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8911:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8898:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8898:3:7"
																						},
																						"nativeSrc": "8898:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8898:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8892:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8892:2:7"
																				},
																				"nativeSrc": "8892:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8892:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8845:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8845:2:7"
																		},
																		"nativeSrc": "8845:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8845:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8825:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8825:6:7"
																},
																"nativeSrc": "8825:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8825:113:7"
															},
															"nativeSrc": "8822:139:7",
															"nodeType": "YulIf",
															"src": "8822:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8558:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8589:1:7",
														"nodeType": "YulTypedName",
														"src": "8589:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8592:1:7",
														"nodeType": "YulTypedName",
														"src": "8592:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8598:7:7",
														"nodeType": "YulTypedName",
														"src": "8598:7:7",
														"type": ""
													}
												],
												"src": "8558:410:7"
											},
											{
												"body": {
													"nativeSrc": "9002:152:7",
													"nodeType": "YulBlock",
													"src": "9002:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9019:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9019:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9022:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9022:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9012:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9012:6:7"
																},
																"nativeSrc": "9012:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9012:88:7"
															},
															"nativeSrc": "9012:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9012:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9116:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9116:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9119:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9119:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9109:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9109:6:7"
																},
																"nativeSrc": "9109:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9109:15:7"
															},
															"nativeSrc": "9109:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9109:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9140:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9140:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9143:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9143:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9133:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9133:6:7"
																},
																"nativeSrc": "9133:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9133:15:7"
															},
															"nativeSrc": "9133:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9133:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8974:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8974:180:7"
											},
											{
												"body": {
													"nativeSrc": "9202:143:7",
													"nodeType": "YulBlock",
													"src": "9202:143:7",
													"statements": [
														{
															"nativeSrc": "9212:25:7",
															"nodeType": "YulAssignment",
															"src": "9212:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9235:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9235:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9217:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9217:17:7"
																},
																"nativeSrc": "9217:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9217:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9212:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9212:1:7"
																}
															]
														},
														{
															"nativeSrc": "9246:25:7",
															"nodeType": "YulAssignment",
															"src": "9246:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9269:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9269:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9251:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9251:17:7"
																},
																"nativeSrc": "9251:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9251:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9246:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9246:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9293:22:7",
																"nodeType": "YulBlock",
																"src": "9293:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9295:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9295:16:7"
																			},
																			"nativeSrc": "9295:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9295:18:7"
																		},
																		"nativeSrc": "9295:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9295:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9290:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9290:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9283:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9283:6:7"
																},
																"nativeSrc": "9283:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9283:9:7"
															},
															"nativeSrc": "9280:35:7",
															"nodeType": "YulIf",
															"src": "9280:35:7"
														},
														{
															"nativeSrc": "9325:14:7",
															"nodeType": "YulAssignment",
															"src": "9325:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9334:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9334:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9337:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9337:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9330:3:7"
																},
																"nativeSrc": "9330:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9330:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9325:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9325:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9160:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9191:1:7",
														"nodeType": "YulTypedName",
														"src": "9191:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9194:1:7",
														"nodeType": "YulTypedName",
														"src": "9194:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9200:1:7",
														"nodeType": "YulTypedName",
														"src": "9200:1:7",
														"type": ""
													}
												],
												"src": "9160:185:7"
											},
											{
												"body": {
													"nativeSrc": "9396:149:7",
													"nodeType": "YulBlock",
													"src": "9396:149:7",
													"statements": [
														{
															"nativeSrc": "9406:25:7",
															"nodeType": "YulAssignment",
															"src": "9406:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9429:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9429:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9411:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9411:17:7"
																},
																"nativeSrc": "9411:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9411:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9406:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9406:1:7"
																}
															]
														},
														{
															"nativeSrc": "9440:25:7",
															"nodeType": "YulAssignment",
															"src": "9440:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9463:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9463:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9445:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9445:17:7"
																},
																"nativeSrc": "9445:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9445:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9440:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9440:1:7"
																}
															]
														},
														{
															"nativeSrc": "9474:17:7",
															"nodeType": "YulAssignment",
															"src": "9474:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9486:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9486:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9489:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9489:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9482:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9482:3:7"
																},
																"nativeSrc": "9482:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9482:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9474:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9474:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9516:22:7",
																"nodeType": "YulBlock",
																"src": "9516:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9518:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9518:16:7"
																			},
																			"nativeSrc": "9518:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9518:18:7"
																		},
																		"nativeSrc": "9518:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9518:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9507:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9507:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9513:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9513:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9504:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9504:2:7"
																},
																"nativeSrc": "9504:11:7",
																"nodeType": "YulFunctionCall",
																"src": "9504:11:7"
															},
															"nativeSrc": "9501:37:7",
															"nodeType": "YulIf",
															"src": "9501:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9351:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9382:1:7",
														"nodeType": "YulTypedName",
														"src": "9382:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9385:1:7",
														"nodeType": "YulTypedName",
														"src": "9385:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9391:4:7",
														"nodeType": "YulTypedName",
														"src": "9391:4:7",
														"type": ""
													}
												],
												"src": "9351:194:7"
											},
											{
												"body": {
													"nativeSrc": "9657:73:7",
													"nodeType": "YulBlock",
													"src": "9657:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9679:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9679:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9687:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9687:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9675:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9675:3:7"
																		},
																		"nativeSrc": "9675:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9675:14:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "9691:31:7",
																		"nodeType": "YulLiteral",
																		"src": "9691:31:7",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9668:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9668:6:7"
																},
																"nativeSrc": "9668:55:7",
																"nodeType": "YulFunctionCall",
																"src": "9668:55:7"
															},
															"nativeSrc": "9668:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "9668:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "9551:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9649:6:7",
														"nodeType": "YulTypedName",
														"src": "9649:6:7",
														"type": ""
													}
												],
												"src": "9551:179:7"
											},
											{
												"body": {
													"nativeSrc": "9882:220:7",
													"nodeType": "YulBlock",
													"src": "9882:220:7",
													"statements": [
														{
															"nativeSrc": "9892:74:7",
															"nodeType": "YulAssignment",
															"src": "9892:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9958:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9958:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9963:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9963:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9899:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9899:58:7"
																},
																"nativeSrc": "9899:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9899:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9892:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9892:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10064:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10064:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "9975:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9975:88:7"
																},
																"nativeSrc": "9975:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9975:93:7"
															},
															"nativeSrc": "9975:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9975:93:7"
														},
														{
															"nativeSrc": "10077:19:7",
															"nodeType": "YulAssignment",
															"src": "10077:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10088:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10088:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10093:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10093:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10084:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10084:3:7"
																},
																"nativeSrc": "10084:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10084:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10077:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10077:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9736:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9870:3:7",
														"nodeType": "YulTypedName",
														"src": "9870:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9878:3:7",
														"nodeType": "YulTypedName",
														"src": "9878:3:7",
														"type": ""
													}
												],
												"src": "9736:366:7"
											},
											{
												"body": {
													"nativeSrc": "10279:248:7",
													"nodeType": "YulBlock",
													"src": "10279:248:7",
													"statements": [
														{
															"nativeSrc": "10289:26:7",
															"nodeType": "YulAssignment",
															"src": "10289:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10301:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10301:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10312:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10312:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10297:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10297:3:7"
																},
																"nativeSrc": "10297:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10297:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10289:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10289:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10336:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10336:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10347:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10347:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10332:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10332:3:7"
																		},
																		"nativeSrc": "10332:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10332:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10355:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10355:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10361:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10361:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10351:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10351:3:7"
																		},
																		"nativeSrc": "10351:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10351:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10325:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10325:6:7"
																},
																"nativeSrc": "10325:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10325:47:7"
															},
															"nativeSrc": "10325:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10325:47:7"
														},
														{
															"nativeSrc": "10381:139:7",
															"nodeType": "YulAssignment",
															"src": "10381:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10515:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10515:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10389:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10389:124:7"
																},
																"nativeSrc": "10389:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10389:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10381:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10381:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10108:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10259:9:7",
														"nodeType": "YulTypedName",
														"src": "10259:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10274:4:7",
														"nodeType": "YulTypedName",
														"src": "10274:4:7",
														"type": ""
													}
												],
												"src": "10108:419:7"
											},
											{
												"body": {
													"nativeSrc": "10639:73:7",
													"nodeType": "YulBlock",
													"src": "10639:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10661:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10661:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10669:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10669:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10657:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10657:3:7"
																		},
																		"nativeSrc": "10657:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10657:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e636520746f206465706f736974",
																		"kind": "string",
																		"nativeSrc": "10673:31:7",
																		"nodeType": "YulLiteral",
																		"src": "10673:31:7",
																		"type": "",
																		"value": "Not enough balance to deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10650:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10650:6:7"
																},
																"nativeSrc": "10650:55:7",
																"nodeType": "YulFunctionCall",
																"src": "10650:55:7"
															},
															"nativeSrc": "10650:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "10650:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016",
												"nativeSrc": "10533:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10631:6:7",
														"nodeType": "YulTypedName",
														"src": "10631:6:7",
														"type": ""
													}
												],
												"src": "10533:179:7"
											},
											{
												"body": {
													"nativeSrc": "10864:220:7",
													"nodeType": "YulBlock",
													"src": "10864:220:7",
													"statements": [
														{
															"nativeSrc": "10874:74:7",
															"nodeType": "YulAssignment",
															"src": "10874:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10940:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10940:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10945:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10945:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10881:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10881:58:7"
																},
																"nativeSrc": "10881:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10881:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10874:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10874:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11046:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11046:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016",
																	"nativeSrc": "10957:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10957:88:7"
																},
																"nativeSrc": "10957:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10957:93:7"
															},
															"nativeSrc": "10957:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10957:93:7"
														},
														{
															"nativeSrc": "11059:19:7",
															"nodeType": "YulAssignment",
															"src": "11059:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11070:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11070:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11075:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11075:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11066:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11066:3:7"
																},
																"nativeSrc": "11066:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11066:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11059:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10718:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10852:3:7",
														"nodeType": "YulTypedName",
														"src": "10852:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10860:3:7",
														"nodeType": "YulTypedName",
														"src": "10860:3:7",
														"type": ""
													}
												],
												"src": "10718:366:7"
											},
											{
												"body": {
													"nativeSrc": "11261:248:7",
													"nodeType": "YulBlock",
													"src": "11261:248:7",
													"statements": [
														{
															"nativeSrc": "11271:26:7",
															"nodeType": "YulAssignment",
															"src": "11271:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11283:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11283:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11294:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11294:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11279:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11279:3:7"
																},
																"nativeSrc": "11279:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11279:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11271:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11271:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11318:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11318:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11329:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11329:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11314:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11314:3:7"
																		},
																		"nativeSrc": "11314:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11314:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11337:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11337:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11343:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11343:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11333:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11333:3:7"
																		},
																		"nativeSrc": "11333:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11333:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11307:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11307:6:7"
																},
																"nativeSrc": "11307:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11307:47:7"
															},
															"nativeSrc": "11307:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11307:47:7"
														},
														{
															"nativeSrc": "11363:139:7",
															"nodeType": "YulAssignment",
															"src": "11363:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11497:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11497:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11371:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11371:124:7"
																},
																"nativeSrc": "11371:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11371:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11363:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11363:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11090:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11241:9:7",
														"nodeType": "YulTypedName",
														"src": "11241:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11256:4:7",
														"nodeType": "YulTypedName",
														"src": "11256:4:7",
														"type": ""
													}
												],
												"src": "11090:419:7"
											},
											{
												"body": {
													"nativeSrc": "11621:114:7",
													"nodeType": "YulBlock",
													"src": "11621:114:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11643:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11643:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11651:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11651:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11639:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11639:3:7"
																		},
																		"nativeSrc": "11639:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11639:14:7"
																	},
																	{
																		"hexValue": "576974686472617720746f206f776e6572206973206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "11655:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11655:34:7",
																		"type": "",
																		"value": "Withdraw to owner is not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11632:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11632:6:7"
																},
																"nativeSrc": "11632:58:7",
																"nodeType": "YulFunctionCall",
																"src": "11632:58:7"
															},
															"nativeSrc": "11632:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "11632:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11711:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11711:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11719:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11719:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11707:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11707:3:7"
																		},
																		"nativeSrc": "11707:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11707:15:7"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "11724:3:7",
																		"nodeType": "YulLiteral",
																		"src": "11724:3:7",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11700:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11700:6:7"
																},
																"nativeSrc": "11700:28:7",
																"nodeType": "YulFunctionCall",
																"src": "11700:28:7"
															},
															"nativeSrc": "11700:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "11700:28:7"
														}
													]
												},
												"name": "store_literal_in_memory_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942",
												"nativeSrc": "11515:220:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11613:6:7",
														"nodeType": "YulTypedName",
														"src": "11613:6:7",
														"type": ""
													}
												],
												"src": "11515:220:7"
											},
											{
												"body": {
													"nativeSrc": "11887:220:7",
													"nodeType": "YulBlock",
													"src": "11887:220:7",
													"statements": [
														{
															"nativeSrc": "11897:74:7",
															"nodeType": "YulAssignment",
															"src": "11897:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11963:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11963:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11968:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11968:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11904:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11904:58:7"
																},
																"nativeSrc": "11904:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11904:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11897:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12069:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12069:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942",
																	"nativeSrc": "11980:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11980:88:7"
																},
																"nativeSrc": "11980:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11980:93:7"
															},
															"nativeSrc": "11980:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11980:93:7"
														},
														{
															"nativeSrc": "12082:19:7",
															"nodeType": "YulAssignment",
															"src": "12082:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12093:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12093:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12098:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12098:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12089:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12089:3:7"
																},
																"nativeSrc": "12089:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12089:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12082:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12082:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11741:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11875:3:7",
														"nodeType": "YulTypedName",
														"src": "11875:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11883:3:7",
														"nodeType": "YulTypedName",
														"src": "11883:3:7",
														"type": ""
													}
												],
												"src": "11741:366:7"
											},
											{
												"body": {
													"nativeSrc": "12284:248:7",
													"nodeType": "YulBlock",
													"src": "12284:248:7",
													"statements": [
														{
															"nativeSrc": "12294:26:7",
															"nodeType": "YulAssignment",
															"src": "12294:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12306:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12306:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12317:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12317:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12302:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12302:3:7"
																},
																"nativeSrc": "12302:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12302:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12294:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12294:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12341:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12341:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12352:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12352:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12337:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12337:3:7"
																		},
																		"nativeSrc": "12337:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12337:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12360:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12360:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12366:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12366:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12356:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12356:3:7"
																		},
																		"nativeSrc": "12356:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12356:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12330:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12330:6:7"
																},
																"nativeSrc": "12330:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12330:47:7"
															},
															"nativeSrc": "12330:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12330:47:7"
														},
														{
															"nativeSrc": "12386:139:7",
															"nodeType": "YulAssignment",
															"src": "12386:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12520:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12520:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12394:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12394:124:7"
																},
																"nativeSrc": "12394:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12394:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12386:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12386:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12113:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12264:9:7",
														"nodeType": "YulTypedName",
														"src": "12264:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12279:4:7",
														"nodeType": "YulTypedName",
														"src": "12279:4:7",
														"type": ""
													}
												],
												"src": "12113:419:7"
											},
											{
												"body": {
													"nativeSrc": "12644:74:7",
													"nodeType": "YulBlock",
													"src": "12644:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12666:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12666:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12674:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12674:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12662:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12662:3:7"
																		},
																		"nativeSrc": "12662:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12662:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "12678:32:7",
																		"nodeType": "YulLiteral",
																		"src": "12678:32:7",
																		"type": "",
																		"value": "Not enough balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12655:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12655:6:7"
																},
																"nativeSrc": "12655:56:7",
																"nodeType": "YulFunctionCall",
																"src": "12655:56:7"
															},
															"nativeSrc": "12655:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "12655:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
												"nativeSrc": "12538:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12636:6:7",
														"nodeType": "YulTypedName",
														"src": "12636:6:7",
														"type": ""
													}
												],
												"src": "12538:180:7"
											},
											{
												"body": {
													"nativeSrc": "12870:220:7",
													"nodeType": "YulBlock",
													"src": "12870:220:7",
													"statements": [
														{
															"nativeSrc": "12880:74:7",
															"nodeType": "YulAssignment",
															"src": "12880:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12946:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12946:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12951:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12951:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12887:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12887:58:7"
																},
																"nativeSrc": "12887:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12887:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12880:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13052:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13052:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																	"nativeSrc": "12963:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12963:88:7"
																},
																"nativeSrc": "12963:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12963:93:7"
															},
															"nativeSrc": "12963:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12963:93:7"
														},
														{
															"nativeSrc": "13065:19:7",
															"nodeType": "YulAssignment",
															"src": "13065:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13076:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13076:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13081:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13081:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13072:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13072:3:7"
																},
																"nativeSrc": "13072:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13072:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13065:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13065:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12724:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12858:3:7",
														"nodeType": "YulTypedName",
														"src": "12858:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12866:3:7",
														"nodeType": "YulTypedName",
														"src": "12866:3:7",
														"type": ""
													}
												],
												"src": "12724:366:7"
											},
											{
												"body": {
													"nativeSrc": "13267:248:7",
													"nodeType": "YulBlock",
													"src": "13267:248:7",
													"statements": [
														{
															"nativeSrc": "13277:26:7",
															"nodeType": "YulAssignment",
															"src": "13277:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13289:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13289:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13300:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13300:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13285:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13285:3:7"
																},
																"nativeSrc": "13285:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13285:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13277:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13277:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13324:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13324:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13335:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13335:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13320:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13320:3:7"
																		},
																		"nativeSrc": "13320:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13320:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13343:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13343:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13349:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13349:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13339:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13339:3:7"
																		},
																		"nativeSrc": "13339:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13339:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13313:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13313:6:7"
																},
																"nativeSrc": "13313:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13313:47:7"
															},
															"nativeSrc": "13313:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13313:47:7"
														},
														{
															"nativeSrc": "13369:139:7",
															"nodeType": "YulAssignment",
															"src": "13369:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13503:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13503:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13377:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13377:124:7"
																},
																"nativeSrc": "13377:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13377:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13369:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13369:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13096:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13247:9:7",
														"nodeType": "YulTypedName",
														"src": "13247:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13262:4:7",
														"nodeType": "YulTypedName",
														"src": "13262:4:7",
														"type": ""
													}
												],
												"src": "13096:419:7"
											},
											{
												"body": {
													"nativeSrc": "13675:288:7",
													"nodeType": "YulBlock",
													"src": "13675:288:7",
													"statements": [
														{
															"nativeSrc": "13685:26:7",
															"nodeType": "YulAssignment",
															"src": "13685:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13697:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13697:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13708:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13708:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13693:3:7"
																},
																"nativeSrc": "13693:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13693:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13685:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13685:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13765:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13765:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13778:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13778:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13789:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13789:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13774:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13774:3:7"
																		},
																		"nativeSrc": "13774:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13774:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13721:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13721:43:7"
																},
																"nativeSrc": "13721:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13721:71:7"
															},
															"nativeSrc": "13721:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13721:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13846:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13846:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13859:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13859:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13870:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13870:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13855:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13855:3:7"
																		},
																		"nativeSrc": "13855:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13855:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13802:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13802:43:7"
																},
																"nativeSrc": "13802:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13802:72:7"
															},
															"nativeSrc": "13802:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13802:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13928:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13928:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13941:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13941:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13952:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13952:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13937:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13937:3:7"
																		},
																		"nativeSrc": "13937:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13937:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13884:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13884:43:7"
																},
																"nativeSrc": "13884:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13884:72:7"
															},
															"nativeSrc": "13884:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13884:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13521:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13631:9:7",
														"nodeType": "YulTypedName",
														"src": "13631:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13643:6:7",
														"nodeType": "YulTypedName",
														"src": "13643:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13651:6:7",
														"nodeType": "YulTypedName",
														"src": "13651:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13659:6:7",
														"nodeType": "YulTypedName",
														"src": "13659:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13670:4:7",
														"nodeType": "YulTypedName",
														"src": "13670:4:7",
														"type": ""
													}
												],
												"src": "13521:442:7"
											},
											{
												"body": {
													"nativeSrc": "14013:147:7",
													"nodeType": "YulBlock",
													"src": "14013:147:7",
													"statements": [
														{
															"nativeSrc": "14023:25:7",
															"nodeType": "YulAssignment",
															"src": "14023:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14046:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14046:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14028:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14028:17:7"
																},
																"nativeSrc": "14028:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14028:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14023:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14023:1:7"
																}
															]
														},
														{
															"nativeSrc": "14057:25:7",
															"nodeType": "YulAssignment",
															"src": "14057:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14080:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14080:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14062:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14062:17:7"
																},
																"nativeSrc": "14062:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14062:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14057:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14057:1:7"
																}
															]
														},
														{
															"nativeSrc": "14091:16:7",
															"nodeType": "YulAssignment",
															"src": "14091:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14102:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14102:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14105:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14105:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14098:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14098:3:7"
																},
																"nativeSrc": "14098:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14098:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14091:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14091:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14131:22:7",
																"nodeType": "YulBlock",
																"src": "14131:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14133:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14133:16:7"
																			},
																			"nativeSrc": "14133:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14133:18:7"
																		},
																		"nativeSrc": "14133:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14133:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14123:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14123:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14126:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14126:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14120:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14120:2:7"
																},
																"nativeSrc": "14120:10:7",
																"nodeType": "YulFunctionCall",
																"src": "14120:10:7"
															},
															"nativeSrc": "14117:36:7",
															"nodeType": "YulIf",
															"src": "14117:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13969:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14000:1:7",
														"nodeType": "YulTypedName",
														"src": "14000:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14003:1:7",
														"nodeType": "YulTypedName",
														"src": "14003:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14009:3:7",
														"nodeType": "YulTypedName",
														"src": "14009:3:7",
														"type": ""
													}
												],
												"src": "13969:191:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer amount exceeds whale li\")\n\n        mstore(add(memPtr, 32), \"mit\")\n\n    }\n\n    function abi_encode_t_stringliteral_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough balance to deposit\")\n\n    }\n\n    function abi_encode_t_stringliteral_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw to owner is not allowed\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough balance to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061012a575f3560e01c8063893d20e8116100ab578063b17d718e1161006f578063b17d718e14610322578063c415565f1461033e578063cb765c1d1461035a578063dd62ed3e14610378578063f2fde38b146103a85761012a565b8063893d20e81461027a5780638da5cb5b1461029857806395d89b41146102b65780639960d742146102d4578063a9059cbb146102f25761012a565b8063313ce567116100f2578063313ce567146101e8578063590791f214610206578063677618561461022457806370a0823114610240578063715018a6146102705761012a565b806303f492fc1461012e57806306fdde031461014c578063095ea7b31461016a57806318160ddd1461019a57806323b872dd146101b8575b5f80fd5b6101366103c4565b604051610143919061115d565b60405180910390f35b6101546103cd565b6040516101619190611200565b60405180910390f35b610184600480360381019061017f91906112a8565b61045d565b6040516101919190611300565b60405180910390f35b6101a261047f565b6040516101af919061115d565b60405180910390f35b6101d260048036038101906101cd9190611319565b610488565b6040516101df9190611300565b60405180910390f35b6101f06104b6565b6040516101fd9190611384565b60405180910390f35b61020e6104be565b60405161021b919061115d565b60405180910390f35b61023e6004803603810190610239919061139d565b6104d4565b005b61025a600480360381019061025591906113c8565b6104e6565b604051610267919061115d565b60405180910390f35b61027861052b565b005b61028261053e565b60405161028f9190611402565b60405180910390f35b6102a061054c565b6040516102ad9190611402565b60405180910390f35b6102be610574565b6040516102cb9190611200565b60405180910390f35b6102dc610604565b6040516102e99190611402565b60405180910390f35b61030c600480360381019061030791906112a8565b61062c565b6040516103199190611300565b60405180910390f35b61033c6004803603810190610337919061139d565b61071d565b005b6103586004803603810190610353919061141b565b6107e1565b005b610362610942565b60405161036f919061115d565b60405180910390f35b610392600480360381019061038d9190611459565b610972565b60405161039f919061115d565b60405180910390f35b6103c260048036038101906103bd91906113c8565b6109f4565b005b5f600754905090565b6060600380546103dc906114c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610408906114c4565b80156104535780601f1061042a57610100808354040283529160200191610453565b820191905f5260205f20905b81548152906001019060200180831161043657829003601f168201915b5050505050905090565b5f80610467610a78565b9050610474818585610a7f565b600191505092915050565b5f600254905090565b5f80610492610a78565b905061049f858285610a91565b6104aa858585610b23565b60019150509392505050565b5f6012905090565b5f6104cf6104ca61054c565b6104e6565b905090565b6104dc610c13565b8060078190555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610533610c13565b61053c5f610c9a565b565b5f61054761054c565b905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610583906114c4565b80601f01602080910402602001604051908101604052809291908181526020018280546105af906114c4565b80156105fa5780601f106105d1576101008083540402835291602001916105fa565b820191905f5260205f20905b8154815290600101906020018083116105dd57829003601f168201915b5050505050905090565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60075482111580610670575061064161054c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a690611564565b60405180910390fd5b5f60646001846106bf91906115af565b6106c9919061161d565b90505f81846106d8919061164d565b90506106e5338683610b23565b6107113360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610b23565b60019250505092915050565b610725610c13565b5f8111610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075e906116ca565b60405180910390fd5b80610771336104e6565b10156107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a990611732565b60405180910390fd5b6107de3360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610b23565b50565b6107e9610c13565b6107f161053e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610864575f610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a906117c0565b60405180910390fd5b5b5f82116108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d906116ca565b60405180910390fd5b816108d160065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166104e6565b1015610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090990611828565b60405180910390fd5b61093e60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384610b23565b5050565b5f61096d60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166104e6565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6109fc610c13565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a6c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a639190611402565b60405180910390fd5b610a7581610c9a565b50565b5f33905090565b610a8c8383836001610d5d565b505050565b5f610a9c8484610972565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b1d5781811015610b0e578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b0593929190611846565b60405180910390fd5b610b1c84848484035f610d5d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b93575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b8a9190611402565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c03575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bfa9190611402565b60405180910390fd5b610c0e838383610f2c565b505050565b610c1b610a78565b73ffffffffffffffffffffffffffffffffffffffff16610c3961054c565b73ffffffffffffffffffffffffffffffffffffffff1614610c9857610c5c610a78565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c8f9190611402565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610dcd575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610dc49190611402565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e3d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e349190611402565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f26578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f1d919061115d565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f7c578060025f828254610f70919061187b565b9250508190555061104a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611005578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ffc93929190611846565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611091578060025f82825403925050819055506110db565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611138919061115d565b60405180910390a3505050565b5f819050919050565b61115781611145565b82525050565b5f6020820190506111705f83018461114e565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156111ad578082015181840152602081019050611192565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6111d282611176565b6111dc8185611180565b93506111ec818560208601611190565b6111f5816111b8565b840191505092915050565b5f6020820190508181035f83015261121881846111c8565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61124d82611224565b9050919050565b61125d81611243565b8114611267575f80fd5b50565b5f8135905061127881611254565b92915050565b61128781611145565b8114611291575f80fd5b50565b5f813590506112a28161127e565b92915050565b5f80604083850312156112be576112bd611220565b5b5f6112cb8582860161126a565b92505060206112dc85828601611294565b9150509250929050565b5f8115159050919050565b6112fa816112e6565b82525050565b5f6020820190506113135f8301846112f1565b92915050565b5f805f606084860312156113305761132f611220565b5b5f61133d8682870161126a565b935050602061134e8682870161126a565b925050604061135f86828701611294565b9150509250925092565b5f60ff82169050919050565b61137e81611369565b82525050565b5f6020820190506113975f830184611375565b92915050565b5f602082840312156113b2576113b1611220565b5b5f6113bf84828501611294565b91505092915050565b5f602082840312156113dd576113dc611220565b5b5f6113ea8482850161126a565b91505092915050565b6113fc81611243565b82525050565b5f6020820190506114155f8301846113f3565b92915050565b5f806040838503121561143157611430611220565b5b5f61143e85828601611294565b925050602061144f8582860161126a565b9150509250929050565b5f806040838503121561146f5761146e611220565b5b5f61147c8582860161126a565b925050602061148d8582860161126a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806114db57607f821691505b6020821081036114ee576114ed611497565b5b50919050565b7f5472616e7366657220616d6f756e742065786365656473207768616c65206c695f8201527f6d69740000000000000000000000000000000000000000000000000000000000602082015250565b5f61154e602383611180565b9150611559826114f4565b604082019050919050565b5f6020820190508181035f83015261157b81611542565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115b982611145565b91506115c483611145565b92508282026115d281611145565b915082820484148315176115e9576115e8611582565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61162782611145565b915061163283611145565b925082611642576116416115f0565b5b828204905092915050565b5f61165782611145565b915061166283611145565b925082820390508181111561167a57611679611582565b5b92915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6116b4601d83611180565b91506116bf82611680565b602082019050919050565b5f6020820190508181035f8301526116e1816116a8565b9050919050565b7f4e6f7420656e6f7567682062616c616e636520746f206465706f7369740000005f82015250565b5f61171c601d83611180565b9150611727826116e8565b602082019050919050565b5f6020820190508181035f83015261174981611710565b9050919050565b7f576974686472617720746f206f776e6572206973206e6f7420616c6c6f7765645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f6117aa602183611180565b91506117b582611750565b604082019050919050565b5f6020820190508181035f8301526117d78161179e565b9050919050565b7f4e6f7420656e6f7567682062616c616e636520746f20776974686472617700005f82015250565b5f611812601e83611180565b915061181d826117de565b602082019050919050565b5f6020820190508181035f83015261183f81611806565b9050919050565b5f6060820190506118595f8301866113f3565b611866602083018561114e565b611873604083018461114e565b949350505050565b5f61188582611145565b915061189083611145565b92508282019050808211156118a8576118a7611582565b5b9291505056fea26469706673582212204c3a1d87a0d4dac038f1169bffcf3dc32909b6edd0fcc65ceaf940edcfc54c6864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB17D718E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB17D718E EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC415565F EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xCB765C1D EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A8 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x9960D742 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F2 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x590791F2 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x67761856 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x270 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x3F492FC EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x52B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x282 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x362 PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3DC SWAP1 PUSH2 0x14C4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x408 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x453 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x453 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x436 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x467 PUSH2 0xA78 JUMP JUMPDEST SWAP1 POP PUSH2 0x474 DUP2 DUP6 DUP6 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x492 PUSH2 0xA78 JUMP JUMPDEST SWAP1 POP PUSH2 0x49F DUP6 DUP3 DUP6 PUSH2 0xA91 JUMP JUMPDEST PUSH2 0x4AA DUP6 DUP6 DUP6 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4CF PUSH2 0x4CA PUSH2 0x54C JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4DC PUSH2 0xC13 JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x533 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x53C PUSH0 PUSH2 0xC9A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x547 PUSH2 0x54C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x583 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5AF SWAP1 PUSH2 0x14C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x670 JUMPI POP PUSH2 0x641 PUSH2 0x54C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x1 DUP5 PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x15AF JUMP JUMPDEST PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 PUSH2 0x6D8 SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 POP PUSH2 0x6E5 CALLER DUP7 DUP4 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x711 CALLER PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x725 PUSH2 0xC13 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75E SWAP1 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x771 CALLER PUSH2 0x4E6 JUMP JUMPDEST LT ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A9 SWAP1 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DE CALLER PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xB23 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x53E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x864 JUMPI PUSH0 PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85A SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP3 GT PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89D SWAP1 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x8D1 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E6 JUMP JUMPDEST LT ISZERO PUSH2 0x912 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x909 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93E PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0xB23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x96D PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9FC PUSH2 0xC13 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA75 DUP2 PUSH2 0xC9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA8C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD5D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA9C DUP5 DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB1D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB0E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB05 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD5D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8A SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC03 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC0E DUP4 DUP4 DUP4 PUSH2 0xF2C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC1B PUSH2 0xA78 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC39 PUSH2 0x54C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC98 JUMPI PUSH2 0xC5C PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC4 SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE3D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE34 SWAP2 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF26 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF1D SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF7C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF70 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x104A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1005 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1091 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10DB JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1138 SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1157 DUP2 PUSH2 0x1145 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1170 PUSH0 DUP4 ADD DUP5 PUSH2 0x114E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1192 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11D2 DUP3 PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x11DC DUP2 DUP6 PUSH2 0x1180 JUMP JUMPDEST SWAP4 POP PUSH2 0x11EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x11F5 DUP2 PUSH2 0x11B8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1218 DUP2 DUP5 PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x124D DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125D DUP2 PUSH2 0x1243 JUMP JUMPDEST DUP2 EQ PUSH2 0x1267 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1278 DUP2 PUSH2 0x1254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1287 DUP2 PUSH2 0x1145 JUMP JUMPDEST DUP2 EQ PUSH2 0x1291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A2 DUP2 PUSH2 0x127E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BD PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12CB DUP6 DUP3 DUP7 ADD PUSH2 0x126A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12DC DUP6 DUP3 DUP7 ADD PUSH2 0x1294 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FA DUP2 PUSH2 0x12E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1313 PUSH0 DUP4 ADD DUP5 PUSH2 0x12F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1330 JUMPI PUSH2 0x132F PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x133D DUP7 DUP3 DUP8 ADD PUSH2 0x126A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x134E DUP7 DUP3 DUP8 ADD PUSH2 0x126A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x135F DUP7 DUP3 DUP8 ADD PUSH2 0x1294 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137E DUP2 PUSH2 0x1369 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1397 PUSH0 DUP4 ADD DUP5 PUSH2 0x1375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13BF DUP5 DUP3 DUP6 ADD PUSH2 0x1294 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DD JUMPI PUSH2 0x13DC PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13EA DUP5 DUP3 DUP6 ADD PUSH2 0x126A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13FC DUP2 PUSH2 0x1243 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1415 PUSH0 DUP4 ADD DUP5 PUSH2 0x13F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1431 JUMPI PUSH2 0x1430 PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x143E DUP6 DUP3 DUP7 ADD PUSH2 0x1294 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x144F DUP6 DUP3 DUP7 ADD PUSH2 0x126A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146F JUMPI PUSH2 0x146E PUSH2 0x1220 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147C DUP6 DUP3 DUP7 ADD PUSH2 0x126A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x148D DUP6 DUP3 DUP7 ADD PUSH2 0x126A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14DB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14EE JUMPI PUSH2 0x14ED PUSH2 0x1497 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E742065786365656473207768616C65206C69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D69740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x154E PUSH1 0x23 DUP4 PUSH2 0x1180 JUMP JUMPDEST SWAP2 POP PUSH2 0x1559 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x157B DUP2 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15B9 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C4 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x15D2 DUP2 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1627 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x1632 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1642 JUMPI PUSH2 0x1641 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1657 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x1662 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x167A JUMPI PUSH2 0x1679 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16B4 PUSH1 0x1D DUP4 PUSH2 0x1180 JUMP JUMPDEST SWAP2 POP PUSH2 0x16BF DUP3 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16E1 DUP2 PUSH2 0x16A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F206465706F736974000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x171C PUSH1 0x1D DUP4 PUSH2 0x1180 JUMP JUMPDEST SWAP2 POP PUSH2 0x1727 DUP3 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1749 DUP2 PUSH2 0x1710 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x576974686472617720746F206F776E6572206973206E6F7420616C6C6F776564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17AA PUSH1 0x21 DUP4 PUSH2 0x1180 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B5 DUP3 PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17D7 DUP2 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1812 PUSH1 0x1E DUP4 PUSH2 0x1180 JUMP JUMPDEST SWAP2 POP PUSH2 0x181D DUP3 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183F DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1859 PUSH0 DUP4 ADD DUP7 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x1866 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x1873 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x114E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1885 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x1890 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18A8 JUMPI PUSH2 0x18A7 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C GASPRICE SAR DUP8 LOG0 0xD4 0xDA 0xC0 CODESIZE CALL AND SWAP12 SELFDESTRUCT 0xCF RETURNDATASIZE 0xC3 0x29 MULMOD 0xB6 0xED 0xD0 0xFC 0xC6 0x5C 0xEA 0xF9 BLOCKHASH 0xED 0xCF 0xC5 0x4C PUSH9 0x64736F6C6343000816 STOP CALLER ",
							"sourceMap": "486:2756:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2619:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3141:99:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1521:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1628:81:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2785:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;899:616;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1773:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2105:411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2950:109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2619:98:6;2669:7;2695:15;;2688:22;;2619:98;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;3141:99:6:-;3189:7;3215:18;3225:7;:5;:7::i;:::-;3215:9;:18::i;:::-;3208:25;;3141:99;:::o;1521:101::-;1531:13:0;:11;:13::i;:::-;1609:6:6::1;1591:15;:24;;;;1521:101:::0;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1628:81:6:-;1669:7;1695;:5;:7::i;:::-;1688:14;;1628:81;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2785:98:6:-;2835:7;2861:15;;;;;;;;;;;2854:22;;2785:98;:::o;899:616::-;977:4;1011:15;;1001:6;:25;;:50;;;;1044:7;:5;:7::i;:::-;1030:21;;:10;:21;;;1001:50;993:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;1102:21;1141:3;1136:1;1127:6;:10;;;;:::i;:::-;1126:18;;;;:::i;:::-;1102:42;;1206:22;1240:13;1231:6;:22;;;;:::i;:::-;1206:47;;1319:48;1329:10;1341:9;1352:14;1319:9;:48::i;:::-;1406:53;1416:10;1428:15;;;;;;;;;;;1445:13;1406:9;:53::i;:::-;1504:4;1497:11;;;;899:616;;;;:::o;1773:267::-;1531:13:0;:11;:13::i;:::-;1859:1:6::1;1850:6;:10;1842:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1937:6;1912:21;1922:10;1912:9;:21::i;:::-;:31;;1904:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1987:46;1997:10;2009:15;;;;;;;;;;;2026:6;1987:9;:46::i;:::-;1773:267:::0;:::o;2105:411::-;1531:13:0;:11;:13::i;:::-;2207:10:6::1;:8;:10::i;:::-;2197:20;;:6;:20;;::::0;2193:110:::1;;2249:5;2241:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;2193:110;2329:1;2320:6;:10;2312:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2412:6;2382:26;2392:15;;;;;;;;;;;2382:9;:26::i;:::-;:36;;2374:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2463:46;2473:15;;;;;;;;;;;2490:10;2502:6;2463:9;:46::i;:::-;2105:411:::0;;:::o;2950:109::-;3000:7;3026:26;3036:15;;;;;;;;;;;3026:9;:26::i;:::-;3019:33;;2950:109;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1865:117::-;1974:1;1971;1964:12;2111:126;2148:7;2188:42;2181:5;2177:54;2166:65;;2111:126;;;:::o;2243:96::-;2280:7;2309:24;2327:5;2309:24;:::i;:::-;2298:35;;2243:96;;;:::o;2345:122::-;2418:24;2436:5;2418:24;:::i;:::-;2411:5;2408:35;2398:63;;2457:1;2454;2447:12;2398:63;2345:122;:::o;2473:139::-;2519:5;2557:6;2544:20;2535:29;;2573:33;2600:5;2573:33;:::i;:::-;2473:139;;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:474::-;2959:6;2967;3016:2;3004:9;2995:7;2991:23;2987:32;2984:119;;;3022:79;;:::i;:::-;2984:119;3142:1;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3113:117;3269:2;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3240:118;2891:474;;;;;:::o;3371:90::-;3405:7;3448:5;3441:13;3434:21;3423:32;;3371:90;;;:::o;3467:109::-;3548:21;3563:5;3548:21;:::i;:::-;3543:3;3536:34;3467:109;;:::o;3582:210::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:65;3782:1;3771:9;3767:17;3758:6;3720:65;:::i;:::-;3582:210;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:::-;6423:6;6431;6480:2;6468:9;6459:7;6455:23;6451:32;6448:119;;;6486:79;;:::i;:::-;6448:119;6606:1;6631:53;6676:7;6667:6;6656:9;6652:22;6631:53;:::i;:::-;6621:63;;6577:117;6733:2;6759:53;6804:7;6795:6;6784:9;6780:22;6759:53;:::i;:::-;6749:63;;6704:118;6355:474;;;;;:::o;6835:180::-;6883:77;6880:1;6873:88;6980:4;6977:1;6970:15;7004:4;7001:1;6994:15;7021:320;7065:6;7102:1;7096:4;7092:12;7082:22;;7149:1;7143:4;7139:12;7170:18;7160:81;;7226:4;7218:6;7214:17;7204:27;;7160:81;7288:2;7280:6;7277:14;7257:18;7254:38;7251:84;;7307:18;;:::i;:::-;7251:84;7072:269;7021:320;;;:::o;7347:222::-;7487:34;7483:1;7475:6;7471:14;7464:58;7556:5;7551:2;7543:6;7539:15;7532:30;7347:222;:::o;7575:366::-;7717:3;7738:67;7802:2;7797:3;7738:67;:::i;:::-;7731:74;;7814:93;7903:3;7814:93;:::i;:::-;7932:2;7927:3;7923:12;7916:19;;7575:366;;;:::o;7947:419::-;8113:4;8151:2;8140:9;8136:18;8128:26;;8200:9;8194:4;8190:20;8186:1;8175:9;8171:17;8164:47;8228:131;8354:4;8228:131;:::i;:::-;8220:139;;7947:419;;;:::o;8372:180::-;8420:77;8417:1;8410:88;8517:4;8514:1;8507:15;8541:4;8538:1;8531:15;8558:410;8598:7;8621:20;8639:1;8621:20;:::i;:::-;8616:25;;8655:20;8673:1;8655:20;:::i;:::-;8650:25;;8710:1;8707;8703:9;8732:30;8750:11;8732:30;:::i;:::-;8721:41;;8911:1;8902:7;8898:15;8895:1;8892:22;8872:1;8865:9;8845:83;8822:139;;8941:18;;:::i;:::-;8822:139;8606:362;8558:410;;;;:::o;8974:180::-;9022:77;9019:1;9012:88;9119:4;9116:1;9109:15;9143:4;9140:1;9133:15;9160:185;9200:1;9217:20;9235:1;9217:20;:::i;:::-;9212:25;;9251:20;9269:1;9251:20;:::i;:::-;9246:25;;9290:1;9280:35;;9295:18;;:::i;:::-;9280:35;9337:1;9334;9330:9;9325:14;;9160:185;;;;:::o;9351:194::-;9391:4;9411:20;9429:1;9411:20;:::i;:::-;9406:25;;9445:20;9463:1;9445:20;:::i;:::-;9440:25;;9489:1;9486;9482:9;9474:17;;9513:1;9507:4;9504:11;9501:37;;;9518:18;;:::i;:::-;9501:37;9351:194;;;;:::o;9551:179::-;9691:31;9687:1;9679:6;9675:14;9668:55;9551:179;:::o;9736:366::-;9878:3;9899:67;9963:2;9958:3;9899:67;:::i;:::-;9892:74;;9975:93;10064:3;9975:93;:::i;:::-;10093:2;10088:3;10084:12;10077:19;;9736:366;;;:::o;10108:419::-;10274:4;10312:2;10301:9;10297:18;10289:26;;10361:9;10355:4;10351:20;10347:1;10336:9;10332:17;10325:47;10389:131;10515:4;10389:131;:::i;:::-;10381:139;;10108:419;;;:::o;10533:179::-;10673:31;10669:1;10661:6;10657:14;10650:55;10533:179;:::o;10718:366::-;10860:3;10881:67;10945:2;10940:3;10881:67;:::i;:::-;10874:74;;10957:93;11046:3;10957:93;:::i;:::-;11075:2;11070:3;11066:12;11059:19;;10718:366;;;:::o;11090:419::-;11256:4;11294:2;11283:9;11279:18;11271:26;;11343:9;11337:4;11333:20;11329:1;11318:9;11314:17;11307:47;11371:131;11497:4;11371:131;:::i;:::-;11363:139;;11090:419;;;:::o;11515:220::-;11655:34;11651:1;11643:6;11639:14;11632:58;11724:3;11719:2;11711:6;11707:15;11700:28;11515:220;:::o;11741:366::-;11883:3;11904:67;11968:2;11963:3;11904:67;:::i;:::-;11897:74;;11980:93;12069:3;11980:93;:::i;:::-;12098:2;12093:3;12089:12;12082:19;;11741:366;;;:::o;12113:419::-;12279:4;12317:2;12306:9;12302:18;12294:26;;12366:9;12360:4;12356:20;12352:1;12341:9;12337:17;12330:47;12394:131;12520:4;12394:131;:::i;:::-;12386:139;;12113:419;;;:::o;12538:180::-;12678:32;12674:1;12666:6;12662:14;12655:56;12538:180;:::o;12724:366::-;12866:3;12887:67;12951:2;12946:3;12887:67;:::i;:::-;12880:74;;12963:93;13052:3;12963:93;:::i;:::-;13081:2;13076:3;13072:12;13065:19;;12724:366;;;:::o;13096:419::-;13262:4;13300:2;13289:9;13285:18;13277:26;;13349:9;13343:4;13339:20;13335:1;13324:9;13320:17;13313:47;13377:131;13503:4;13377:131;:::i;:::-;13369:139;;13096:419;;;:::o;13521:442::-;13670:4;13708:2;13697:9;13693:18;13685:26;;13721:71;13789:1;13778:9;13774:17;13765:6;13721:71;:::i;:::-;13802:72;13870:2;13859:9;13855:18;13846:6;13802:72;:::i;:::-;13884;13952:2;13941:9;13937:18;13928:6;13884:72;:::i;:::-;13521:442;;;;;;:::o;13969:191::-;14009:3;14028:20;14046:1;14028:20;:::i;:::-;14023:25;;14062:20;14080:1;14062:20;:::i;:::-;14057:25;;14105:1;14102;14098:9;14091:16;;14126:3;14123:1;14120:10;14117:36;;;14133:18;;:::i;:::-;14117:36;13969:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1274400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"decimals()": "361",
								"depositToReserve(uint256)": "infinite",
								"getMaxWhaleAmount()": "2456",
								"getOwner()": "2572",
								"getOwnerBalance()": "4776",
								"getReserveAddress()": "2604",
								"getReserveBalance()": "4763",
								"name()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"setMaxWhaleAmount(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawFromReserve(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 486,
									"end": 3242,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 893,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 893,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 893,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 606,
									"end": 893,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 606,
									"end": 893,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 606,
									"end": 893,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 606,
									"end": 893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 606,
									"end": 893,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 710,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3432544F4B454E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3432544F4B000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 722,
									"end": 780,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 728,
									"end": 740,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 767,
									"end": 777,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 767,
									"end": 775,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 775,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 775,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 767,
									"end": 777,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 777,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 767,
									"end": 777,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 767,
									"end": 777,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 767,
									"end": 777,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 759,
									"end": 778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 759,
									"end": 778,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 753,
									"end": 755,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 753,
									"end": 778,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 778,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 753,
									"end": 778,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 753,
									"end": 778,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 753,
									"end": 778,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 753,
									"end": 778,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 778,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 742,
									"end": 749,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "F4240"
								},
								{
									"begin": 742,
									"end": 779,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 742,
									"end": 779,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 742,
									"end": 779,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 742,
									"end": 779,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 742,
									"end": 779,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 742,
									"end": 779,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 742,
									"end": 779,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 722,
									"end": 727,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 722,
									"end": 727,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 722,
									"end": 727,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 722,
									"end": 780,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 722,
									"end": 780,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 722,
									"end": 780,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 722,
									"end": 780,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 722,
									"end": 780,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 832,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 832,
									"end": 840,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 840,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 840,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 832,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 842,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 832,
									"end": 842,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 842,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 832,
									"end": 842,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 824,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 824,
									"end": 843,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 818,
									"end": 820,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 818,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 818,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 818,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 818,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 818,
									"end": 843,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 818,
									"end": 843,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 818,
									"end": 843,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 808,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "186A0"
								},
								{
									"begin": 808,
									"end": 844,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 808,
									"end": 844,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 808,
									"end": 844,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 808,
									"end": 844,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 808,
									"end": 844,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 808,
									"end": 844,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 808,
									"end": 844,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 790,
									"end": 805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 790,
									"end": 844,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 790,
									"end": 844,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 790,
									"end": 844,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 790,
									"end": 844,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 872,
									"end": 886,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 854,
									"end": 869,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 854,
									"end": 869,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 854,
									"end": 886,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 606,
									"end": 893,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6690,
									"end": 6695,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 6672,
									"end": 6696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6660,
									"end": 6697,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6840,
									"end": 6842,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6829,
									"end": 6838,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6825,
									"end": 6843,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6921,
									"end": 6922,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6919,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6906,
									"end": 6923,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6897,
									"end": 6903,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 6853,
									"end": 6924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6937,
									"end": 7117,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 6937,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6985,
									"end": 7062,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6982,
									"end": 6983,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6975,
									"end": 7063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7082,
									"end": 7086,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 7079,
									"end": 7080,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 7072,
									"end": 7087,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7106,
									"end": 7110,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7096,
									"end": 7111,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7165,
									"end": 7173,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7217,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7209,
									"end": 7210,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7205,
									"end": 7218,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7184,
									"end": 7218,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7184,
									"end": 7218,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7292,
									"end": 7297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7299,
									"end": 7303,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7323,
									"end": 7329,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7314,
									"end": 7329,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7314,
									"end": 7329,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7347,
									"end": 7352,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7338,
									"end": 7352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7338,
									"end": 7352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7382,
									"end": 7383,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7372,
									"end": 7380,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7369,
									"end": 7384,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7477,
									"end": 7481,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7472,
									"end": 7475,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7468,
									"end": 7482,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 7462,
									"end": 7466,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7459,
									"end": 7483,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 7486,
									"end": 7504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7536,
									"end": 7537,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7526,
									"end": 7534,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7951,
									"end": 7955,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7944,
									"end": 7949,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7940,
									"end": 7956,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7931,
									"end": 7956,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7931,
									"end": 7956,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8001,
									"end": 8005,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7995,
									"end": 7999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7991,
									"end": 8006,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7983,
									"end": 8006,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7983,
									"end": 8006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8054,
									"end": 8062,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 8031,
									"end": 8063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8019,
									"end": 8063,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8019,
									"end": 8063,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8144,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8330,
									"end": 8338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8351,
									"end": 8352,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8342,
									"end": 8352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8342,
									"end": 8352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8353,
									"end": 8358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8353,
									"end": 8358,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8379,
									"end": 8383,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8396,
									"end": 8397,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8397,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8387,
									"end": 8397,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8465,
									"end": 8469,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8513,
									"end": 8514,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8550,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8527,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8517,
									"end": 8527,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8517,
									"end": 8527,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 8579,
									"end": 8587,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8576,
									"end": 8593,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8596,
									"end": 8614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8653,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8642,
									"end": 8643,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8638,
									"end": 8654,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 8629,
									"end": 8654,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8629,
									"end": 8654,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8680,
									"end": 8683,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8673,
									"end": 8678,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8670,
									"end": 8684,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8687,
									"end": 8705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8844,
									"end": 8846,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8834,
									"end": 8842,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8831,
									"end": 8847,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8825,
									"end": 8828,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 8819,
									"end": 8823,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8816,
									"end": 8829,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8812,
									"end": 8848,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8794,
									"end": 8796,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 8784,
									"end": 8792,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8781,
									"end": 8797,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8776,
									"end": 8778,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 8770,
									"end": 8774,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8767,
									"end": 8779,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8763,
									"end": 8798,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8747,
									"end": 8858,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8900,
									"end": 8908,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8894,
									"end": 8898,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 8909,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 8881,
									"end": 8909,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8881,
									"end": 8909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8938,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8928,
									"end": 8933,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8925,
									"end": 8939,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 8980,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8975,
									"end": 8980,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 9053,
									"end": 9056,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9043,
									"end": 9051,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9037,
									"end": 9041,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9034,
									"end": 9035,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 9015,
									"end": 9057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9089,
									"end": 9093,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9084,
									"end": 9087,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9080,
									"end": 9094,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9073,
									"end": 9078,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9070,
									"end": 9095,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 9098,
									"end": 9116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9147,
									"end": 9151,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9140,
									"end": 9145,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9136,
									"end": 9152,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9449,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 9164,
									"end": 9449,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9224,
									"end": 9229,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9248,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 9266,
									"end": 9270,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9248,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 9248,
									"end": 9271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9248,
									"end": 9271,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 9248,
									"end": 9271,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9271,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9271,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9292,
									"end": 9319,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9310,
									"end": 9318,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9292,
									"end": 9319,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 9292,
									"end": 9319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9292,
									"end": 9319,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9292,
									"end": 9319,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9280,
									"end": 9319,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9280,
									"end": 9319,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9338,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9375,
									"end": 9441,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9365,
									"end": 9373,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9359,
									"end": 9363,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9338,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 9338,
									"end": 9442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9338,
									"end": 9442,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9338,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9329,
									"end": 9442,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9329,
									"end": 9442,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9449,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9449,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9449,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9449,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9449,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9455,
									"end": 9865,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9455,
									"end": 9865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9495,
									"end": 9502,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9518,
									"end": 9538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9518,
									"end": 9538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 9518,
									"end": 9538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9518,
									"end": 9538,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9518,
									"end": 9538,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9513,
									"end": 9538,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9513,
									"end": 9538,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9552,
									"end": 9572,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9570,
									"end": 9571,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9552,
									"end": 9572,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 9552,
									"end": 9572,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9552,
									"end": 9572,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9552,
									"end": 9572,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9547,
									"end": 9572,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9547,
									"end": 9572,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9607,
									"end": 9608,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9604,
									"end": 9605,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9600,
									"end": 9609,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9629,
									"end": 9659,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9647,
									"end": 9658,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9629,
									"end": 9659,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 9629,
									"end": 9659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9629,
									"end": 9659,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9629,
									"end": 9659,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9618,
									"end": 9659,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9618,
									"end": 9659,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9808,
									"end": 9809,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9799,
									"end": 9806,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9795,
									"end": 9810,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9792,
									"end": 9793,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9789,
									"end": 9811,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 9769,
									"end": 9770,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9762,
									"end": 9771,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9742,
									"end": 9825,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 9858,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9719,
									"end": 9858,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9838,
									"end": 9856,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 9838,
									"end": 9856,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 9838,
									"end": 9856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9838,
									"end": 9856,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 9838,
									"end": 9856,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 9858,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9719,
									"end": 9858,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9503,
									"end": 9865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9455,
									"end": 9865,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9455,
									"end": 9865,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9455,
									"end": 9865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9455,
									"end": 9865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9455,
									"end": 9865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9911,
									"end": 9914,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9930,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 9948,
									"end": 9949,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9930,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 9930,
									"end": 9950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9930,
									"end": 9950,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 9930,
									"end": 9950,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9925,
									"end": 9950,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9925,
									"end": 9950,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9964,
									"end": 9984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 9982,
									"end": 9983,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9964,
									"end": 9984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 9964,
									"end": 9984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9964,
									"end": 9984,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 9964,
									"end": 9984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 9984,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 9984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10007,
									"end": 10008,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10004,
									"end": 10005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10000,
									"end": 10009,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9993,
									"end": 10009,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9993,
									"end": 10009,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10028,
									"end": 10031,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10025,
									"end": 10026,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10022,
									"end": 10032,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10019,
									"end": 10055,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10019,
									"end": 10055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10019,
									"end": 10055,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10035,
									"end": 10053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10035,
									"end": 10053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 10035,
									"end": 10053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10035,
									"end": 10053,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10035,
									"end": 10053,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10019,
									"end": 10055,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10019,
									"end": 10055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10186,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 10068,
									"end": 10186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10155,
									"end": 10179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10173,
									"end": 10178,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10155,
									"end": 10179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 10155,
									"end": 10179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10155,
									"end": 10179,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10155,
									"end": 10179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10150,
									"end": 10153,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10143,
									"end": 10180,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10186,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10186,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10186,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10341,
									"end": 10345,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10379,
									"end": 10381,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10368,
									"end": 10377,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10364,
									"end": 10382,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10356,
									"end": 10382,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10356,
									"end": 10382,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10392,
									"end": 10463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10460,
									"end": 10461,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10449,
									"end": 10458,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10445,
									"end": 10462,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10436,
									"end": 10442,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10392,
									"end": 10463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 10392,
									"end": 10463,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10392,
									"end": 10463,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10392,
									"end": 10463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10473,
									"end": 10545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10541,
									"end": 10543,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10530,
									"end": 10539,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10526,
									"end": 10544,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10517,
									"end": 10523,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10473,
									"end": 10545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 10473,
									"end": 10545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10473,
									"end": 10545,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10473,
									"end": 10545,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10555,
									"end": 10627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10623,
									"end": 10625,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 10612,
									"end": 10621,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10608,
									"end": 10626,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10599,
									"end": 10605,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10555,
									"end": 10627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 10555,
									"end": 10627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10555,
									"end": 10627,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10555,
									"end": 10627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10733,
									"end": 10737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10771,
									"end": 10773,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10760,
									"end": 10769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10756,
									"end": 10774,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10748,
									"end": 10774,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10748,
									"end": 10774,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10784,
									"end": 10855,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10852,
									"end": 10853,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10841,
									"end": 10850,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10837,
									"end": 10854,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10828,
									"end": 10834,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10784,
									"end": 10855,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 10784,
									"end": 10855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10784,
									"end": 10855,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10784,
									"end": 10855,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 3242,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c3a1d87a0d4dac038f1169bffcf3dc32909b6edd0fcc65ceaf940edcfc54c6864736f6c63430008160033",
									".code": [
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "893D20E8"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "B17D718E"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "B17D718E"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "C415565F"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "CB765C1D"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "893D20E8"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "9960D742"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "590791F2"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "67761856"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "3F492FC"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 3242,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2619,
											"end": 2717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2619,
											"end": 2717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3141,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3141,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1521,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1521,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1628,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1628,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2785,
											"end": 2883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2785,
											"end": 2883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 899,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 899,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 899,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1773,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1773,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2105,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2105,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2950,
											"end": 3059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2950,
											"end": 3059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3196,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3225,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3225,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3225,
											"end": 3232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3232,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3225,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3215,
											"end": 3233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1615,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1591,
											"end": 1615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1615,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1695,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1695,
											"end": 1702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1702,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1695,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2876,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 977,
											"end": 981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1026,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1026,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1001,
											"end": 1051,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1044,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1044,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1044,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1030,
											"end": 1051,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1040,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1030,
											"end": 1051,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1051,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1001,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 993,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 993,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1123,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1127,
											"end": 1133,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1127,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1126,
											"end": 1144,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1126,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1144,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1126,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1206,
											"end": 1228,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1231,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1231,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1231,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1206,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1206,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1329,
											"end": 1339,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1366,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1319,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1319,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1416,
											"end": 1426,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1443,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1406,
											"end": 1459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1459,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1406,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1497,
											"end": 1508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1497,
											"end": 1508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1497,
											"end": 1508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1497,
											"end": 1508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 899,
											"end": 1515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1860,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1842,
											"end": 1894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1842,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1943,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1922,
											"end": 1932,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1912,
											"end": 1933,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1933,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1912,
											"end": 1933,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1943,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1943,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1904,
											"end": 1977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1904,
											"end": 1977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2033,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1997,
											"end": 2007,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2009,
											"end": 2024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2032,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1987,
											"end": 2033,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2033,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1987,
											"end": 2033,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2207,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2207,
											"end": 2217,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2207,
											"end": 2217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2217,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2193,
											"end": 2303,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2241,
											"end": 2292,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2241,
											"end": 2292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2193,
											"end": 2303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2330,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2312,
											"end": 2364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2312,
											"end": 2364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2392,
											"end": 2407,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2382,
											"end": 2408,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2382,
											"end": 2408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2418,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2418,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2374,
											"end": 2453,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2374,
											"end": 2453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2500,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2463,
											"end": 2509,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2463,
											"end": 2509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3026,
											"end": 3052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3052,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3026,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3052,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 968,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 722,
											"end": 968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 803,
											"end": 804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 824,
											"end": 825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 821,
											"end": 834,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 813,
											"end": 926,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 907,
											"end": 910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 903,
											"end": 914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 897,
											"end": 915,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 888,
											"end": 891,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 884,
											"end": 895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 877,
											"end": 916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 849,
											"end": 851,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 842,
											"end": 852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 837,
											"end": 852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 837,
											"end": 852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 946,
											"end": 949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 942,
											"end": 958,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 935,
											"end": 962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 784,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1057,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1170,
											"end": 1173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1198,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1312,
											"end": 1315,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1253,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1391,
											"end": 1397,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1389,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1377,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1333,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1423,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1675,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1676,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1693,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1964,
											"end": 1976,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2230,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2231,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2309,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2418,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2443,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2519,
											"end": 2524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2564,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2600,
											"end": 2605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2573,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2691,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2716,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2837,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2837,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2846,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 2965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3018,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3013,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2995,
											"end": 3002,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 3014,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3022,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3210,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3167,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3220,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3113,
											"end": 3230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3340,
											"end": 3347,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3329,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 3295,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3240,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3454,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3455,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3563,
											"end": 3568,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3548,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3543,
											"end": 3546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3720,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6437,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6478,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6451,
											"end": 6483,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6486,
											"end": 6565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 6676,
											"end": 6683,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 6673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 6631,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6577,
											"end": 6694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6735,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 6804,
											"end": 6811,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 6759,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6835,
											"end": 7015,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6835,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6883,
											"end": 6960,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6880,
											"end": 6881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 6984,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6970,
											"end": 6985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7001,
											"end": 7002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7065,
											"end": 7071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7103,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7096,
											"end": 7100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7104,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7143,
											"end": 7147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7139,
											"end": 7151,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7170,
											"end": 7188,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 7218,
											"end": 7224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7231,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7204,
											"end": 7231,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7204,
											"end": 7231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7288,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7277,
											"end": 7291,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7292,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7307,
											"end": 7325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 7341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7569,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7347,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7521,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E7366657220616D6F756E742065786365656473207768616C65206C69"
										},
										{
											"begin": 7483,
											"end": 7484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7471,
											"end": 7485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7522,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7556,
											"end": 7561,
											"name": "PUSH",
											"source": 7,
											"value": "6D69740000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7551,
											"end": 7553,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7543,
											"end": 7549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7539,
											"end": 7554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7562,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 7802,
											"end": 7804,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7797,
											"end": 7800,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7738,
											"end": 7805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 7805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 7805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 7903,
											"end": 7906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7814,
											"end": 7907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 7934,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7927,
											"end": 7930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 7935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7575,
											"end": 7941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8151,
											"end": 8153,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8140,
											"end": 8149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8136,
											"end": 8154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8200,
											"end": 8209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8194,
											"end": 8198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8190,
											"end": 8210,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8186,
											"end": 8187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8184,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8171,
											"end": 8188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8164,
											"end": 8211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8354,
											"end": 8358,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8228,
											"end": 8359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8220,
											"end": 8359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8220,
											"end": 8359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8372,
											"end": 8552,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 8372,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8420,
											"end": 8497,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8498,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8521,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8514,
											"end": 8515,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8507,
											"end": 8522,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8541,
											"end": 8545,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8538,
											"end": 8539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8546,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8598,
											"end": 8605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8621,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8639,
											"end": 8640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8621,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8621,
											"end": 8641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8621,
											"end": 8641,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8621,
											"end": 8641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 8641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 8641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 8673,
											"end": 8674,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8655,
											"end": 8675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8650,
											"end": 8675,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8650,
											"end": 8675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8710,
											"end": 8711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8703,
											"end": 8712,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8732,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 8750,
											"end": 8761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8732,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8732,
											"end": 8762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8732,
											"end": 8762,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 8732,
											"end": 8762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8911,
											"end": 8912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8902,
											"end": 8909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8913,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8896,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8892,
											"end": 8914,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8872,
											"end": 8873,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 8874,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8845,
											"end": 8928,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 8822,
											"end": 8961,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 8941,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 8941,
											"end": 8959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8959,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 8941,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8961,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 8822,
											"end": 8961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8558,
											"end": 8968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8974,
											"end": 9154,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8974,
											"end": 9154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9099,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9019,
											"end": 9020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9100,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9123,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9116,
											"end": 9117,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9109,
											"end": 9124,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9143,
											"end": 9147,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9140,
											"end": 9141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9148,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9345,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 9160,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 9235,
											"end": 9236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9217,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 9217,
											"end": 9237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9217,
											"end": 9237,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 9217,
											"end": 9237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 9269,
											"end": 9270,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 9251,
											"end": 9271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9271,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 9251,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9246,
											"end": 9271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9246,
											"end": 9271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9280,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9280,
											"end": 9315,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9295,
											"end": 9313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9280,
											"end": 9315,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9280,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9334,
											"end": 9335,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9339,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9345,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9545,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 9351,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9391,
											"end": 9395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9411,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9411,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 9411,
											"end": 9431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9411,
											"end": 9431,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 9411,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9431,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9445,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 9463,
											"end": 9464,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9445,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 9445,
											"end": 9465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9445,
											"end": 9465,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 9445,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9440,
											"end": 9465,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9440,
											"end": 9465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9489,
											"end": 9490,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9486,
											"end": 9487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9491,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9514,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9507,
											"end": 9511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9504,
											"end": 9515,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9538,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 9501,
											"end": 9538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 9518,
											"end": 9536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9538,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 9501,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9545,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9545,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9730,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9551,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9691,
											"end": 9722,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 9687,
											"end": 9688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 9689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9668,
											"end": 9723,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 10102,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9736,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9878,
											"end": 9881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9899,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 9963,
											"end": 9965,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 9958,
											"end": 9961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 9899,
											"end": 9966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 9966,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 9899,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9966,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9975,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 10064,
											"end": 10067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9975,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9975,
											"end": 10068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9975,
											"end": 10068,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 9975,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10093,
											"end": 10095,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10088,
											"end": 10091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10084,
											"end": 10096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10077,
											"end": 10096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10077,
											"end": 10096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 10102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 10102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 10102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 10102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10527,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 10108,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10274,
											"end": 10278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 10314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10301,
											"end": 10310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10370,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10355,
											"end": 10359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10351,
											"end": 10371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10347,
											"end": 10348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10336,
											"end": 10345,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10325,
											"end": 10372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10389,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 10515,
											"end": 10519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10389,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10389,
											"end": 10520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10389,
											"end": 10520,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 10389,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10381,
											"end": 10520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10381,
											"end": 10520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10527,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10533,
											"end": 10712,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10533,
											"end": 10712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10673,
											"end": 10704,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F7567682062616C616E636520746F206465706F736974000000"
										},
										{
											"begin": 10669,
											"end": 10670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10661,
											"end": 10667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10657,
											"end": 10671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10650,
											"end": 10705,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10533,
											"end": 10712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10533,
											"end": 10712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 11084,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 10718,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10860,
											"end": 10863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 10945,
											"end": 10947,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 10940,
											"end": 10943,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 10881,
											"end": 10948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10948,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 10881,
											"end": 10948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10874,
											"end": 10948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10874,
											"end": 10948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10957,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10957,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10957,
											"end": 11050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10957,
											"end": 11050,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 10957,
											"end": 11050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11075,
											"end": 11077,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11070,
											"end": 11073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11066,
											"end": 11078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11059,
											"end": 11078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11059,
											"end": 11078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 11084,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 11084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 11084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 11084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11509,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 11090,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11296,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11283,
											"end": 11292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11343,
											"end": 11352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11337,
											"end": 11341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11333,
											"end": 11353,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11329,
											"end": 11330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11318,
											"end": 11327,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11314,
											"end": 11331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11307,
											"end": 11354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 11497,
											"end": 11501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 11371,
											"end": 11502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11502,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 11371,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11363,
											"end": 11502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11363,
											"end": 11502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11515,
											"end": 11735,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 11515,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11655,
											"end": 11689,
											"name": "PUSH",
											"source": 7,
											"value": "576974686472617720746F206F776E6572206973206E6F7420616C6C6F776564"
										},
										{
											"begin": 11651,
											"end": 11652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11643,
											"end": 11649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11639,
											"end": 11653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11632,
											"end": 11690,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11724,
											"end": 11727,
											"name": "PUSH",
											"source": 7,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11719,
											"end": 11721,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11711,
											"end": 11717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11707,
											"end": 11722,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11700,
											"end": 11728,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11515,
											"end": 11735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11515,
											"end": 11735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 12107,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 11741,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11883,
											"end": 11886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11904,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 11968,
											"end": 11970,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 11963,
											"end": 11966,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 11904,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 11971,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 11904,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 11971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 11971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 12069,
											"end": 12072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 11980,
											"end": 12073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 12073,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 11980,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12098,
											"end": 12100,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12089,
											"end": 12101,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 12107,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 12107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 12107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 12107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12113,
											"end": 12532,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 12113,
											"end": 12532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12279,
											"end": 12283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12317,
											"end": 12319,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12306,
											"end": 12315,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12302,
											"end": 12320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12294,
											"end": 12320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12294,
											"end": 12320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12366,
											"end": 12375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12360,
											"end": 12364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12356,
											"end": 12376,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12353,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12341,
											"end": 12350,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12337,
											"end": 12354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12330,
											"end": 12377,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12394,
											"end": 12525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 12520,
											"end": 12524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12394,
											"end": 12525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 12394,
											"end": 12525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12394,
											"end": 12525,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 12394,
											"end": 12525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12386,
											"end": 12525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12386,
											"end": 12525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12113,
											"end": 12532,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12113,
											"end": 12532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12113,
											"end": 12532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12113,
											"end": 12532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12538,
											"end": 12718,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 12538,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12678,
											"end": 12710,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000"
										},
										{
											"begin": 12674,
											"end": 12675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12666,
											"end": 12672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12662,
											"end": 12676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12655,
											"end": 12711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12538,
											"end": 12718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12538,
											"end": 12718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12866,
											"end": 12869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12887,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 12951,
											"end": 12953,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 12946,
											"end": 12949,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12887,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 12887,
											"end": 12954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12887,
											"end": 12954,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 12887,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12880,
											"end": 12954,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12880,
											"end": 12954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 13052,
											"end": 13055,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 12963,
											"end": 13056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 13056,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 12963,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13081,
											"end": 13083,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13076,
											"end": 13079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13072,
											"end": 13084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13065,
											"end": 13084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13065,
											"end": 13084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12724,
											"end": 13090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13262,
											"end": 13266,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13302,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13289,
											"end": 13298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13285,
											"end": 13303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13277,
											"end": 13303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13277,
											"end": 13303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13349,
											"end": 13358,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13343,
											"end": 13347,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13359,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13335,
											"end": 13336,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13324,
											"end": 13333,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13320,
											"end": 13337,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13313,
											"end": 13360,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13377,
											"end": 13508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 13503,
											"end": 13507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13377,
											"end": 13508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 13377,
											"end": 13508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13377,
											"end": 13508,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 13377,
											"end": 13508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13369,
											"end": 13508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13369,
											"end": 13508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13096,
											"end": 13515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13963,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 13521,
											"end": 13963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13670,
											"end": 13674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13708,
											"end": 13710,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 13697,
											"end": 13706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13685,
											"end": 13711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13685,
											"end": 13711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 13789,
											"end": 13790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13778,
											"end": 13787,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13774,
											"end": 13791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13765,
											"end": 13771,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 13721,
											"end": 13792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13792,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 13721,
											"end": 13792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13802,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 13870,
											"end": 13872,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13859,
											"end": 13868,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13846,
											"end": 13852,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13802,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 13802,
											"end": 13874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13802,
											"end": 13874,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 13802,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13884,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 13952,
											"end": 13954,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13941,
											"end": 13950,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13937,
											"end": 13955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13928,
											"end": 13934,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13884,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 13884,
											"end": 13956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13884,
											"end": 13956,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 13884,
											"end": 13956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13969,
											"end": 14160,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 13969,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14009,
											"end": 14012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14028,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 14046,
											"end": 14047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 14028,
											"end": 14048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14048,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 14028,
											"end": 14048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 14080,
											"end": 14081,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 14062,
											"end": 14082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14057,
											"end": 14082,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14057,
											"end": 14082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14105,
											"end": 14106,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14102,
											"end": 14103,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14098,
											"end": 14107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14091,
											"end": 14107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14091,
											"end": 14107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14126,
											"end": 14129,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14123,
											"end": 14124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14120,
											"end": 14130,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14117,
											"end": 14153,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14117,
											"end": 14153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 14117,
											"end": 14153,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14133,
											"end": 14151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 14133,
											"end": 14151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 14133,
											"end": 14151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14133,
											"end": 14151,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 14133,
											"end": 14151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14117,
											"end": 14153,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 14117,
											"end": 14153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13969,
											"end": 14160,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13969,
											"end": 14160,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13969,
											"end": 14160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13969,
											"end": 14160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13969,
											"end": 14160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"depositToReserve(uint256)": "b17d718e",
							"getMaxWhaleAmount()": "03f492fc",
							"getOwner()": "893d20e8",
							"getOwnerBalance()": "590791f2",
							"getReserveAddress()": "9960d742",
							"getReserveBalance()": "cb765c1d",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMaxWhaleAmount(uint256)": "67761856",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawFromReserve(uint256,address)": "c415565f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxWhaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserveAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserveBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setMaxWhaleAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawFromReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0xcc5ee73495c3882c57a3199085bb2450cb2c20508ae4a923593e63f61b9a9d2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://043c7a0fd91e800eb4b5c245ddc75f604632ce6d1b7b91b40b2616dfa77c51d0\",\"dweb:/ipfs/QmdSjSFrjRLM8S1wKaT2KpjN4vALhTqqRTSczRk6rEUY7p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 943,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_reserveAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 945,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_maxWhaleAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MyToken": [
							1181
						],
						"Ownable": [
							147
						]
					},
					"id": 1182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "350:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1182,
							"sourceUnit": 800,
							"src": "376:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1182,
							"sourceUnit": 148,
							"src": "432:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"506:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "506:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "506:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"513:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "513:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "513:7:6"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1181,
							"linearizedBaseContracts": [
								1181,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "MyToken",
							"nameLocation": "495:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 943,
									"mutability": "mutable",
									"name": "_reserveAddress",
									"nameLocation": "543:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "527:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 942,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "527:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 945,
									"mutability": "mutable",
									"name": "_maxWhaleAmount",
									"nameLocation": "580:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "564:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 944,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "564:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "712:181:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 960,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "728:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "742:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "753:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 965,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 363,
																						"src": "767:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 966,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "767:10:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "759:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 963,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "759:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "759:19:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "753:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 969,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "752:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "742:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "722:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "722:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "722:58:6"
											},
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 973,
														"name": "_maxWhaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "790:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "313030303030",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "808:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000_by_1",
																"typeString": "int_const 100000"
															},
															"value": "100000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "818:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 978,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 363,
																					"src": "832:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																						"typeString": "function () view returns (uint8)"
																					}
																				},
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "832:10:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "824:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 976,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "824:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "824:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "818:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 982,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "817:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "808:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "790:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "790:54:6"
											},
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 986,
														"name": "_reserveAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "854:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 987,
														"name": "reserveAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "872:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "854:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "854:32:6"
											}
										]
									},
									"id": 991,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "3432544f4b454e",
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "670:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3142edf28b37407490ffe9c8b720b8e31b8c094fdfbc9f2373f2ed7ec8e39a10",
														"typeString": "literal_string \"42TOKEN\""
													},
													"value": "42TOKEN"
												},
												{
													"hexValue": "3432544f4b",
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "681:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7aa8959479744147ad4ba10f54df484269417a33897edc8c2d7fd0076cda2354",
														"typeString": "literal_string \"42TOK\""
													},
													"value": "42TOK"
												}
											],
											"id": 954,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 951,
												"name": "ERC20",
												"nameLocations": [
													"664:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "664:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "664:25:6"
										},
										{
											"arguments": [
												{
													"id": 956,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "698:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 957,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 955,
												"name": "Ownable",
												"nameLocations": [
													"690:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "690:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "690:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "626:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "618:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "reserveAddress",
												"nameLocation": "648:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "640:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:46:6"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:0:6"
									},
									"scope": 1181,
									"src": "606:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "983:532:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1002,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "1001:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1003,
																	"name": "_maxWhaleAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "1011:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1001:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1005,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1030:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1034:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1030:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1007,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "1044:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1044:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1030:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1001:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e742065786365656473207768616c65206c696d6974",
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1053:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a",
																"typeString": "literal_string \"Transfer amount exceeds whale limit\""
															},
															"value": "Transfer amount exceeds whale limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0df0365e54834a80542c6e1c33358eee1cc34dcf2eb771ee80a6e0aea00ff7a",
																"typeString": "literal_string \"Transfer amount exceeds whale limit\""
															}
														],
														"id": 1001,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "993:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "993:98:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "993:98:6"
											},
											{
												"assignments": [
													1015
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"mutability": "mutable",
														"name": "reserveAmount",
														"nameLocation": "1110:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "1102:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1014,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1102:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1016,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "1127:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1136:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1019,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1126:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1141:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1126:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1102:42:6"
											},
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "1214:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "1206:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1206:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1025,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "1231:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1026,
														"name": "reserveAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "1240:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1231:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1206:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1030,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1329:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1333:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1329:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "1341:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "transferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "1352:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1029,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1319:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1319:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "1319:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1037,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1416:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1420:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1416:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "_reserveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "1428:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "reserveAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "1445:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1406:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "1406:53:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1504:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1000,
												"id": 1044,
												"nodeType": "Return",
												"src": "1497:11:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "908:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 997,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "959:8:6"
									},
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "925:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "917:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "944:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "936:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:35:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "977:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "977:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:6:6"
									},
									"scope": 1181,
									"src": "899:616:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "1581:41:6",
										"statements": [
											{
												"expression": {
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1053,
														"name": "_maxWhaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "1591:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1054,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "1609:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1591:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "1591:24:6"
											}
										]
									},
									"functionSelector": "67761856",
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1051,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1050,
												"name": "onlyOwner",
												"nameLocations": [
													"1571:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1571:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1571:9:6"
										}
									],
									"name": "setMaxWhaleAmount",
									"nameLocation": "1530:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1556:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1548:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:16:6"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:6"
									},
									"scope": 1181,
									"src": "1521:101:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "1678:31:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1063,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "1695:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1695:7:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1062,
												"id": 1065,
												"nodeType": "Return",
												"src": "1688:14:6"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1637:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1669:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:9:6"
									},
									"scope": 1181,
									"src": "1628:81:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "1832:208:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1075,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "1850:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1859:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1850:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1862:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1842:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1842:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "1842:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1083,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1922:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1926:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1922:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1082,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1912:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1912:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1086,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "1937:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1912:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e636520746f206465706f736974",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1945:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016",
																"typeString": "literal_string \"Not enough balance to deposit\""
															},
															"value": "Not enough balance to deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69e5a9d259de94938d81d7009e6b59e5308514b03b01f0e55706a1cc2be60016",
																"typeString": "literal_string \"Not enough balance to deposit\""
															}
														],
														"id": 1081,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1904:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1904:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "1904:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1092,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1997:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2001:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1997:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1094,
															"name": "_reserveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "2009:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2026:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1091,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1987:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "1987:46:6"
											}
										]
									},
									"functionSelector": "b17d718e",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "onlyOwner",
												"nameLocations": [
													"1822:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1822:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1822:9:6"
										}
									],
									"name": "depositToReserve",
									"nameLocation": "1782:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1807:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1799:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:16:6"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1832:0:6"
									},
									"scope": 1181,
									"src": "1773:267:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "2183:333:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "2197:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1109,
															"name": "getOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2207:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2207:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2197:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"nodeType": "IfStatement",
												"src": "2193:110:6",
												"trueBody": {
													"id": 1117,
													"nodeType": "Block",
													"src": "2227:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2249:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "576974686472617720746f206f776e6572206973206e6f7420616c6c6f7765642e",
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2256:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942",
																			"typeString": "literal_string \"Withdraw to owner is not allowed.\""
																		},
																		"value": "Withdraw to owner is not allowed."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_83d10ff2a53d26c6dedc6215a5e1f343ae1c37d8bc035e8b097f8b7e265e3942",
																			"typeString": "literal_string \"Withdraw to owner is not allowed.\""
																		}
																	],
																	"id": 1112,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2241:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2241:51:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1116,
															"nodeType": "ExpressionStatement",
															"src": "2241:51:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1120,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2320:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2329:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2320:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2332:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2312:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2312:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "2312:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1128,
																		"name": "_reserveAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "2392:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1127,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2382:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2382:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1130,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2412:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2382:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2420:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															},
															"value": "Not enough balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															}
														],
														"id": 1126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2374:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2374:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "2374:79:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "_reserveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "2473:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2490:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2494:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2490:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "2502:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1135,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2463:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2463:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2463:46:6"
											}
										]
									},
									"functionSelector": "c415565f",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1105,
												"name": "onlyOwner",
												"nameLocations": [
													"2173:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2173:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2173:9:6"
										}
									],
									"name": "withdrawFromReserve",
									"nameLocation": "2114:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2142:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2134:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2158:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2150:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:32:6"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2183:0:6"
									},
									"scope": 1181,
									"src": "2105:411:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "2678:39:6",
										"statements": [
											{
												"expression": {
													"id": 1148,
													"name": "_maxWhaleAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "2695:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1149,
												"nodeType": "Return",
												"src": "2688:22:6"
											}
										]
									},
									"functionSelector": "03f492fc",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxWhaleAmount",
									"nameLocation": "2628:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2645:2:6"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2669:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:9:6"
									},
									"scope": 1181,
									"src": "2619:98:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2844:39:6",
										"statements": [
											{
												"expression": {
													"id": 1156,
													"name": "_reserveAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 943,
													"src": "2861:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1157,
												"nodeType": "Return",
												"src": "2854:22:6"
											}
										]
									},
									"functionSelector": "9960d742",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveAddress",
									"nameLocation": "2794:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2811:2:6"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2835:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:9:6"
									},
									"scope": 1181,
									"src": "2785:98:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "3009:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "_reserveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3036:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1164,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3026:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3026:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1167,
												"nodeType": "Return",
												"src": "3019:33:6"
											}
										]
									},
									"functionSelector": "cb765c1d",
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveBalance",
									"nameLocation": "2959:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2976:2:6"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "3000:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:9:6"
									},
									"scope": 1181,
									"src": "2950:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "3198:42:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1175,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3225:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3225:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1174,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3215:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3215:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1173,
												"id": 1178,
												"nodeType": "Return",
												"src": "3208:25:6"
											}
										]
									},
									"functionSelector": "590791f2",
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnerBalance",
									"nameLocation": "3150:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3165:2:6"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3189:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:9:6"
									},
									"scope": 1181,
									"src": "3141:99:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1182,
							"src": "486:2756:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "350:2894:6"
				},
				"id": 6
			}
		}
	}
}